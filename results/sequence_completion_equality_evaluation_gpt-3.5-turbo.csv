original_function,sequence,generated_completion_rule,generated_completion,generated_completion_matches,model_self_consistency_evaluation,model_completion,model_completion_matches
"{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0}","[0, 1, 0, 1]","lambda x: [0, 1, 0, 1][x % 4]",0,True,Y,0,True
"{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 0}","[0, 1, 0, 1]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x%2==1 else 0)",0,True,Y,1,False
"{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2}","[0, 1, 0, 1]",lambda x: (x % 2),0,True,Y,0,True
"{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 2}","[0, 1, 0, 1]",lambda x: x % 2,0,True,Y,0,True
"{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 1}","[1, 0, 1, 0]",lambda x: x % 2,1,,Y,1,
"{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 1}","[1, 0, 1, 0]",lambda x: (x % 2) ^ 1,1,True,Y,1,True
"{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 3}","[1, 0, 1, 0]",lambda x: (x % 2) ^ 1,1,True,Y,1,True
"{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 3}","[1, 0, 1, 0]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x%2==0 else 0)",1,True,Y,1,True
"{'fn': 'lambda x: (4 * x) + 2', 'offset': 0}","[2, 6, 10, 14]",lambda x: (2 * x) + 2,18,False,Y,18,False
"{'fn': 'lambda x: (4 * x) | 2', 'offset': 0}","[2, 6, 10, 14]",lambda x: (2 * x) + (2 * (x - 1)),18,True,Y,18,True
"{'fn': 'lambda x: (4 * x) + 2', 'offset': 1}","[6, 10, 14, 18]",lambda x: (x * 4) + 2,22,True,Y,22,True
"{'fn': 'lambda x: (4 * x) | 2', 'offset': 1}","[6, 10, 14, 18]",lambda x: (4 * x) + 2,22,True,Y,22,True
"{'fn': 'lambda x: (4 * x) + 2', 'offset': 2}","[10, 14, 18, 22]",lambda x: (4 * x) + 10,26,True,Y,26,True
"{'fn': 'lambda x: (4 * x) | 2', 'offset': 2}","[10, 14, 18, 22]",lambda x: (2 * x) + 10,26,False,Y,26,False
"{'fn': 'lambda x: (4 * x) + 2', 'offset': 3}","[14, 18, 22, 26]",lambda x: (4 * x) + 14,30,True,Y,30,True
"{'fn': 'lambda x: (4 * x) | 2', 'offset': 3}","[14, 18, 22, 26]",lambda x: (4 * x) + 14,30,True,Y,30,True
"{'fn': 'lambda x: (3 * x) * 2', 'offset': 0}","[0, 6, 12, 18]",lambda x: (x * 6) % (4+1),24,,N,24,
"{'fn': 'lambda x: (2 * x) * 3', 'offset': 0}","[0, 6, 12, 18]",lambda x: (6 * x) + 0,24,True,Y,24,True
"{'fn': 'lambda x: (3 * x) * 2', 'offset': 1}","[6, 12, 18, 24]",lambda x: (x + 1) * 6,30,True,N,30,True
"{'fn': 'lambda x: (2 * x) * 3', 'offset': 1}","[6, 12, 18, 24]",lambda x: (6 * (x - 1)) + 6,30,True,Y,30,True
"{'fn': 'lambda x: (3 * x) * 2', 'offset': 2}","[12, 18, 24, 30]",lambda x: (6 * x) + 6,36,True,Y,36,True
"{'fn': 'lambda x: (3 * x) * 2', 'offset': 3}","[18, 24, 30, 36]",lambda x: (6 * x) + 18,42,True,Y,42,True
"{'fn': 'lambda x: (2 * x) * 3', 'offset': 3}","[18, 24, 30, 36]",lambda x: (6 * x) + 18,42,True,Y,42,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0}","[1, 3, 5, 7]",lambda x: (2 * x) + 1,9,True,Y,9,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0}","[1, 3, 5, 7]",lambda x: 2 * x + 1,9,True,Y,9,True
"{'fn': 'lambda x: (2 * x) | 1', 'offset': 0}","[1, 3, 5, 7]",lambda x: 2 * x + 1,9,True,Y,9,True
"{'fn': 'lambda x: (2 * x) + 1', 'offset': 0}","[1, 3, 5, 7]",lambda x: 2 * x + 1,9,True,Y,9,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1}","[3, 5, 7, 9]",lambda x: (2 * x) + 3,11,True,Y,11,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1}","[3, 5, 7, 9]",lambda x: (2 * x) + 3,11,True,Y,11,True
"{'fn': 'lambda x: (2 * x) | 1', 'offset': 1}","[3, 5, 7, 9]",lambda x: 2 * x + 3,11,True,Y,11,True
"{'fn': 'lambda x: (2 * x) + 3', 'offset': 0}","[3, 5, 7, 9]",lambda x: 2 * x + 3,11,True,Y,11,True
"{'fn': 'lambda x: (2 * x) + 1', 'offset': 1}","[3, 5, 7, 9]",lambda x: (2 * x) + 3,11,True,Y,11,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2}","[5, 7, 9, 11]",lambda x: 2 * x + 5,13,True,Y,13,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 2}","[5, 7, 9, 11]",lambda x: (2 * x) + 5,13,True,Y,13,True
"{'fn': 'lambda x: (2 * x) | 1', 'offset': 2}","[5, 7, 9, 11]",lambda x: (2 * x) + 5,13,True,Y,13,True
"{'fn': 'lambda x: (2 * x) + 3', 'offset': 1}","[5, 7, 9, 11]",lambda x: (2 * x) + 5,13,True,Y,13,True
"{'fn': 'lambda x: (2 * x) + 1', 'offset': 2}","[5, 7, 9, 11]",lambda x: 2 * x + 5,13,True,Y,13,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 3}","[7, 9, 11, 13]",lambda x: (2 * x) + 7,15,True,Y,15,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3}","[7, 9, 11, 13]",lambda x: (2 * x) + 7,15,True,Y,15,True
"{'fn': 'lambda x: (2 * x) | 1', 'offset': 3}","[7, 9, 11, 13]",lambda x: (2 * x) + 7,15,True,Y,15,True
"{'fn': 'lambda x: (2 * x) + 3', 'offset': 2}","[7, 9, 11, 13]",lambda x: (2 * x) + 7,15,True,Y,15,True
"{'fn': 'lambda x: (2 * x) + 1', 'offset': 3}","[7, 9, 11, 13]",lambda x: (2 * x) + 7,15,True,Y,15,True
"{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1}","[3, 6, 9, 12]",lambda x: (x + 1) * 3,15,True,Y,15,True
"{'fn': 'lambda x: (3 * x) + 3', 'offset': 0}","[3, 6, 9, 12]",lambda x: (3 * x) + 3,15,True,Y,15,True
"{'fn': 'lambda x: (1 * x) * 3', 'offset': 1}","[3, 6, 9, 12]",lambda x: (3 * x) + 3,15,True,Y,15,True
"{'fn': 'lambda x: (3 * x) | 0', 'offset': 1}","[3, 6, 9, 12]",lambda x: 3 + (x * 3),15,True,Y,15,True
"{'fn': 'lambda x: (3 * x) * 1', 'offset': 1}","[3, 6, 9, 12]",lambda x: (3 * x) + 3,15,True,Y,15,True
"{'fn': 'lambda x: (3 * x) + 0', 'offset': 1}","[3, 6, 9, 12]",lambda x: (x * 3) + 3,15,True,Y,15,True
"{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2}","[6, 9, 12, 15]",lambda x: (x * 3) + 6,18,True,Y,18,True
"{'fn': 'lambda x: (3 * x) + 3', 'offset': 1}","[6, 9, 12, 15]",lambda x: 3 * x + 3,18,True,Y,18,True
"{'fn': 'lambda x: (1 * x) * 3', 'offset': 2}","[6, 9, 12, 15]",lambda x: (3 * x) + 6,18,True,Y,18,True
"{'fn': 'lambda x: (3 * x) | 0', 'offset': 2}","[6, 9, 12, 15]",lambda x: (x + 1) * 3,18,True,Y,18,True
"{'fn': 'lambda x: (3 * x) * 1', 'offset': 2}","[6, 9, 12, 15]",lambda x: (3 * x) + 3,18,True,Y,18,True
"{'fn': 'lambda x: (3 * x) + 0', 'offset': 2}","[6, 9, 12, 15]",lambda x: (x * 3) + 3,18,True,Y,18,True
"{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3}","[9, 12, 15, 18]",lambda x: (3 * x) + 6,21,True,Y,21,True
"{'fn': 'lambda x: (3 * x) + 3', 'offset': 2}","[9, 12, 15, 18]",lambda x: (3 * x) + 9,21,True,Y,21,True
"{'fn': 'lambda x: (1 * x) * 3', 'offset': 3}","[9, 12, 15, 18]",lambda x: (3 * x) + 6,21,True,Y,21,True
"{'fn': 'lambda x: (3 * x) | 0', 'offset': 3}","[9, 12, 15, 18]",lambda x: (3 * x) + 9,21,True,Y,21,True
"{'fn': 'lambda x: (3 * x) * 1', 'offset': 3}","[9, 12, 15, 18]",lambda x: (3 * x) + 9,21,True,Y,21,True
"{'fn': 'lambda x: (3 * x) + 0', 'offset': 3}","[9, 12, 15, 18]",lambda x: (1 * x) * 3 + 6,21,True,Y,21,True
"{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0}","[0, 3, 6, 9]",lambda x: x * 3,12,True,Y,12,True
"{'fn': 'lambda x: (1 * x) * 3', 'offset': 0}","[0, 3, 6, 9]",lambda x: (3 * x) * 1,12,True,Y,12,True
"{'fn': 'lambda x: (3 * x) | 0', 'offset': 0}","[0, 3, 6, 9]",lambda x: 3 * x,12,True,Y,12,True
"{'fn': 'lambda x: (3 * x) * 1', 'offset': 0}","[0, 3, 6, 9]",lambda x: (3 * x) + 0,12,True,Y,12,True
"{'fn': 'lambda x: (3 * x) + 0', 'offset': 0}","[0, 3, 6, 9]",lambda x: 3 * x,12,True,Y,12,True
"{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 0}","[0, 1, 2, 0]",lambda x: x % 3,2,False,Y,1,True
"{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 0}","[0, 1, 2, 0]",lambda x: (x * (x - 3)) % (2+1),1,,Y,3,
"{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3}","[0, 1, 2, 0]","(lambda a:lambda v:a(a,v))(lambda fn,x:0 if x==0 else (x-1) % 3 + 1)",-3,,Y,1,
"{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 1}","[1, 2, 0, 1]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 2 if x==1 else 0 if x==2 else 1 if x==3 else fn(fn,x-4))",2,False,"Y (Note: this is a recursive function that generates the sequence 1, 2, 0, 1 repeatedly)",2,False
"{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 2}","[2, 0, 1, 2]",lambda x: (x ** 2 - 3 * x + 2) % 3,0,,Y,0,
"{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 2}","[2, 0, 1, 2]","(lambda a:lambda v:a(a,v))(lambda fn,x:2 if x==0 else 0 if x==1 else 1 if x==2 else fn(fn,x-1) + fn(fn,x-2) + fn(fn,x-3))",0,,Y,5,
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 1}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x],5,,Y,5,
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: (1 * x) + 1,5,True,Y,5,True
"{'fn': 'lambda x: (1 * x) + 0', 'offset': 1}","[1, 2, 3, 4]",lambda x: 1 + (1 * x),5,True,Y,5,True
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 1}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: (1 * x) + 1', 'offset': 0}","[1, 2, 3, 4]",lambda x: (x * (x + 1)) // 2,5,,Y,5,
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,Y,5,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1}","[2, 3, 4, 5]",lambda x: (1 * x) + 2,6,True,Y,6,True
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2}","[2, 3, 4, 5]",lambda x: x + 2,6,True,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1}","[2, 3, 4, 5]",lambda x: x + 1,6,True,Y,6,True
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 2}","[2, 3, 4, 5]",lambda x: x + 2,6,True,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1}","[2, 3, 4, 5]",lambda x: x + 2,6,True,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1}","[2, 3, 4, 5]",lambda x: (1 * x) + 2,6,True,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 1}","[2, 3, 4, 5]",lambda x: (1 * x) + 2,6,True,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 1}","[2, 3, 4, 5]",lambda x: x + 2,6,True,Y,6,True
"{'fn': 'lambda x: (1 * x) + 0', 'offset': 2}","[2, 3, 4, 5]",lambda x: (1 * x) + 2,6,True,Y,6,True
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 2}","[2, 3, 4, 5]",lambda x: (1 * x) + 2,6,True,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1}","[2, 3, 4, 5]",lambda x: (1 * x) + 2,6,True,Y,6,True
"{'fn': 'lambda x: (1 * x) + 2', 'offset': 0}","[2, 3, 4, 5]",lambda x: (1 * x) + 2,6,True,Y,6,True
"{'fn': 'lambda x: (1 * x) + 1', 'offset': 1}","[2, 3, 4, 5]",lambda x: x + 2,6,True,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3}","[4, 5, 7, 8]","(lambda a:lambda v:a(a,v))(lambda fn,x:4 if x==0 else 1 * x + fn(fn,x-1) + 1)",10,,Y,10,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'offset': 2}","[4, 5, 7, 8]",lambda x: (x + 1) ^ 3,10,,N,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3}","[4, 5, 7, 8]",lambda x: x + 3 if x > 1 else x + 4,10,,Y,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 2}","[3, 4, 5, 7]",lambda x: x ** 2 - 5 * x + 8,11,,N,10,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 2}","[3, 4, 5, 7]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1) or i % (3 + 1)][x],11,False,Y,8,True
"{'fn': 'lambda x: (4 * x) | 3', 'offset': 0}","[3, 7, 11, 15]",lambda x: (4 * x) - 5,19,True,Y,19,True
"{'fn': 'lambda x: (4 * x) + 3', 'offset': 0}","[3, 7, 11, 15]",lambda x: (4 * x) - 5,19,True,Y,19,True
"{'fn': 'lambda x: (3 * x) | 3', 'offset': 1}","[3, 7, 11, 15]",lambda x: (1 * x) * 4 - 1,19,True,Y,19,True
"{'fn': 'lambda x: (4 * x) | 3', 'offset': 1}","[7, 11, 15, 19]",lambda x: (4 * x) + 3,23,True,Y,23,True
"{'fn': 'lambda x: (4 * x) + 3', 'offset': 1}","[7, 11, 15, 19]",lambda x: (4 * x) + 3,23,True,Y,23,True
"{'fn': 'lambda x: (4 * x) | 3', 'offset': 2}","[11, 15, 19, 23]",lambda x: (4 * x) + 7,27,True,Y,27,True
"{'fn': 'lambda x: (4 * x) + 3', 'offset': 2}","[11, 15, 19, 23]",lambda x: (4 * x) + 11,27,True,Y,27,True
"{'fn': 'lambda x: (4 * x) | 3', 'offset': 3}","[15, 19, 23, 27]",lambda x: (4 * x) + 11,31,True,Y,31,True
"{'fn': 'lambda x: (4 * x) + 3', 'offset': 3}","[15, 19, 23, 27]",lambda x: (4 * x) + 15,31,True,Y,31,True
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0}","[0, 1, 2, 3]",lambda x: x,4,True,Y,4,True
"{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0}","[0, 1, 2, 3]",lambda x: x,4,True,Y,4,True
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 0}","[0, 1, 2, 3]",lambda x: x,4,True,Y,4,True
"{'fn': 'lambda x: (1 * x) + 0', 'offset': 0}","[0, 1, 2, 3]",lambda x: x,4,True,Y,4,True
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 0}","[0, 1, 2, 3]",lambda x: x,4,True,Y,4,True
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3}","[3, 4, 5, 6]",lambda x: x + 3,7,True,Y,7,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2}","[3, 4, 5, 6]",lambda x: (1 * x) + 2,7,True,Y,7,True
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 3}","[3, 4, 5, 6]",lambda x: x + 3,7,True,Y,7,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2}","[3, 4, 5, 6]",lambda x: x + 3,7,True,Y,7,True
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2}","[3, 4, 5, 6]",lambda x: (x + 3),7,True,Y,7,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2}","[3, 4, 5, 6]",lambda x: x + 2,7,True,Y,7,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 2}","[3, 4, 5, 6]",lambda x: (x + 3),7,True,Y,7,True
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 3}","[3, 4, 5, 6]",lambda x: x + 3,7,True,Y,7,True
"{'fn': 'lambda x: (1 * x) + 3', 'offset': 0}","[3, 4, 5, 6]",lambda x: x + 3,7,True,Y,7,True
"{'fn': 'lambda x: (1 * x) + 2', 'offset': 1}","[3, 4, 5, 6]",lambda x: (1 * x) + 3,7,True,Y,7,True
"{'fn': 'lambda x: (1 * x) + 1', 'offset': 2}","[3, 4, 5, 6]",lambda x: x + 2,7,True,Y,7,True
"{'fn': 'lambda x: (4 * x) + 0', 'offset': 0}","[0, 4, 8, 12]",lambda x: 4 * x,16,True,Y,16,True
"{'fn': 'lambda x: (2 * x) * 2', 'offset': 0}","[0, 4, 8, 12]",lambda x: 4 * x,16,True,Y,16,True
"{'fn': 'lambda x: (4 * x) * 1', 'offset': 0}","[0, 4, 8, 12]",lambda x: 4 * x,16,True,Y,16,True
"{'fn': 'lambda x: (4 * x) | 0', 'offset': 0}","[0, 4, 8, 12]",lambda x: (4 * x) + 0,16,True,Y,16,True
"{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0}","[0, 4, 8, 12]",lambda x: (4 * x) + 0,16,True,Y,16,True
"{'fn': 'lambda x: (4 * x) + 0', 'offset': 1}","[4, 8, 12, 16]",lambda x: (x + 1) * 4,20,True,N,20,True
"{'fn': 'lambda x: (2 * x) * 2', 'offset': 1}","[4, 8, 12, 16]",lambda x: (4 * x) + 0,20,True,Y,20,True
"{'fn': 'lambda x: (4 * x) * 1', 'offset': 1}","[4, 8, 12, 16]",lambda x: (x + 1) * 4,20,True,N,20,True
"{'fn': 'lambda x: (4 * x) | 0', 'offset': 1}","[4, 8, 12, 16]",lambda x: (4 * x) + 4,20,True,Y,20,True
"{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1}","[4, 8, 12, 16]",lambda x: (4 * x) + 0,20,True,Y,20,True
"{'fn': 'lambda x: (4 * x) + 0', 'offset': 2}","[8, 12, 16, 20]",lambda x: (4 * x) + 8,24,True,Y,24,True
"{'fn': 'lambda x: (2 * x) * 2', 'offset': 2}","[8, 12, 16, 20]",lambda x: (4 * x) + 8,24,True,Y,24,True
"{'fn': 'lambda x: (4 * x) * 1', 'offset': 2}","[8, 12, 16, 20]",lambda x: (4 * x) + 8,24,True,Y,24,True
"{'fn': 'lambda x: (4 * x) | 0', 'offset': 2}","[8, 12, 16, 20]",lambda x: (4 * x) + 8,24,True,Y,24,True
"{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2}","[8, 12, 16, 20]",lambda x: (4 * x) + 8,24,True,Y,24,True
"{'fn': 'lambda x: (4 * x) + 0', 'offset': 3}","[12, 16, 20, 24]",lambda x: (4 * x) + 8,28,True,Y,28,True
"{'fn': 'lambda x: (2 * x) * 2', 'offset': 3}","[12, 16, 20, 24]",lambda x: (4 * x) + 12,28,True,Y,28,True
"{'fn': 'lambda x: (4 * x) * 1', 'offset': 3}","[12, 16, 20, 24]",lambda x: (4 * x) + 12,28,True,Y,28,True
"{'fn': 'lambda x: (4 * x) | 0', 'offset': 3}","[12, 16, 20, 24]",lambda x: (4 * x) + 12,28,True,Y,28,True
"{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3}","[12, 16, 20, 24]",lambda x: (4 * x) + 12,28,True,Y,28,True
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]', 'offset': 0}","[1, 2, 3, 5]",lambda x: x if x < 3 else (x-1) + (x-2),8,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'offset': 0}","[1, 2, 3, 5]",lambda x: x + (1 if x >= 3 else x // 2),8,,Y,7,
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'offset': 1}","[2, 3, 5, 6]",lambda x: (1 * x) + (2 * (x // 2)),10,,Y,7,
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'offset': 1}","[2, 3, 5, 6]",lambda x: x + (x // 2),8,,Y,8,
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]', 'offset': 1}","[2, 3, 5, 6]",lambda x: (x + 1) * (x % 2 + 2),8,,Y,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'offset': 1}","[2, 3, 5, 6]",lambda x: (x + 1) + (x // 2),8,,N,8,
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'offset': 2}","[3, 5, 6, 7]",lambda x: x ** 2 - 5 * x + 8,8,,N,8,
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'offset': 2}","[3, 5, 6, 7]",lambda x: [i for i in range(100) if i % (2 + 1) and i % (4 + 1) and i % (1 + 1)][x],8,,Y,8,
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]', 'offset': 2}","[3, 5, 6, 7]",lambda x: (x ** 2 + 1) // 2,8,,N,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'offset': 2}","[3, 5, 6, 7]",lambda x: (x ** 2 + 1) // 2,8,,N,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'offset': 3}","[5, 6, 7, 9]",lambda x: x ** 2 - 14 * x + 59,12,,Y,10,
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]', 'offset': 3}","[5, 6, 7, 9]","(lambda a:lambda v:a(a,v))(lambda fn,x:5 if x==0 else 1 + fn(fn,x-1) if x < 3 else 2 + fn(fn,x-1))",12,False,"Y (Note: this is a recursive function that generates the sequence 5, 6, 7, 9)",10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'offset': 3}","[5, 6, 7, 9]",lambda x: (1 * x) + 4 if x < 3 else (1 * x) + 5,12,,N,10,
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3}","[4, 5, 6, 7]",lambda x: x + 4,8,True,Y,8,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3}","[4, 5, 6, 7]",lambda x: (1 * x) + 3,8,True,Y,8,True
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3}","[4, 5, 6, 7]",lambda x: x + 4,8,True,Y,8,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3}","[4, 5, 6, 7]",lambda x: x + 4,8,True,Y,8,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3}","[4, 5, 6, 7]",lambda x: (1 * x) + 3,8,True,Y,8,True
"{'fn': 'lambda x: (1 * x) + 3', 'offset': 1}","[4, 5, 6, 7]",lambda x: (1 * x) + 4,8,True,Y,8,True
"{'fn': 'lambda x: (1 * x) + 2', 'offset': 2}","[4, 5, 6, 7]",lambda x: (1 * x) + 3,8,True,Y,8,True
"{'fn': 'lambda x: (1 * x) + 1', 'offset': 3}","[4, 5, 6, 7]",lambda x: x + 4,8,True,Y,8,True
"{'fn': 'lambda x: (1 * x) | 3', 'offset': 2}","[3, 3, 7, 7]",lambda x: (2 * (x // 2)) + 3 + (4 * (x % 2)),15,,Y,11,
"{'fn': 'lambda x: (2 * x) | 3', 'offset': 0}","[3, 3, 7, 7]",lambda x: (4 * x - 5) ** 0 + (x % 2) * 4,15,,Y,11,
"{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0}","[1, 4, 16, 64]",lambda x: 4 ** x,256,True,N,256,True
"{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0}","[1, 4, 16, 64]",lambda x: (4 ** x),256,True,Y,256,True
"{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 1}","[4, 16, 64, 256]",lambda x: 4 * (4 ** x),1024,True,Y,1024,True
"{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 1}","[4, 16, 64, 256]",lambda x: (4 ** x),1024,True,Y,1024,True
"{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 2}","[16, 64, 256, 1024]",lambda x: (4 ** x) * 16,4096,True,Y,4096,True
"{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2}","[16, 64, 256, 1024]",lambda x: 16 * (4 ** (x-1)),4096,True,Y,4096,True
"{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 3}","[64, 256, 1024, 4096]",lambda x: 4 ** (x + 2),16384,True,Y,16384,True
"{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 3}","[64, 256, 1024, 4096]",lambda x: 4 ** (x + 2),16384,True,Y,16384,True
"{'fn': 'lambda x: (4 * x) + 1', 'offset': 0}","[1, 5, 9, 13]",lambda x: (4 * x) + 1,17,True,Y,17,True
"{'fn': 'lambda x: (4 * x) | 1', 'offset': 0}","[1, 5, 9, 13]",lambda x: (4 * x) + 1,17,True,Y,17,True
"{'fn': 'lambda x: (4 * x) + 1', 'offset': 1}","[5, 9, 13, 17]",lambda x: (4 * x) + 1,21,True,Y,21,True
"{'fn': 'lambda x: (4 * x) | 1', 'offset': 1}","[5, 9, 13, 17]",lambda x: (4 * x) + 1,21,True,Y,21,True
"{'fn': 'lambda x: (4 * x) + 1', 'offset': 2}","[9, 13, 17, 21]",lambda x: (4 * x) + 5,25,True,Y,25,True
"{'fn': 'lambda x: (4 * x) | 1', 'offset': 2}","[9, 13, 17, 21]",lambda x: (4 * x) + 5,25,True,Y,25,True
"{'fn': 'lambda x: (4 * x) + 1', 'offset': 3}","[13, 17, 21, 25]",lambda x: (4 * x) + 13,29,True,Y,29,True
"{'fn': 'lambda x: (4 * x) | 1', 'offset': 3}","[13, 17, 21, 25]",lambda x: (4 * x) + 9,29,True,Y,29,True
"{'fn': 'lambda x: (2 * x) * 1', 'offset': 1}","[2, 4, 6, 8]",lambda x: (x + 1) * 2,10,True,Y,10,True
"{'fn': 'lambda x: (2 * x) + 2', 'offset': 0}","[2, 4, 6, 8]",lambda x: (x * 2) + 2,10,True,Y,10,True
"{'fn': 'lambda x: (1 * x) * 2', 'offset': 1}","[2, 4, 6, 8]",lambda x: 2 * (x + 1),10,True,Y,10,True
"{'fn': 'lambda x: (2 * x) ** 1', 'offset': 1}","[2, 4, 6, 8]",lambda x: (1 * x) * 2 + 2,10,True,Y,10,True
"{'fn': 'lambda x: (2 * x) | 0', 'offset': 1}","[2, 4, 6, 8]",lambda x: (x * 2) + 2,10,True,Y,10,True
"{'fn': 'lambda x: (2 * x) + 0', 'offset': 1}","[2, 4, 6, 8]",lambda x: (x + 1) * 2,10,True,Y,10,True
"{'fn': 'lambda x: (2 * x) * 1', 'offset': 2}","[4, 6, 8, 10]",lambda x: (x * 2) + 4,12,True,Y,12,True
"{'fn': 'lambda x: (2 * x) + 2', 'offset': 1}","[4, 6, 8, 10]",lambda x: (2 * x) + 4,12,True,Y,12,True
"{'fn': 'lambda x: (1 * x) * 2', 'offset': 2}","[4, 6, 8, 10]",lambda x: (2 * x) + 4,12,True,Y,12,True
"{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2}","[4, 6, 8, 10]",lambda x: 2 * x + 2,12,True,Y,12,True
"{'fn': 'lambda x: (2 * x) | 0', 'offset': 2}","[4, 6, 8, 10]",lambda x: (x * 2) + 2,12,True,Y,12,True
"{'fn': 'lambda x: (2 * x) + 0', 'offset': 2}","[4, 6, 8, 10]",lambda x: (x * 2) + 4,12,True,Y,12,True
"{'fn': 'lambda x: (2 * x) * 1', 'offset': 3}","[6, 8, 10, 12]",lambda x: (2 * x) + 6,14,True,Y,14,True
"{'fn': 'lambda x: (2 * x) + 2', 'offset': 2}","[6, 8, 10, 12]",lambda x: (x * 2) + 6,14,True,Y,14,True
"{'fn': 'lambda x: (1 * x) * 2', 'offset': 3}","[6, 8, 10, 12]",lambda x: (x + 2) * 2,14,True,Y,14,True
"{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3}","[6, 8, 10, 12]",lambda x: 2 * x + 6,14,True,Y,14,True
"{'fn': 'lambda x: (2 * x) | 0', 'offset': 3}","[6, 8, 10, 12]",lambda x: (x * 2) + 6,14,True,Y,14,True
"{'fn': 'lambda x: (2 * x) + 0', 'offset': 3}","[6, 8, 10, 12]",lambda x: (2 * x) + 6,14,True,Y,14,True
"{'fn': 'lambda x: (2 * x) * 1', 'offset': 0}","[0, 2, 4, 6]",lambda x: (x * 2) % (7+1),8,False,Y,8,False
"{'fn': 'lambda x: (1 * x) * 2', 'offset': 0}","[0, 2, 4, 6]",lambda x: (2 * x) % 8,8,False,Y,8,False
"{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0}","[0, 2, 4, 6]",lambda x: (1 * x) * 2,8,True,Y,8,True
"{'fn': 'lambda x: (2 * x) | 0', 'offset': 0}","[0, 2, 4, 6]",lambda x: (2 * x) + 0,8,True,Y,8,True
"{'fn': 'lambda x: (2 * x) + 0', 'offset': 0}","[0, 2, 4, 6]",lambda x: x * 2,8,True,Y,8,True
"{'fn': 'lambda x: (1 * x) + 3', 'offset': 2}","[5, 6, 7, 8]",lambda x: (1 * x) + 5,9,True,Y,9,True
"{'fn': 'lambda x: (1 * x) + 2', 'offset': 3}","[5, 6, 7, 8]",lambda x: (1 * x) + 5,9,True,Y,9,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'offset': 0}","[1, 2, 4, 5]",lambda x: (2 ** x) + (x // 3),7,,Y,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 0}","[1, 2, 4, 5]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x],7,,Y,6,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'offset': 1}","[2, 4, 5, 7]",lambda x: (x * 2) + (x // 2),8,,Y,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 1}","[2, 4, 5, 7]",lambda x: (2 * x) + (x // 2),10,,Y,9,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'offset': 3}","[5, 7, 8, 10]",lambda x: (x // 2) * 3 + (x % 2) * 2 + 3,11,,Y,12,
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 3}","[5, 7, 8, 10]",lambda x: (x * 2) + (1 if x > 1 else 0),11,,Y,12,
