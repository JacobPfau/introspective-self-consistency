[2023-06-04 13:09:52,872][src.utils][INFO] - Git sha: e8bec21cfa71ad661713210cc339b8cbb756752c
[2023-06-04 13:09:52,885][src.utils][INFO] - Changed files: ['conf/task/compute_dependence_with_base_changes.yaml', 'src/evals/check_self_consistency.py']
[2023-06-04 13:09:52,896][src.utils][INFO] - Git diff:
diff --git a/conf/task/compute_dependence_with_base_changes.yaml b/conf/task/compute_dependence_with_base_changes.yaml
index 88d72ea..7e1cd39 100644
--- a/conf/task/compute_dependence_with_base_changes.yaml
+++ b/conf/task/compute_dependence_with_base_changes.yaml
@@ -1,6 +1,6 @@
 # @package _global_
 task: compute_dependence_with_base_changes
-sequence_type: binary
+sequence_type: integer
 model: gpt-3.5-turbo
 num_shots: 4
 on_ambiguous_sequences: true
diff --git a/src/evals/check_self_consistency.py b/src/evals/check_self_consistency.py
index 59ee99c..64e232d 100644
--- a/src/evals/check_self_consistency.py
+++ b/src/evals/check_self_consistency.py
@@ -99,7 +99,7 @@ def self_consistency_evaluation(
         try:
             fn = parse_explanation(explanation)
         except BaseException:
-            logger.info(f"invalid explanation: {explanation}")
+            logger.info(f"invalid explanation - couldn't parse: {explanation}")
             total_results.append(result)
             continue
 
[2023-06-04 13:09:54,978][src.evals.sequence_completion_with_base_change][INFO] - Total: 0
[2023-06-04 13:09:54,978][src.evals.sequence_completion_with_base_change][INFO] - Sequence: 1,3,5,7
[2023-06-04 13:09:54,979][src.evals.prompts.explanation_prompt][INFO] - [{'role': 'system', 'content': '\nHere are some examples of sequence explanations, i.e. python functions\nwhich generated the preceding sequences base 10. Assume the first number was generated by f(0),\nthe second by f(1), the third by f(2), and so on.\n'}, {'role': 'user', 'content': '8000,15625,27000,42875'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (5 * (x + 4)) ** 3'}, {'role': 'user', 'content': '40,46,52,58'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (6 * (x + 6)) + 4'}, {'role': 'user', 'content': '5,6,7,8'}, {'role': 'assistant', 'content': 'Explanation: lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][(x + 4)]'}, {'role': 'user', 'content': '3,4,5,6'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (1 * (x + 1)) + 2'}, {'role': 'user', 'content': 'In your opinion, what is the most likely function which generated the following sequence?\nAssume the first number was generated by f(0), the second by f(1), the third by f(2), and so on.\nThe function should output numbers in the same representation as the sequence.\nGive your response in the format:\nExplanation: <function>\n\nThe sequence is in base 10.\nQ: 1,3,5,7'}]
[2023-06-04 13:09:54,979][src.evals.check_self_consistency][INFO] - Generating a continuation and explanation
[2023-06-04 13:09:55,295][src.evals.check_self_consistency][INFO] - continuation: 9
[2023-06-04 13:09:55,666][src.evals.check_self_consistency][INFO] - explanation: Explanation: lambda x: (2 * x) + 1
[2023-06-04 13:09:55,666][src.evals.check_self_consistency][INFO] - invalid explanation: Explanation: lambda x: (2 * x) + 1
[2023-06-04 13:09:55,666][src.evals.sequence_completion_with_base_change][INFO] - Total: 1
[2023-06-04 13:09:55,666][src.evals.sequence_completion_with_base_change][INFO] - Sequence: 3,5,7,9
[2023-06-04 13:09:55,668][src.evals.prompts.explanation_prompt][INFO] - [{'role': 'system', 'content': '\nHere are some examples of sequence explanations, i.e. python functions\nwhich generated the preceding sequences base 10. Assume the first number was generated by f(0),\nthe second by f(1), the third by f(2), and so on.\n'}, {'role': 'user', 'content': '2,3,4,5'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (1 * (x + 2)) ** 1'}, {'role': 'user', 'content': '6,7,8,9'}, {'role': 'assistant', 'content': 'Explanation: lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][(x + 5)]'}, {'role': 'user', 'content': '16,24,32,40'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (4 * (x + 2)) * 2'}, {'role': 'user', 'content': '32768,100000,248832,537824'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (2 * (x + 4)) ** 5'}, {'role': 'user', 'content': 'In your opinion, what is the most likely function which generated the following sequence?\nAssume the first number was generated by f(0), the second by f(1), the third by f(2), and so on.\nThe function should output numbers in the same representation as the sequence.\nGive your response in the format:\nExplanation: <function>\n\nThe sequence is in base 10.\nQ: 3,5,7,9'}]
[2023-06-04 13:09:55,669][src.evals.check_self_consistency][INFO] - Generating a continuation and explanation
[2023-06-04 13:09:55,915][src.evals.check_self_consistency][INFO] - continuation: 11
[2023-06-04 13:09:56,380][src.evals.check_self_consistency][INFO] - explanation: Explanation: lambda x: 2 * x + 3
[2023-06-04 13:09:56,381][src.evals.check_self_consistency][INFO] - invalid explanation: Explanation: lambda x: 2 * x + 3
[2023-06-04 13:09:56,381][src.evals.sequence_completion_with_base_change][INFO] - Total: 2
[2023-06-04 13:09:56,381][src.evals.sequence_completion_with_base_change][INFO] - Sequence: 5,7,9,11
[2023-06-04 13:09:56,383][src.evals.prompts.explanation_prompt][INFO] - [{'role': 'system', 'content': '\nHere are some examples of sequence explanations, i.e. python functions\nwhich generated the preceding sequences base 10. Assume the first number was generated by f(0),\nthe second by f(1), the third by f(2), and so on.\n'}, {'role': 'user', 'content': '22,30,30,38'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (4 * (x + 5)) | 6'}, {'role': 'user', 'content': '6,7,8,9'}, {'role': 'assistant', 'content': 'Explanation: lambda x: [i for i in range(100) if i % (2 + 1) or i % (6 + 1)][(x + 5)]'}, {'role': 'user', 'content': '0,0,0,0'}, {'role': 'assistant', 'content': 'Explanation: lambda x: ((x + 2) * 0) % (0+1)'}, {'role': 'user', 'content': '0,0,0,0'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (0 * (x + 0)) ** 5'}, {'role': 'user', 'content': 'In your opinion, what is the most likely function which generated the following sequence?\nAssume the first number was generated by f(0), the second by f(1), the third by f(2), and so on.\nThe function should output numbers in the same representation as the sequence.\nGive your response in the format:\nExplanation: <function>\n\nThe sequence is in base 10.\nQ: 5,7,9,11'}]
[2023-06-04 13:09:56,384][src.evals.check_self_consistency][INFO] - Generating a continuation and explanation
[2023-06-04 13:09:56,616][src.evals.check_self_consistency][INFO] - continuation: 13
[2023-06-04 13:09:57,021][src.evals.check_self_consistency][INFO] - explanation: Explanation: lambda x: 2 * x + 5
[2023-06-04 13:09:57,022][src.evals.check_self_consistency][INFO] - invalid explanation: Explanation: lambda x: 2 * x + 5
[2023-06-04 13:09:57,022][src.evals.sequence_completion_with_base_change][INFO] - Total: 3
[2023-06-04 13:09:57,022][src.evals.sequence_completion_with_base_change][INFO] - Sequence: 7,9,11,13
[2023-06-04 13:09:57,023][src.evals.prompts.explanation_prompt][INFO] - [{'role': 'system', 'content': '\nHere are some examples of sequence explanations, i.e. python functions\nwhich generated the preceding sequences base 10. Assume the first number was generated by f(0),\nthe second by f(1), the third by f(2), and so on.\n'}, {'role': 'user', 'content': '0,0,0,0'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (5 * (x + 0)) * 0'}, {'role': 'user', 'content': '7,8,9,10'}, {'role': 'assistant', 'content': 'Explanation: lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][(x + 5)]'}, {'role': 'user', 'content': '36,42,48,54'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (2 * (x + 6)) * 3'}, {'role': 'user', 'content': '1,1,1,1'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (1 * (x + 2)) ** 0'}, {'role': 'user', 'content': 'In your opinion, what is the most likely function which generated the following sequence?\nAssume the first number was generated by f(0), the second by f(1), the third by f(2), and so on.\nThe function should output numbers in the same representation as the sequence.\nGive your response in the format:\nExplanation: <function>\n\nThe sequence is in base 10.\nQ: 7,9,11,13'}]
[2023-06-04 13:09:57,023][src.evals.check_self_consistency][INFO] - Generating a continuation and explanation
[2023-06-04 13:09:57,285][src.evals.check_self_consistency][INFO] - continuation: 15
[2023-06-04 13:09:57,722][src.evals.check_self_consistency][INFO] - explanation: Explanation: lambda x: 2 * x + 7
[2023-06-04 13:09:57,723][src.evals.check_self_consistency][INFO] - invalid explanation: Explanation: lambda x: 2 * x + 7
[2023-06-04 13:09:57,723][src.evals.sequence_completion_with_base_change][INFO] - Total: 4
[2023-06-04 13:09:57,723][src.evals.sequence_completion_with_base_change][INFO] - Sequence: 1,2,3,4
[2023-06-04 13:09:57,725][src.evals.prompts.explanation_prompt][INFO] - [{'role': 'system', 'content': '\nHere are some examples of sequence explanations, i.e. python functions\nwhich generated the preceding sequences base 10. Assume the first number was generated by f(0),\nthe second by f(1), the third by f(2), and so on.\n'}, {'role': 'user', 'content': '243,7776,59049,248832'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (3 * (x + 1)) ** 5'}, {'role': 'user', 'content': '0,0,0,0'}, {'role': 'assistant', 'content': 'Explanation: lambda x: (0 * (x + 2)) ** 6'}, {'role': 'user', 'content': '1,1,1,1'}, {'role': 'assistant', 'content': 'Explanation: lambda x: 3 ** (0 * (x + 5))'}, {'role': 'user', 'content': '0,0,0,0'}, {'role': 'assistant', 'content': 'Explanation: lambda x: 0 ** (2 * (x + 6))'}, {'role': 'user', 'content': 'In your opinion, what is the most likely function which generated the following sequence?\nAssume the first number was generated by f(0), the second by f(1), the third by f(2), and so on.\nThe function should output numbers in the same representation as the sequence.\nGive your response in the format:\nExplanation: <function>\n\nThe sequence is in base 10.\nQ: 1,2,3,4'}]
[2023-06-04 13:09:57,725][src.evals.check_self_consistency][INFO] - Generating a continuation and explanation
[2023-06-04 13:09:57,974][src.evals.check_self_consistency][INFO] - continuation: 5
