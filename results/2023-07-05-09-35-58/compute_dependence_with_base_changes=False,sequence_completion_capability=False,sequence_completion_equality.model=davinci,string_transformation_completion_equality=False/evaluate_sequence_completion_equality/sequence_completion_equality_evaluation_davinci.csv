original_function,sequence,generated_completion_rule,generated_completion,generated_completion_matches,model_self_consistency_evaluation,model_completion,model_completion_matches
"{'fn': 'lambda x: (3 * x) | 2', 'offset': 0, 'metadata': ('bit_or_progression', 2, 2)}","[2, 3, 6]",lambda x: (1 * x) | 2,8,False,Y,3,False
"{'fn': 'lambda x: (1 * x) | 2', 'offset': 2, 'metadata': ('bit_or_progression', 0, 2)}","[2, 3, 6]",lambda x: (2 * x) * (2 + 1),8,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 4)}","[1, 2, 3]",lambda x: (2 * x) + 1,6,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 3)}","[1, 2, 3]",lambda x: (1 + x) * (1 + x),4,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 0)}","[1, 2, 3]",lambda x: (2 * x) + 1,4,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 1)}","[1, 2, 3]",lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x],4,True,Y,4,True
"{'fn': 'lambda x: (x * 5) % (3+1)', 'offset': 1, 'metadata': ('modular_progression', 4, 3)}","[1, 2, 3]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x],4,False,Y,4,False
"{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 1, 'metadata': ('modular_progression', 0, 3)}","[1, 2, 3]",lambda x: (x * 2) % (2+1),4,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 3)}","[1, 2, 3]",lambda x: (x * 1) % (4+1),6,False,Y,2,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 4)}","[1, 2, 3]",lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x],4,True,Y,4,True
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 4, 4)}","[1, 2, 3]",lambda x: (2 * x) | 1,4,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}","[1, 2, 3]",lambda x: (1 * x) * 2,3,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}","[1, 2, 3]",lambda x: (2 * x) + 1,4,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 4, 2)}","[1, 2, 3]",lambda x: (x * 2) % (1+1),6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}","[1, 2, 3]",lambda x: (x * 2) | (x * 3),4,False,Y,4,False
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}","[1, 2, 3]",lambda x: (x * 2) | 0,4,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 4, 0)}","[1, 2, 3]",lambda x: (x * 2) + 1,4,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 4, 3)}","[1, 2, 3]",lambda x: (x * 2) % (3+1),6,False,Y,2,False
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}","[1, 2, 3]",lambda x: (x * 2) % (2+1),4,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}","[1, 2, 3]",lambda x: (2 * x) ** 1,3,False,Y,4,False
"{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}","[1, 2, 3]",lambda x: (1 * x) | (2 * x),6,False,Y,4,False
"{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}","[1, 2, 3]",lambda x: (x * 2) % (2+1),4,False,Y,3,False
"{'fn': 'lambda x: (x * 1) % (4+1)', 'offset': 1, 'metadata': ('modular_progression', 0, 4)}","[1, 2, 3]",lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x],4,True,Y,4,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}","[1, 2, 3]",lambda x: (1 * x) | (2 * x),4,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}","[1, 2, 3]",lambda x: (5 * x) ** 1,6,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 4, 1)}","[1, 2, 3]",lambda x: (3 * x) + 0,5,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}","[1, 2, 3]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x],4,False,Y,4,False
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}","[1, 2, 3]",lambda x: (x * 2) % (0+1),4,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (4 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 4)}","[1, 2, 3]",lambda x: (x * 5) % (1+1),4,False,Y,2,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 4)}","[1, 2, 3]",lambda x: (2 * x) | 1,4,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 0)}","[1, 2, 3]",lambda x: (x * 2) % (1+1),4,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 0, 4)}","[5, 6, 7]",lambda x: (2 * x) * (2 * x),0,False,Y,15,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 3)}","[5, 6, 7]",lambda x: (1 * x) + (2 * x),8,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 0)}","[5, 6, 7]",lambda x: (x * 2) % (2+1),10,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 1)}","[5, 6, 7]",lambda x: (x * 2) | (x * 3),8,False,Y,8,False
"{'fn': 'lambda x: (1 * x) | 4', 'offset': 1, 'metadata': ('bit_or_progression', 0, 4)}","[5, 6, 7]",lambda x: [i for i in range(100) if i % (7 + 1) or i % (5 + 1)][x],8,True,Y,8,True
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 3)}","[5, 6, 7]",lambda x: (x * 2) + 1,10,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 1, 4)}","[5, 6, 7]",lambda x: (x * 2) + (x * 3),8,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 4, 4)}","[5, 6, 7]",lambda x: (2 * x) + (3 * x),8,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 2, 2)}","[5, 6, 7]",lambda x: (3 * x) + 1,8,False,Y,8,False
"{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}","[5, 6, 7]",lambda x: (1 * x) | 5,8,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 3, 2)}","[5, 6, 7]",lambda x: (x * 2) * 1,10,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 4, 3)}","[5, 6, 7]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x],8,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 3, 1)}","[5, 6, 7]",lambda x: [i for i in range(100) if i % (7 + 1) or i % (5 + 1)][x],8,True,Y,8,True
"{'fn': 'lambda x: (1 * x) + 1', 'offset': 4, 'metadata': ('arithmetic_progression', 0, 1)}","[5, 6, 7]",lambda x: (x * 2) % (3+1),10,False,Y,6,False
"{'fn': 'lambda x: (1 * x) + 4', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 4)}","[5, 6, 7]",lambda x: (x * x) % (2 + 1),10,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 3, 3)}","[5, 6, 7]",lambda x: (1 * x) + 3,10,False,Y,8,True
"{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}","[5, 6, 7]",lambda x: [i for i in range(100) if i % (7 + 1) or i % (0 + 1)][x],8,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 1, 3)}","[5, 6, 7]",lambda x: (2 * x) + (3 * x),10,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 2, 4)}","[5, 6, 7]",lambda x: (1 * x) + (x * 2),8,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 4)}","[3, 4, 5]",lambda x: (x * 2) % (2+1),8,False,Y,4,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 1)}","[3, 4, 5]",lambda x: (2 * x) + (x * 2),7,False,Y,7,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 4, 2)}","[3, 4, 5]",lambda x: (1 * x) + (1 * x),6,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 4, 0)}","[3, 4, 5]",lambda x: (1 + x) * (1 + x),0,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 2)}","[3, 4, 5]",lambda x: (2 * x) * (2 * x),8,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 4, 1)}","[3, 4, 5]",lambda x: (2 * x) + 1,8,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 4)}","[3, 4, 5]",lambda x: (2 * x) * 3,8,False,Y,8,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 4, 4)}","[3, 4, 5]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x],10,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}","[3, 4, 5]",lambda x: (1 * x) | (2 * x),7,False,Y,6,False
"{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}","[3, 4, 5]",lambda x: (2 * x) | 0,6,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}","[3, 4, 5]",lambda x: (1 * x) | (2 * x),8,False,Y,6,False
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}","[3, 4, 5]",lambda x: (x * 2) | 1,6,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 4, 3)}","[3, 4, 5]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x],7,False,Y,4,False
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}","[3, 4, 5]",lambda x: (2 * x) | 3,6,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}","[3, 4, 5]",lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x],8,False,Y,6,False
"{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}","[3, 4, 5]",lambda x: (x * 2) % (2+1),5,False,Y,4,False
"{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}","[3, 4, 5]",lambda x: (x * 2) + 1,8,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}","[3, 4, 5]",lambda x: (x * 2) % (2+1),10,False,Y,4,False
"{'fn': 'lambda x: (1 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 3)}","[3, 4, 5]",lambda x: (x * 4) % (2+1),8,False,Y,5,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 3)}","[3, 4, 5]",lambda x: (1 * x) + (2 * x),8,False,Y,6,False
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}","[3, 4, 5]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x],8,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 4)}","[3, 4, 5]",lambda x: [i for i in range(100) if i % (7 + 1) or i % (6 + 1)][x],8,False,Y,6,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 4)}","[2, 3, 4]",lambda x: (1 * x) + 1,5,True,Y,3,False
"{'fn': 'lambda x: (x * 1) % (4+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 4)}","[2, 3, 4]",lambda x: (2 * x) | 1,6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (4 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 4)}","[2, 3, 4]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x],5,True,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 0)}","[2, 3, 4]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x],5,True,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 4)}","[2, 3, 4]",lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x],6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 4, 4)}","[2, 3, 4]",lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x],6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}","[2, 3, 4]",lambda x: (1 * x) + 1,6,False,Y,3,False
"{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}","[2, 3, 4]",lambda x: (2 * x) | 1,6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}","[2, 3, 4]",lambda x: (1 * x) | (2 * x),5,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 4, 2)}","[2, 3, 4]",lambda x: (1 * x) + 1,6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 2)}","[2, 3, 4]",lambda x: (2 * x) | (3 * x),6,False,Y,6,False
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}","[2, 3, 4]",lambda x: (2 * x) | 0,6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 4, 0)}","[2, 3, 4]",lambda x: (1 * x) * 2,4,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 4, 3)}","[2, 3, 4]",lambda x: (1 * x) | (2 * x),5,False,Y,3,False
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 0, 1)}","[2, 3, 4]",lambda x: (x * 2) | (x * 3),7,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}","[2, 3, 4]",lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x],6,False,Y,3,False
"{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}","[2, 3, 4]",lambda x: (1 * x) + 1,5,True,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}","[2, 3, 4]",lambda x: (1 * x) * 1,5,True,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}","[2, 3, 4]",lambda x: [i for i in range(100) if i % (4 + 1) or i % (4 + 1)][x],6,True,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 4, 1)}","[2, 3, 4]",lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x],5,True,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 3)}","[2, 3, 4]",lambda x: (x * 2) | (x * 3),6,False,Y,3,False
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}","[2, 3, 4]",lambda x: (1 * x) | 0,6,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 4)}","[2, 3, 4]",lambda x: 2 ** (1 * x),5,False,Y,8,False
"{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}","[0, 2, 4]",lambda x: (2 * x) | 0,6,True,Y,4,False
"{'fn': 'lambda x: (x * 2) % (4+1)', 'offset': 0, 'metadata': ('modular_progression', 1, 4)}","[0, 2, 4]",lambda x: (2 * x) + 1,8,False,Y,3,False
"{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}","[0, 2, 4]",lambda x: (2 * x) * 2,6,False,Y,6,False
"{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}","[0, 2, 4]",lambda x: (2 * x) + 1,6,False,Y,3,False
"{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}","[0, 2, 4]",lambda x: (x * 2) % (2+1),6,False,Y,4,False
"{'fn': 'lambda x: (2 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 1, 0)}","[0, 2, 4]",lambda x: (x * 2) + 0,8,False,Y,4,False
"{'fn': 'lambda x: (2 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 1, 3)}","[3, 7, 7]",lambda x: (2 * x) + 1,11,False,Y,10,False
"{'fn': 'lambda x: (1 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 0, 3)}","[3, 7, 7]",lambda x: (1 * x) + (1 * x),11,False,Y,4,False
"{'fn': 'lambda x: (2 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 1, 3)}","[3, 3, 7]",lambda x: (x * 3) % (2+1),11,False,Y,7,False
"{'fn': 'lambda x: (3 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 2, 3)}","[3, 3, 7]",lambda x: (3 * x) + 3,11,False,Y,10,False
"{'fn': 'lambda x: (1 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 0, 3)}","[3, 3, 7]",lambda x: (3 * x) | (7 * x),11,False,Y,10,False
"{'fn': 'lambda x: 2 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 1)}","[1, 2, 4]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x],1,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 2)}","[1, 2, 4]",lambda x: (1 * x) + (2 * x),8,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 0)}","[1, 2, 4]",lambda x: (2 * x) | (1 + x),8,False,Y,3,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 2)}","[5, 7, 8]",lambda x: (1 * x) | (2 * x),10,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 1, 1)}","[5, 7, 8]",lambda x: (1 * x) + (2 * x),10,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 4, 2)}","[5, 7, 8]",lambda x: (1 * x) | 1,11,False,Y,6,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 4, 0)}","[5, 7, 8]",lambda x: (2 * x) + 1,11,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 0, 2)}","[5, 7, 8]",lambda x: (x * 2) | (x * 3),13,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]', 'offset': 4, 'metadata': ('indexing_criteria_progression', 4, 1)}","[5, 7, 8]",lambda x: (1 * x) + 2,11,False,Y,10,False
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 0)}","[5, 7, 8]",lambda x: (2 * x) + 1,8,False,Y,10,False
"{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}","[0, 1, 2]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x],3,False,Y,3,False
"{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 0, 'metadata': ('modular_progression', 3, 2)}","[0, 1, 2]",lambda x: (x * 1) % (2+1),3,False,Y,0,True
"{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}","[0, 1, 2]",lambda x: (1 * x) + 0,3,True,Y,3,True
"{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 2)}","[0, 1, 2]",lambda x: (x * 2) % (1+1),3,False,Y,0,False
"{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}","[0, 1, 2]",lambda x: (2 * x) + (1 * x),3,False,Y,3,False
"{'fn': 'lambda x: (x * 5) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 4, 3)}","[0, 1, 2]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x],3,False,Y,3,False
"{'fn': 'lambda x: (x * 5) % (3+1)', 'offset': 4, 'metadata': ('modular_progression', 4, 3)}","[0, 1, 2]",lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x],3,False,Y,3,False
"{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}","[0, 1, 2]",lambda x: (x * 2) | 0,3,False,Y,3,False
"{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}","[0, 1, 2]",lambda x: (1 * x) + 1,3,False,Y,3,False
"{'fn': 'lambda x: (x * 1) % (4+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 4)}","[0, 1, 2]",lambda x: (1 * x) * (1 + x),3,False,Y,3,False
"{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}","[0, 1, 2]",lambda x: (1 * x) | 0,3,True,Y,3,True
"{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 4, 'metadata': ('modular_progression', 0, 3)}","[0, 1, 2]",lambda x: (x * 4) % (3+1),3,False,Y,0,False
"{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}","[0, 1, 2]",lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x],0,False,Y,3,False
"{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}","[7, 11, 15]",lambda x: (2 * x) | 7,30,False,Y,22,False
"{'fn': 'lambda x: (5 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 4, 3)}","[7, 11, 15]",lambda x: (3 * x) | 1,21,False,Y,18,False
"{'fn': 'lambda x: (3 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 2, 3)}","[7, 11, 15]",lambda x: (2 * x) * (2 * x),21,False,Y,42,False
"{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}","[7, 11, 15]",lambda x: (2 * x) ** 2,19,False,Y,28,False
"{'fn': 'lambda x: (x * 3) % (3+1)', 'offset': 2, 'metadata': ('modular_progression', 2, 3)}","[2, 1, 0]",lambda x: (1 * x) + 0,1,False,N,1,False
"{'fn': 'lambda x: (x * 5) % (2+1)', 'offset': 4, 'metadata': ('modular_progression', 4, 2)}","[2, 1, 0]",lambda x: (1 * x) + (2 * x),1,False,Y,3,False
"{'fn': 'lambda x: (x * 4) % (4+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 4)}","[2, 1, 0]",lambda x: (1 * x) | 0,1,False,N,1,False
"{'fn': 'lambda x: (x * 2) % (2+1)', 'offset': 1, 'metadata': ('modular_progression', 1, 2)}","[2, 1, 0]",lambda x: (x * 2) % (2+1),1,False,Y,0,False
"{'fn': 'lambda x: (x * 2) % (2+1)', 'offset': 4, 'metadata': ('modular_progression', 1, 2)}","[2, 1, 0]",lambda x: (x * 2) + 1,1,False,Y,3,False
