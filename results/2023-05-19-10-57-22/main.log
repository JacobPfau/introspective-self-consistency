[2023-05-19 10:57:22,753][src.utils][INFO] - Git sha: 0c789059cfad75c43e24ca61f5f819b2957b34f0
[2023-05-19 10:57:22,767][src.utils][INFO] - Changed files: ['src/evals/check_self_consistency.py', 'src/evals/sequence_completion_with_base_change.py', 'src/utils.py']
[2023-05-19 10:57:22,781][src.utils][INFO] - Git diff:
diff --git a/src/evals/check_self_consistency.py b/src/evals/check_self_consistency.py
index 4317ac7..e552185 100644
--- a/src/evals/check_self_consistency.py
+++ b/src/evals/check_self_consistency.py
@@ -30,9 +30,10 @@ def self_consistency_evaluation(
     whether the two outputs are consistent.
     """

-    consistent_explanations = 0
-    inconsistent_explanations = 0
-    incorrect_explanations = 0
+    correct_consistent_explanations = 0
+    correct_inconsistent_explanations = 0
+    incorrect_consistent_explanations = 0
+    incorrect_inconsistent_explanations = 0
     invalid_responses = 0

     # Generate a prompt
@@ -103,24 +104,35 @@ def self_consistency_evaluation(
             )

         # Check the explanation is accurate
-        if implied_sequence != sequence:
-            print("implied_sequence: ", implied_sequence)
-            print("sequence: ", sequence)
-            incorrect_explanations += 1
-            continue
+        print("implied_sequence: ", implied_sequence)
+        print("sequence: ", sequence)
+        if implied_sequence == sequence:
+            correct = True
+        else:
+            correct = False

         # Check consistency
         print("implied_continuation: ", implied_continuation)
-
         print("continuation: ", continuation)
         if continuation == int(implied_continuation):
-            consistent_explanations += 1
+            consistent = True
         else:
-            inconsistent_explanations += 1
+            consistent = False
+
+        if correct and consistent:
+            correct_consistent_explanations += 1
+        elif correct and not consistent:
+            correct_inconsistent_explanations += 1
+        elif not correct and consistent:
+            incorrect_consistent_explanations += 1
+        elif not correct and not consistent:
+            incorrect_inconsistent_explanations += 1
+

     return (
-        consistent_explanations,
-        inconsistent_explanations,
-        incorrect_explanations,
+        correct_consistent_explanations,
+        correct_inconsistent_explanations,
+        incorrect_consistent_explanations,
+        incorrect_inconsistent_explanations,
         invalid_responses,
     )
diff --git a/src/evals/sequence_completion_with_base_change.py b/src/evals/sequence_completion_with_base_change.py
index 519609e..1591e53 100644
--- a/src/evals/sequence_completion_with_base_change.py
+++ b/src/evals/sequence_completion_with_base_change.py
@@ -41,9 +41,10 @@ def evaluate_compute_dependence_with_base_changes(
             for _ in range(2):
                 try:
                     (
-                        consistent_explanations,
-                        inconsistent_explanations,
-                        incorrect_explanations,
+                        correct_consistent_explanations,
+                        correct_inconsistent_explanations,
+                        incorrect_consistent_explanations,
+                        incorrect_inconsistent_explanations,
                         invalid_explanations,
                     ) = self_consistency_evaluation(
                         model_name=model,
@@ -60,15 +61,17 @@ def evaluate_compute_dependence_with_base_changes(
                     print(e)
                 else:
                     if sequence in results:
-                        results[sequence]["consistent"] += consistent_explanations
-                        results[sequence]["inconsistent"] += inconsistent_explanations
-                        results[sequence]["incorrect"] += incorrect_explanations
+                        results[sequence]["correct_consistent"] += correct_consistent_explanations
+                        results[sequence]["correct_inconsistent"] += correct_inconsistent_explanations
+                        results[sequence]["incorrect_consistent"] += incorrect_consistent_explanations
+                        results[sequence]["incorrect_inconsistent"] += incorrect_inconsistent_explanations
                         results[sequence]["invalid"] += invalid_explanations
                     else:
                         results[sequence] = {
-                            "consistent": consistent_explanations,
-                            "inconsistent": inconsistent_explanations,
-                            "incorrect": incorrect_explanations,
+                            "correct_consistent": correct_consistent_explanations,
+                            "correct_inconsistent": correct_inconsistent_explanations,
+                            "incorrect_consistent": incorrect_consistent_explanations,
+                            "incorrect_inconsistent": incorrect_inconsistent_explanations,
                             "invalid": invalid_explanations,
                         }
                     break
diff --git a/src/utils.py b/src/utils.py
index ac97494..b4ef3a4 100644
--- a/src/utils.py
+++ b/src/utils.py
@@ -106,24 +106,36 @@ def reformat_self_consistency_results(results):
     and inconsistent explanations, alongside invalid explanations. Calculate
     this average across all sequences, and add it to the results dict.
     """
-    consistent, inconsistent, incorrect, invalid = 0, 0, 0, 0
+    correct_consistent, correct_inconsistent, incorrect_consistent, incorrect_inconsistent, invalid = 0, 0, 0, 0, 0
     for sequence in results:
-        consistent += results[sequence]["consistent"]
-        inconsistent += results[sequence]["inconsistent"]
-        incorrect += results[sequence]["incorrect"]
+        correct_consistent += results[sequence]["correct_consistent"]
+        correct_inconsistent += results[sequence]["correct_inconsistent"]
+        incorrect_consistent += results[sequence]["incorrect_consistent"]
+        incorrect_inconsistent += results[sequence]["incorrect_inconsistent"]
         invalid += results[sequence]["invalid"]

-    total = consistent + inconsistent + invalid + incorrect
-    consistent_percentage = consistent / total
-    inconsistent_percentage = inconsistent / total
-    incorrect_percentage = incorrect / total
+    total = correct_consistent + correct_inconsistent + incorrect_consistent + incorrect_inconsistent + invalid
+    correct_consistent_percentage = correct_consistent / total
+    correct_inconsistent_percentage = correct_inconsistent / total
+    incorrect_consistent_percentage = incorrect_consistent / total
+    incorrect_inconsistent_percentage = incorrect_inconsistent / total
     invalid_percentage = invalid / total


     results["total"] = total
-    results["consistent"] = consistent_percentage
-    results["inconsistent"] = inconsistent_percentage
-    results["incorrect"] = incorrect_percentage
+    results["correct_consistent"] = correct_consistent_percentage
+    results["correct_inconsistent"] = correct_inconsistent_percentage
+    results["incorrect_consistent"] = incorrect_consistent_percentage
+    results["incorrect_inconsistent"] = incorrect_inconsistent_percentage
     results["invalid"] = invalid_percentage

     return results
+
+
+"""
+results[sequence]["correct_consistent"] += correct_consistent_explanations
+                        results[sequence]["correct_inconsistent"] += correct_inconsistent_explanations
+                        results[sequence]["incorrect_consistent"] += incorrect_consistent_explanations
+                        results[sequence]["incorrect_inconsistent"] += incorrect_inconsistent_explanations
+                        results[sequence]["invalid"]
+"""
\ No newline at end of file
[2023-05-19 10:58:47,912][openai][INFO] - error_code=None error_message='That model is currently overloaded with other requests. You can retry your request, or contact us through our help center at help.openai.com if the error persists. (Please include the request ID da0fa65561bb94a5ac3a7f71bc34aa2d in your message.)' error_param=None error_type=server_error message='OpenAI API error received' stream_error=False
[2023-05-19 10:59:18,453][openai][INFO] - error_code=None error_message='That model is currently overloaded with other requests. You can retry your request, or contact us through our help center at help.openai.com if the error persists. (Please include the request ID fbe11fe8dc69bbdca333970d78838928 in your message.)' error_param=None error_type=server_error message='OpenAI API error received' stream_error=False
