[2023-05-31 17:31:32,211][src.utils][INFO] - Git sha: 8a0147a358b27f9554efa19981c87d7906bd811e
[2023-05-31 17:31:32,222][src.utils][INFO] - Changed files: ['conf/tasks/compute_dependence_with_base_changes.yaml', 'src/evals/evaluate_continuation.py', 'src/evals/prompts/distribution_prompt.py']
[2023-05-31 17:31:32,231][src.utils][INFO] - Git diff:
diff --git a/conf/tasks/compute_dependence_with_base_changes.yaml b/conf/tasks/compute_dependence_with_base_changes.yaml
index 3e1ca35..366c20f 100644
--- a/conf/tasks/compute_dependence_with_base_changes.yaml
+++ b/conf/tasks/compute_dependence_with_base_changes.yaml
@@ -1,4 +1,4 @@
-sequence_type: integer
+sequence_type: binary
 model: gpt-3.5-turbo
 num_shots: 4
 on_ambiguous_sequences: true
diff --git a/src/evals/evaluate_continuation.py b/src/evals/evaluate_continuation.py
index e1f7f45..a7ed86f 100644
--- a/src/evals/evaluate_continuation.py
+++ b/src/evals/evaluate_continuation.py
@@ -17,6 +17,7 @@ def valid_continuation(
     """
     Given a continuation as supplied by the model,
     return whether it is a valid integer or not.
+    If in biinary, the continuation will be prefixed with 0b.
     """
     try:
         # TODO: Work for arbitrary base continuation
@@ -25,7 +26,6 @@ def valid_continuation(
         if base == 10:
             int(model_continuation)
         elif base == 2:
-
             int(model_continuation[2:], 2)
     except ValueError:
         return False
diff --git a/src/evals/prompts/distribution_prompt.py b/src/evals/prompts/distribution_prompt.py
index 145c104..cade905 100644
--- a/src/evals/prompts/distribution_prompt.py
+++ b/src/evals/prompts/distribution_prompt.py
@@ -105,6 +105,10 @@ DISTRIBUTIONS = {
         "continuation": SELF_CONTINUATION_PROMPT,
         "explanation": SELF_EXPLANATION_PROMPT,
     },
+    "default-change": {
+        "continuation": SELF_CONTINUATION_PROMPT2,
+        "explanation": SELF_EXPLANATION_PROMPT,
+    },
     "self-simulation": {
         "continuation": SIMULATION_CONTINUATION_PROMPT,
         "explanation": SIMULATION_EXPLANATION_PROMPT,
[2023-05-31 17:31:32,232][src.utils][INFO] - Changed directory to /Users/olejorgensen/Documents/AISC/introspective-self-consistency/results/2023-05-31-17-31-32/evaluate_compute_dependence_with_base_changes
[2023-05-31 17:31:43,006][__main__][ERROR] - 
Traceback (most recent call last):
  File "/Users/olejorgensen/Documents/AISC/introspective-self-consistency/src/utils.py", line 58, in decorated
    return func(*args, **kwargs)
  File "/Users/olejorgensen/Documents/AISC/introspective-self-consistency/main.py", line 36, in main
    evaluate_compute_dependence_with_base_changes(
  File "/Users/olejorgensen/Documents/AISC/introspective-self-consistency/src/utils.py", line 42, in wrapped
    return func(*args, **kwargs)
  File "/Users/olejorgensen/Documents/AISC/introspective-self-consistency/src/evals/sequence_completion_with_base_change.py", line 43, in evaluate_compute_dependence_with_base_changes
    int_sequence = [int(x) for x in sequence.split(",")]
  File "/Users/olejorgensen/Documents/AISC/introspective-self-consistency/src/evals/sequence_completion_with_base_change.py", line 43, in evaluate_compute_dependence_with_base_changes
    int_sequence = [int(x) for x in sequence.split(",")]
  File "/Users/olejorgensen/miniconda3/envs/aisc-env2/lib/python3.10/bdb.py", line 90, in trace_dispatch
    return self.dispatch_line(frame)
  File "/Users/olejorgensen/miniconda3/envs/aisc-env2/lib/python3.10/bdb.py", line 115, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
