,model,sequence,org_func,num_valid,num_invalid,num_shots,invalid_fn_type,test_passing_completion,test_passing_explanation,n_valid_compl_in_primed_resp,n_invalid_compl_in_primed_resp,n_valid_expl_in_primed_resp,n_invalid_expl_in_primed_resp,possible_completions_response,possible_explanations_response,Unnamed: 0
0,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 0', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3', 'lambda x: (x * 5) - 4']",
1,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,random,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 4) - 3']",
2,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,random,1,1,2,0,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]']",
3,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)']",
4,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,random,1,0,2,0,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
5,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,random,0,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)']",
6,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,6,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (5+1)', 'lambda x: (x * 3) % (6+1)']",
7,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,random,0,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: 1 * (x + 1)', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) | 0', 'lambda x: 3 ** (0 * x) + 1']",
8,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,random,0,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (2 * x) - 1', 'lambda x: (4 * x) - 3', 'lambda x: (8 * x) - 6']",
9,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: 2 * x - 1', 'lambda x: (x * 3) % (3+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: 3 ** (2 * x)']",
10,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) ** 0', 'lambda x: (4 * x) + 3', 'lambda x: (x * 2) % (2+1)']",
11,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
12,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,random,0,0,2,0,0,0,"['4', '8', '16', '32', '64', '128', '256', '512', '1024', '2048', '4096', '8192', '16384', '32768', '65536', '131072', '262144', '524288', '1048576', '2097152', '4194304', '8388608', '16777216', '33554432', '67108864', '134217728', '268435456', '536870912', '1073741824']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 2', 'lambda x: (5 * x) + 0', 'lambda x: (5 * x) + 1', 'lambda x: (5 * x) + 2', 'lambda x: (6 * x) + 0', 'lambda x: (6 * x) + 1', 'lambda x: (6 * x) + 2']",
13,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,random,1,0,2,0,1,0,"['4', '8', '16', '32', '64', '128', '256', '512', '1024', '2048', '4096', '8192', '16384', '32768', '65536', '131072', '262144', '524288', '1048576', '2097152', '4194304', '8388608', '16777216', '33554432', '67108864', '134217728', '268435456', '536870912', '1073741824']","['lambda x: x', 'lambda x: (1 * x) + 0']",
14,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,random,0,0,1,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (1 * x) ** 1', 'lambda x: (1 * x) | 0']",
15,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,random,0,1,2,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x', 'lambda x: (2 * x) | 0', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]']",
16,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,6,random,1,1,1,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: 1 * x']",
17,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,random,1,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 + x', 'lambda x: (x * 3) % (2+1) + 1']",
18,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,random,1,0,2,1,0,1,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) | 2', 'lambda x: (2 * x) - 2']",
19,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,random,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (x + 1) * 1', 'lambda x: (x + 1) * 2', 'lambda x: (x + 1) * 3', 'lambda x: (x + 1) * 4', 'lambda x: (x + 2) * 1', 'lambda x: (x + 2) * 2', 'lambda x: (x + 2) * 3', 'lambda x: (x + 2) * 4', 'lambda x: (x + 3) * 1', 'lambda x: (x + 3) * 2', 'lambda x: (x + 3) * 3', 'lambda x: (x + 3) * 4', 'lambda x: (x + 4) * 1', 'lambda x: (x + 4) * 2', 'lambda x: (x + 4) * 3', 'lambda x: (x + 4) * 4']",
20,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,random,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4']",
21,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,random,1,0,2,1,1,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4']",
22,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,random,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) + (-1)', 'lambda x: (x * 4) + (-2)']",
23,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,random,0,1,2,0,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 0']",
24,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) | 2']",
25,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,random,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 2 + (x * 1)']",
26,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,random,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 3']",
27,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,random,1,0,2,0,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",
28,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,random,0,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) | 3', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) ** 3']",
29,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,random,1,0,2,1,0,0,"['7', '8', '9', '10']","['lambda x: (x + 1) % (3+1)', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 3) % (3+1)']",
30,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,random,1,1,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 2', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2']",
31,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,random,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 1) % (3+1)']",
32,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,random,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16']","['lambda x: (x * 1) % (7+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 2) % (5+1)', 'lambda x: (x * 4) % (3+1)']",
33,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,random,1,1,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 3']",
34,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,random,0,0,2,1,0,0,"['7', '8', '9', '10', '11', '12']","['lambda x: x + 3', 'lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",
35,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,random,1,0,2,1,0,0,"['7', '8', '9', '10']","['lambda x: (x + 3) * 1', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) % (3 + 1)']",
36,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,random,1,0,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) * 0', 'lambda x: (3 * x) + 0', 'lambda x: (1 * x) * 3']",
37,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,random,1,1,2,0,1,0,"['12', '15', '18', '21']","['lambda x: 3 * x', 'lambda x: (1 * x) ** 2', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) ** 1']",
38,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,random,1,1,2,0,2,0,"['12', '15', '18', '21', '24', '27', '30', 'etc.']","['lambda x: 3 * x', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) | 0']",
39,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,random,1,0,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (1 * x) * 3', 'lambda x: (2 * x) ** 2', 'lambda x: (4 * x) / 4']",
40,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,random,1,0,2,1,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3 - 3', 'lambda x: (3 * x) - 3 + 3', 'lambda x: (3 * x) - 3']",
41,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,random,1,1,2,1,0,0,"['15', '18', '21', '24', '27', '30']","['lambda x: (x * 3) % (4+1)', 'lambda x: (x * 3) % (5+1)', 'lambda x: (x * 3) % (6+1)', 'lambda x: (x * 3) % (7+1)', 'lambda x: (x * 3) % (8+1)', 'lambda x: (x * 3) % (9+1)', 'lambda x: (x * 3) % (10+1)', 'lambda x: (x * 3) % (11+1)', 'lambda x: (x * 3) % (12+1)']",
42,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,random,1,0,2,1,0,1,"['15', '18', '21', '24']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2', 'lambda x: (3 * x) + 3']",
43,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,random,1,0,2,0,2,0,"['18', '21', '24']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) * 1', 'lambda x: (3 * x) - 3']",
44,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,random,1,0,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) ** 0', 'lambda x: (3 * x) | 3']",
45,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,random,1,1,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) - 3', 'lambda x: (3 * x) ^ 3']",
46,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,random,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x * 4) - 3', 'lambda x: (4 * x) - 3']",
47,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,random,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (1 * x) + 3', 'lambda x: (3 * x) | 2', 'lambda x: (2 * x) + 3']",
48,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,6,random,1,1,2,0,2,0,"['18', '21', '24']","['lambda x: (1 * x) * 3', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 4', 'lambda x: (3 * x) - 3']",
49,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,random,1,1,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (1 * x) * 3', 'lambda x: (3 * x) ** 0', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) | 3']",
50,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,random,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (x * 3) + 3', 'lambda x: (x * 4) + 3']",
51,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,random,1,0,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (4 * x) - 3', 'lambda x: (5 * x) - 6']",
52,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) - 6', 'lambda x: (3 * x) - 3']",
53,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) % (4+1)']",
54,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,random,0,0,2,1,0,1,"['8', '9', '10']","['lambda x: (x * 4) % (4+1)', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 2) % (4+1)']",
55,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,random,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 4', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) | 4', 'lambda x: (3 * x) - 2']",
56,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12']","['lambda x: (x + 4)', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) - 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]']",
57,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,6,random,0,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x + 4) | 0', 'lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1']",
58,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,6,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'lambda x: (1 * x) + 4']",
59,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,random,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 3 + 1', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1']",
60,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,random,1,1,2,1,1,1,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) | 1', 'lambda x: (4 * x) % (3+1)']",
61,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,random,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 3 + 1', 'lambda x: (x * 1) + 2 + 2', 'lambda x: (x * 1) + 1 + 3']",
62,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,6,random,0,0,0,0,0,0,"['4', '0']","['lambda x: (2 * x) % 3', 'lambda x: (3 * x) % 4', 'lambda x: (4 * x) % 5']",
63,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,6,random,1,1,0,0,0,0,"['4', '-2', '-4', '-6']","['lambda x: (x % 3)', 'lambda x: (x * 2) % (1+1)', 'lambda x: (x + 1) % (2+1)']",
64,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,6,random,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (3 * x) + 1', 'lambda x: (2 * x) + 2', 'lambda x: (5 * x) - 3', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]']",
65,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,random,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
66,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,random,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) ** 3', 'lambda x: (2 * x) ** 2', 'lambda x: (3 * x) ** 1', 'lambda x: (4 * x) ** 0']",
67,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,random,1,0,2,0,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) - 4']",
68,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,random,0,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 8) % (3+1)']",
69,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,random,0,1,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 4) % (1+1)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 4) % (4+1)']",
70,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,random,1,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) ** 1', 'lambda x: (4 * x) % (8+1)']",
71,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,random,1,1,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
72,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,random,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
73,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,random,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (5 + 1)][x]']",
74,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,random,1,1,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) * 4']",
75,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,random,1,1,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 4']",
76,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,random,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (1 * x) * 2 + 3', 'lambda x: (1 * x) * 2 + 5']",
77,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,random,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 5', 'lambda x: (2 * x) ^ 5', 'lambda x: (2 * x) & 5', 'lambda x: (2 * x) % 5']",
78,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,random,1,0,2,1,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 3']",
79,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,random,0,0,2,0,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 8']",
80,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,random,1,1,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (1 * x) + 6', 'lambda x: (3 * x) - 2']",
81,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,random,0,1,2,1,1,0,"['15', '17', '19', '21', '23']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]']",
82,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,6,random,0,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: x + 1', 'lambda x: (x * 1) + 5']",
83,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,random,1,0,2,0,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 2', 'lambda x: (4 * x) + 1']",
84,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,random,1,0,2,0,1,0,"['22', '26', '30', '34', '38']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (4 * x) - 2']",
85,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,6,random,1,0,0,0,1,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (x * 4) + 2']",
86,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,random,1,0,2,0,0,0,"['24', '26', '28', '30']","['lambda x: (2 * x) * 4', 'lambda x: (4 * x) + 10', 'lambda x: (x * 4) + 10']",
87,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,random,1,0,2,1,0,0,"['30', '34', '38', '42', '46']","['lambda x: (4 * x) + 10', 'lambda x: (2 * x) * 9']",
88,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80']","['lambda x: (x * 4)', 'lambda x: (x * 2) + 4', 'lambda x: (x * 3) + 1', 'lambda x: (x * 1) + 4']",
89,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,random,0,1,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: (1 * x) + 0']",
90,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['16', '20', '24']","['lambda x: x * 4', 'lambda x: (x * 2) * 2', 'lambda x: (x * 4) % (4+1)']",
91,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,random,1,1,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) + 0', 'lambda x: (x * 4) % (0+1)', 'lambda x: (2 * x) * 4', 'lambda x: (x * 4) + 0']",
92,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,random,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', 'etc.']","['lambda x: (4 * x)', 'lambda x: (x + 4) * 4', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) - 4']",
93,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,random,1,0,2,1,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) - 4', 'lambda x: (4 * x) / 1']",
94,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,random,1,0,2,2,0,0,"['20', '24', '28', '32']","['lambda x: 4 * x', 'lambda x: 2 ** (2 * x)']",
95,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,random,1,1,2,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', 'etc.']","['lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 1', 'lambda x: (1 * x) * 4']",
96,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,random,1,1,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x)', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) + 4']",
97,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,random,1,0,0,0,0,0,"['24', '32', '40', '48', '56', '64', '72', '80', '88', '96', '104', '112', '120']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) % (4+1)']",
98,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,random,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (2 * x) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8']",
99,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: 4 * x + 4', 'lambda x: (x + 4) * 2', 'lambda x: (x * 4) + 4', 'lambda x: (x * 2) + 8']",
100,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,random,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 12']",
101,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 4']",
102,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * (x + 1)', 'lambda x: 4 * x + 8', 'lambda x: 4 * (x + 3)']",
103,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x)']",
104,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4) + 12']",
105,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (2 * x) ** 2', 'lambda x: (1 * x) ** 3 + 4']",
106,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (2 * x) + 10', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8']",
107,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,random,1,1,2,0,2,0,"['24', '30', '36']","['lambda x: (6 * x) + 0', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 6']",
108,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,random,1,1,2,0,1,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96']","['lambda x: (6 * x) + 0', 'lambda x: (3 * x) ** 2', 'lambda x: (3 * x) * 2', 'lambda x: (6 * x) | 0']",
109,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,random,1,1,2,1,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) % (0+1)', 'lambda x: (6 * x) % (6+1)', 'lambda x: (6 * x) | (0+1)', 'lambda x: (6 * x) | (6+1)', 'lambda x: (6 * x) + (0+1)', 'lambda x: (6 * x) + (6+1)', 'lambda x: (6 * x) - (0+1)', 'lambda x: (6 * x) - (6+1)', 'lambda x: (6 * x) * (0+1)', 'lambda x: (6 * x) * (6+1)', 'lambda x: (6 * x) / (0+1)', 'lambda x: (6 * x) / (6+1)', 'lambda x: (6 * x) ** (0+1)', 'lambda x: (6 * x) ** (6+1)']",
110,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,random,1,1,2,0,1,0,"['30', '36', '42', '48', '54', '60']","['lambda x: (2 * x) * 3', 'lambda x: (x * 4) + 6', 'lambda x: (x * 6) - 6']",
111,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,random,1,1,2,0,2,0,"['36', '42', '48', '54']","['lambda x: (3 * x) * 2', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) * 3']",
112,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,random,1,0,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (6 * x) + 6', 'lambda x: (6 * x) + 12', 'lambda x: (6 * x) + 18', 'lambda x: (6 * x) + 24']",
113,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,random,1,0,2,2,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]']",
114,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,random,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) * 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 1) % (4+1)']",
115,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,random,0,0,2,2,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) * 1', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) + 0']",
116,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,random,0,0,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (x * 2) % (4+1)', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 0', 'lambda x: (x * 2) + 0', 'lambda x: (x * 2) | 0']",
117,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,random,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x)', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) - 2', 'lambda x: (x * 2) ** 2']",
118,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,random,1,0,2,0,0,0,"['12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 3', 'lambda x: (4 * x) / 2', 'lambda x: (5 * x) / 2', 'lambda x: (6 * x) / 2', 'lambda x: (10 * x) / 4']",
119,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,random,1,0,2,0,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) / 2']",
120,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,random,1,0,2,0,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x + 2) * 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) / 2']",
121,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,random,1,0,2,0,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) / 2']",
122,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,random,1,0,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 4', 'lambda x: (x * 4) / 2', 'lambda x: (x * 2) + 4', 'lambda x: (x + 4) * 2']",
123,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,random,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (x * 2) + 2', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 2) % (4+1)']",
124,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,random,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 8', 'lambda x: (2 * x) + 10']",
125,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,random,1,0,2,0,0,1,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 4) % (3+1)', 'lambda x: (4 * x) * 2', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'lambda x: (2 * x) ** 1', 'lambda x: 5 ** (3 * x)']",
126,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,random,1,1,2,0,1,0,"['14', '16', '18']","['lambda x: (1 * x) * 2', 'lambda x: (2 * x) + 4', 'lambda x: (3 * x) - 2']",
127,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,random,1,0,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50']","['lambda x: 2 * (x + 3)', 'lambda x: (2 * x) + 4', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]']",
128,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,random,0,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) | 2', 'lambda x: (6 * x) | 0']",
129,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,random,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 6', 'lambda x: (2 * (x + 3)) - 2', 'lambda x: (4 * x) - 2']",
130,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,random,0,1,2,0,2,0,"['8', '10', '12']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) ** 1', 'lambda x: (2 + x) * 2']",
131,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,random,1,0,2,1,1,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) % (0+1)']",
132,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,random,1,1,2,1,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) ** 1', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 5) % (4+1)', 'lambda x: (x * 6) % (4+1)']",
133,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,random,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) * 0', 'lambda x: (2 * x) | 0', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]']",
134,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,6,random,1,1,2,0,0,0,"['256', '1024']","['lambda x: (1 * x) ** 2', 'lambda x: (2 * x) ** 3', 'lambda x: (4 * x) ** 4', 'lambda x: (1 * x) << 2', 'lambda x: (2 * x) << 3', 'lambda x: (4 * x) << 4']",
135,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,6,random,1,1,2,0,1,0,"['256', '1024']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (x - 1)', 'lambda x: (4 * x) - 3']",
136,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,6,random,1,0,2,0,0,0,"['2048', '4096', '8192', '16384']","['lambda x: 2 ** (4 * x)', 'lambda x: 4 ** (4 * x - 1)', 'lambda x: 4 ** (4 * x - 2)']",
137,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,6,random,0,0,1,0,0,0,"['19', '23', '27', '31']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) - 1']",
138,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,random,0,0,0,1,0,0,"['17', '21', '25', '29']","['lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (5 + 1)][x]', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]']",
139,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,random,0,0,0,0,1,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) + 3', 'lambda x: (6 * x) + 1', 'lambda x: (4 * x) + (-2)']",
140,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,random,1,1,2,0,0,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) - 1']",
141,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,random,1,0,2,0,1,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 1']",
142,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,random,1,0,2,0,1,0,"['21', '25', '29', '33']","['lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) + 1']",
143,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,random,1,1,2,0,1,0,"['25', '29', '33', '37']","['lambda x: (4 * x) + 5', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) | 1']",
144,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,random,1,0,2,0,0,0,"['27', '29', '31']","['lambda x: (x * 4) + 1', 'lambda x: (x * 4) + 13', 'lambda x: (x * 4) - 3', 'lambda x: (x * 4) - 9']",
145,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,random,1,0,0,0,0,0,"['27', '31', '35', '39']","['lambda x: (2 * x) + 11', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 5']",
146,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,6,random,1,1,2,0,0,0,"['0', '1']","['lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 4) % (4+1)']",
147,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,6,random,1,0,2,0,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (x // 2) % 2', 'lambda x: (x + 1) % 2', 'lambda x: (x + 2) % 2']",
148,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,random,1,1,2,0,2,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) % (5+1)']",
149,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,random,1,0,2,1,0,0,"['23', '27', '31', '35']","['lambda x: 4 * x + 3', 'lambda x: (2 * x + 1) * 2 - 1', 'lambda x: (2 * x + 5) * 2 - 3', 'lambda x: (2 * x + 9) * 2 - 5']",
150,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,random,1,1,2,0,1,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 2']",
151,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,random,1,1,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 7']",
152,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,random,1,0,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 19']",
153,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) + 1']",
154,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) % (4+1)']",
155,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,exclude_class,1,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 5) % (3+1)']",
156,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,exclude_class,1,1,2,1,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) | 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) | 1']",
157,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 1) % (4+1)']",
158,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,exclude_class,0,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: (x * 1) % (4+1)', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) | 1', 'lambda x: (x * 1) ** 1', 'lambda x: (x * 1) - 1']",
159,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) | 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (4 * x) / 4']",
160,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,exclude_class,0,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 0', 'lambda x: (1 * x) + 0', 'lambda x: (2 * x) - 1', 'lambda x: (4 * x) - 3']",
161,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 1) % (4+1)']",
162,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 3) % (2+1) + 1', 'lambda x: (2 * x) ** 4 - (2 * x) ** 3 + (2 * x) ** 2 - (2 * x) + 1', 'lambda x: 2 ** (4 * x) - 2 ** (3 * x) + 2 ** (2 * x) - 2 ** (x) + 1']",
163,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['5', '8', '16', '32']","['lambda x: x + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 0) + 1', 'lambda x: (x * 1) + 0']",
164,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (1 * x) ** 1', 'lambda x: (2 * x) | -1']",
165,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,exclude_class,1,1,2,1,2,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 1', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) | 0']",
166,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,exclude_class,0,1,2,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: x + 1', 'lambda x: 2 * x', 'lambda x: 3 * x', 'lambda x: 4 * x', 'lambda x: 5 * x', 'lambda x: 6 * x', 'lambda x: 7 * x', 'lambda x: 8 * x', 'lambda x: 9 * x', 'lambda x: 10 * x', 'lambda x: 11 * x', 'lambda x: 12 * x', 'lambda x: 13 * x', 'lambda x: 14 * x', 'lambda x: 15 * x', 'lambda x: 16 * x', 'lambda x: 17 * x', 'lambda x: 18 * x', 'lambda x: 19 * x', 'lambda x: 20 * x', 'lambda x: 21 * x', 'lambda x: 22 * x', 'lambda x: 23 * x', 'lambda x: 24 * x', 'lambda x: 25 * x', 'lambda x: 26 * x', 'lambda x: 27 * x', 'lambda x: 28 * x', 'lambda x: 29 * x', 'lambda x: 30 * x', 'lambda x: 31 * x', 'lambda x: 32 * x', 'lambda x: 33 * x', 'lambda x: 34 * x', 'lambda x: 35 * x', 'lambda x: 36 * x', 'lambda x: 37 * x', 'lambda x: 38 * x', 'lambda x: 39 * x', 'lambda x: 40 * x', 'lambda x: 41 * x', 'lambda x: 42 * x', 'lambda x: 43 * x', 'lambda x: 44 * x', 'lambda x: 45 * x', 'lambda x: 46 * x', 'lambda x: 47 * x', 'lambda x: 48 * x', 'lambda x: 49 * x', 'lambda x: 50 * x', 'lambda x: 51 * x', 'lambda x: 52 * x', 'lambda x: 53 * x', 'lambda x: 54 * x', 'lambda x: 55 * x', 'lambda x: 56 * x', 'lambda x: 57 * x', 'lambda x: 58 * x', 'lambda x: 59 * x', 'lambda x: 60 * x', 'lambda x: 61 * x', 'lambda x: 62 * x', 'lambda x: 63 * x', 'lambda']",
167,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,exclude_class,0,1,1,0,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x)', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 1) + 0', 'lambda x: (x * 1) | 0']",
168,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,exclude_class,1,1,2,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x', 'lambda x: (2 * x) ** 0', 'lambda x: (x * 5) % (1+0)']",
169,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,6,exclude_class,0,1,1,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) * 1', 'lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3']",
170,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,exclude_class,0,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (5 * x) - 3', 'lambda x: (1 * x) + 2']",
171,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,exclude_class,1,0,2,2,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 2', 'lambda x: (x * 1) % (3+1) + 2', 'lambda x: (x * 2) % (3+1) + 2', 'lambda x: (x * 3) % (3+1) + 2']",
172,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,exclude_class,1,1,2,0,1,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 1) + 1']",
173,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,exclude_class,1,1,1,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: (x + 1)', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",
174,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,exclude_class,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) ** 1']",
175,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,exclude_class,1,0,2,1,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) ** 2', 'lambda x: (1 * x) * 3']",
176,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: 2 * x - 1', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 2']",
177,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,exclude_class,0,0,1,1,0,0,"['6', '8', '10', '12']","['lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) + 1']",
178,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,exclude_class,1,0,0,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: 2 * x + 1', 'lambda x: x + 2']",
179,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 2']",
180,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,exclude_class,0,0,2,2,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3']",
181,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 0']",
182,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + (-1)']",
183,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,exclude_class,1,1,0,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: x + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3']",
184,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (5 + 1)][x]']",
185,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) % 4', 'lambda x: (4 * x) / 2']",
186,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,exclude_class,0,0,0,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",
187,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3']",
188,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,exclude_class,1,1,2,0,1,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 3 + (x % 2)']",
189,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (1 * x) * 3', 'lambda x: [i for i in range(100) if i % (9 + 1) or i % (6 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 3) % (9+1)']",
190,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (1 * x) + 0', 'lambda x: (x * 3) % (3+1)']",
191,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['12', '15', '18']","['lambda x: 3 * x', 'lambda x: (x * 3) % (1+1)', 'lambda x: (2 * x) | 3', 'lambda x: (2 * x) + 3']",
192,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: 3 * x', 'lambda x: (x * 3) % (1+1)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 5) % (3+1)']",
193,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,exclude_class,1,1,2,1,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: (1 * x) ** 2', 'lambda x: (3 * x) ** 1']",
194,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['15', '18', '21', '24']","['lambda x: 3 * x', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",
195,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['15', '18', '21', '24']","['lambda x: 3 * x', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3']",
196,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,exclude_class,1,1,2,0,1,0,"['18', '21', '24']","['lambda x: (3 * x) | 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",
197,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['18', '21', '24']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) - 3', 'lambda x: (3 * x) * 3', 'lambda x: (3 * x) / 3', 'lambda x: (3 * x) % 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) & 3', 'lambda x: (3 * x) ^ 3', 'lambda x: (3 * x) << 3', 'lambda x: (3 * x) >> 3']",
198,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) ** 2', 'lambda x: (5 * x) - 1']",
199,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['18', '21', '24']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 2 + 3', 'lambda x: (3 * x) * 4 - 3']",
200,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 1', 'lambda x: (1 * x) * 3', 'lambda x: (1 * x) + 5']",
201,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,6,exclude_class,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * (x + 1)', 'lambda x: 3 * x + 3', 'lambda x: (x + 1) * 3 + 3', 'lambda x: (x + 1) * 3 + 6', 'lambda x: (x + 1) * 3 + 9']",
202,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,exclude_class,1,1,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * (x - 1)) + 9']",
203,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,exclude_class,0,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) | 9', 'lambda x: (3 * x + 3) ** 1', 'lambda x: (3 * x + 3) | 4']",
204,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) ** 2', 'lambda x: (3 * x) | 3']",
205,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,exclude_class,0,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (3 * x) + 3']",
206,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",
207,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) - 1', 'lambda x: (1 * x) + 4']",
208,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x + 4)', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) | 4', 'lambda x: (x * 1) ^ 4', 'lambda x: (x * 1) & 4']",
209,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,exclude_class,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 4', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 4 + (x * 0)']",
210,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12']","['lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'lambda x: x + 4', 'lambda x: (x * 1) + 4', 'lambda x: (x * 2) - 2', 'lambda x: (x * 3) - 6']",
211,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 3 + 1', 'lambda x: (x * 1) + 2 + 2', 'lambda x: (x * 1) + 1 + 3']",
212,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)', 'lambda x: (x * 1) % (4+1)']",
213,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,exclude_class,0,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 4', 'lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1']",
214,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['8', '10', '12']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
215,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,6,exclude_class,0,1,0,0,0,0,"['3', '0']","['lambda x: x % 3', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x + 1) % 3']",
216,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,6,exclude_class,0,0,2,0,0,0,"['0', '1', '2']","['lambda x: x % 3', 'lambda x: (x + 1) % 3', 'lambda x: (x + 2) % 3', 'lambda x: (x * 2) % 3']",
217,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,6,exclude_class,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (4 + x) * 1', 'lambda x: (5 + x) * 1', 'lambda x: (7 + x) * 1', 'lambda x: (8 + x) * 1']",
218,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,exclude_class,1,1,2,0,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]']",
219,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (x * 4) % (4+1)', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 1) % (1+1)', 'lambda x: (x * 5) % (5+1)', 'lambda x: (x * 6) % (6+1)', 'lambda x: (x * 7) % (7+1)', 'lambda x: (x * 8) % (8+1)']",
220,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1']",
221,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,exclude_class,0,0,2,0,0,0,"['9', '11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (x * 4) - 3']",
222,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,exclude_class,0,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: 2 * x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: (1 * x) | 0', 'lambda x: (x * 2) % (0+1)']",
223,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) - 4', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) - 5', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) - 6', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) - 7']",
224,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,0,2,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3']",
225,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) | 3', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 1']",
226,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (1 * x) * 2 + 1']",
227,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,exclude_class,1,1,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: 3 + (2 * x)', 'lambda x: (3 * x) + 2', 'lambda x: (2 * x) + 3', 'lambda x: (x * x) - 2']",
228,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (4 * x) | -1']",
229,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['13', '15', '17']","['lambda x: (2 * x) + 3', 'lambda x: (1 * x) * 2 + 1', 'lambda x: (1 * x) * 2 + 3']",
230,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,exclude_class,1,0,2,0,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 9']",
231,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: 2 * x + 5', 'lambda x: 4 * x - 3', 'lambda x: (x + 5) * 2 - 1']",
232,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,exclude_class,1,1,2,0,2,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) ^ 1']",
233,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,exclude_class,1,1,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) | 1', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 6) % (4+1)']",
234,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 8']",
235,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,6,exclude_class,1,0,2,1,0,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 5', 'lambda x: (x * 1) + 5 + (x - 1)', 'lambda x: (x * 1) + 5 + (2 * (x - 1))', 'lambda x: (x * 1) + 5 + (3 * (x - 1))']",
236,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,exclude_class,1,1,2,1,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 5', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 4']",
237,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,exclude_class,1,0,2,0,1,0,"['22', '26', '30']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) | 2', 'lambda x: (4 * x) | 4']",
238,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,6,exclude_class,1,0,2,0,1,1,"['22', '26', '30', '34']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (x + 2) * 4', 'lambda x: (x * 4) + 2']",
239,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,exclude_class,0,0,2,0,0,0,"['24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (x + 4) * 2', 'lambda x: (x * 2) + 4', 'lambda x: (x * 4) + 2']",
240,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['30', '34', '38', '42']","['lambda x: (4 * x) + 10', 'lambda x: (x * 4) + 14', 'lambda x: (x * 4) % (2+2) + 14']",
241,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,exclude_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) + 0', 'lambda x: (1 * x) ** 2', 'lambda x: (2 * x) ** 2']",
242,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,exclude_class,0,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: 4 * x', 'lambda x: (2 * x) + (2 * (x - 1))', 'lambda x: (2 * x) + (2 * (x - 2))', 'lambda x: (2 * x) + (2 * (x - 3))', 'lambda x: (2 * x) + (2 * (x - 4))', 'lambda x: (2 * x) + (2 * (x - 5))', 'lambda x: (2 * x) + (2 * (x - 6))', 'lambda x: (2 * x) + (2 * (x - 7))', 'lambda x: (2 * x) + (2 * (x - 8))', 'lambda x: (2 * x) + (2 * (x - 9))', 'lambda x: (2 * x) + (2 * (x - 10))', 'lambda x: (2 * x) + (2 * (x - 11))', 'lambda x: (2 * x) + (2 * (x - 12))', 'lambda x: (2 * x) + (2 * (x - 13))', 'lambda x: (2 * x) + (2 * (x - 14))', 'lambda x: (2 * x) + (2 * (x - 15))', 'lambda x: (2 * x) + (2 * (x - 16))', 'lambda x: (2 * x) + (2 * (x - 17))', 'lambda x: (2 * x) + (2 * (x - 18))', 'lambda x: (2 * x) + (2 * (x - 19))']",
243,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (x * 4) % (4+1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 4) | 0']",
244,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,exclude_class,1,0,2,0,1,1,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (1 * x) | 4', 'lambda x: (2 * x) | 0']",
245,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,exclude_class,1,1,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (2 * x) ** 1', 'lambda x: (3 * x) ** 1', 'lambda x: (4 * x) ** 1', 'lambda x: (x * 4) % (4+1)']",
246,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,exclude_class,0,1,2,0,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) ** 0', 'lambda x: (4 * x) * 0', 'lambda x: (4 * x) + 4', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) | 0', 'lambda x: 4 ** (2 * x)']",
247,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,exclude_class,1,1,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 0', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) - 3']",
248,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: 4 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) * 2']",
249,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,exclude_class,0,1,2,1,0,0,"['20', '24', '28', '32']","['lambda x: 4 * x', 'lambda x: (2 * x) ** 2', 'lambda x: (x * 4) + 0']",
250,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,exclude_class,1,1,2,0,1,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 0', 'lambda x: (4 * x) - 4', 'lambda x: (4 * x) | 0']",
251,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['24', '28', '32']","['lambda x: (x * 4) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 4']",
252,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['24', '18', '22']","['lambda x: (x * 4) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x * 4) + 12', 'lambda x: (x * 4) + 16']",
253,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,exclude_class,0,1,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) * 2', 'lambda x: (2 * x) * 4', 'lambda x: (x + 8) * 2']",
254,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['24', '28', '32']","['lambda x: 4 * x + 4', 'lambda x: 4 * (x + 2)']",
255,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * (x + 1)', 'lambda x: 4 * x + 8', 'lambda x: 4 * (x + 3)']",
256,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,exclude_class,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (2 * x) * 4', 'lambda x: (4 * x) % (4+1)', 'lambda x: (4 * x) | 4']",
257,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) | 12', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (5 + 1)][x]']",
258,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 8', 'lambda x: (x * 4) + 12']",
259,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,exclude_class,0,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 8', 'lambda x: (x + 4) * 4', 'lambda x: (x * 4) + 4']",
260,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,exclude_class,1,1,2,1,1,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96']","['lambda x: (3 * x) * 2', 'lambda x: (6 * x) + 0', 'lambda x: (6 * x) * 1']",
261,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120']","['lambda x: (x * 6) % (0+1)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (6 + 1)][x]']",
262,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,exclude_class,0,1,2,0,2,0,"['30', '36', '42', '48']","['lambda x: (6 * x) | 0', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (x * 4) | 6']",
263,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,exclude_class,1,1,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (x * 6) % (6+1)', 'lambda x: (x * 2) * 3', 'lambda x: (x * 3) * 4']",
264,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,exclude_class,1,1,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (3 * x) + 6', 'lambda x: (6 * x) + 6', 'lambda x: (6 * x) + 12', 'lambda x: (4 * x) + 12']",
265,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,exclude_class,0,0,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (6 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (2 * x) + 10', 'lambda x: (1 * x) + 11']",
266,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,exclude_class,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 0', 'lambda x: (x * 2) + 2']",
267,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 0', 'lambda x: (x * 2) % (2+1)']",
268,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,exclude_class,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x)', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 2) ** 2']",
269,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,exclude_class,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 2']",
270,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,exclude_class,0,0,2,0,0,0,"['10', '12', '14', '16', '18', '20']","['lambda x: 2 * x', 'lambda x: x + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) - 2']",
271,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,exclude_class,1,1,2,1,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 2']",
272,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,exclude_class,1,1,2,0,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 1) + 4']",
273,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,exclude_class,1,0,2,1,0,1,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (4 * x) / 2', 'lambda x: (5 * x) - 2']",
274,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) | 2', 'lambda x: (x * 5) % (2+1)']",
275,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 4', 'lambda x: (x * 4) / 2', 'lambda x: (x + 4) * 2']",
276,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: [i for i in range(100) if i % (10 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 4) % (4+2)']",
277,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (4 * x) + 2']",
278,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,exclude_class,0,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (4 * x) | 2']",
279,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,exclude_class,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 6', 'lambda x: (1 * x) + 6']",
280,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,0,0,1,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) * 4', 'lambda x: (4 * x) + 2', 'lambda x: (4 * x) * 2']",
281,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,exclude_class,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 6', 'lambda x: (4 * x) + 2', 'lambda x: (2 * x) * 3']",
282,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 6', 'lambda x: (4 * x) + 2', 'lambda x: (x * 6) + 0', 'lambda x: (x * 4) + 6']",
283,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,exclude_class,1,0,2,0,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) + 0', 'lambda x: [i for i in range(100) if i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1)][x]']",
284,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,exclude_class,1,1,2,0,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (1 * x) * 2', 'lambda x: (2 * x) * 1', 'lambda x: (3 * x) * 0', 'lambda x: (4 * x) * -1']",
285,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,exclude_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) ** 0', 'lambda x: (2 * x) | 0', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (2 + 1)][x]']",
286,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) + 0', 'lambda x: (x * 2) % (0+1)']",
287,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,6,exclude_class,1,0,2,0,1,0,"['128', '256', '512', '1024']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (x - 1)', 'lambda x: (4 * x) - 3']",
288,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['128', '256', '512']","['lambda x: (2 ** x) | 0', 'lambda x: (2 ** (x - 1)) | 0', 'lambda x: (4 ** (x - 1)) | 0', 'lambda x: (4 ** x) | 0']",
289,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,6,exclude_class,0,0,2,0,0,0,"['2048', '4096', '8192', '16384', '32768', '65536']","['lambda x: 4 ** (x + 1)', 'lambda x: 4 ** (2 * x)', 'lambda x: 4 * (2 ** x)', 'lambda x: 4 * (4 ** x)']",
290,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,6,exclude_class,0,0,0,0,0,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) ** 2 + 1', 'lambda x: (x * 5) - 2']",
291,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,exclude_class,1,0,2,0,1,0,"['19', '23', '27', '31']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) ** 2 + 1', 'lambda x: (x ** 2) + (2 * x) + 1']",
292,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,exclude_class,1,0,2,0,0,0,"['19', '23', '27', '31']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
293,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,exclude_class,1,1,2,0,0,0,"['17', '21', '25', '29']","['lambda x: (4 * x) - 3', 'lambda x: (2 * x) ** 2 - 1', 'lambda x: (2 * x) + (3 * x) - 1']",
294,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,exclude_class,1,1,2,0,2,0,"['17', '21', '25', '29']","['lambda x: (4 * x) | 1', 'lambda x: (4 * x) | -3', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 3']",
295,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['21', '25', '29', '33']","['lambda x: (x * 4) + 1', 'lambda x: (x * 4) + 5', 'lambda x: (x * 4) - 1', 'lambda x: (x * 4) - 3']",
296,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,exclude_class,1,0,0,1,0,0,"['23', '27', '31', '35']","['lambda x: (x * 4) + 5', 'lambda x: (x * 2) + 7', 'lambda x: (x * 5) - 2']",
297,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['27', '29', '31', '33', '35']","['lambda x: (4 * x) + 9', 'lambda x: (x * 4) + 9', 'lambda x: (x * 4) + 13']",
298,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['27', '29', '31']","['lambda x: (x * 4) + 9', 'lambda x: (x * 4) + 13', 'lambda x: (x * 4) + 17', 'lambda x: (x * 4) + 21']",
299,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,6,exclude_class,1,0,2,0,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (x // 2) % 2', 'lambda x: (x + 1) % 2', 'lambda x: (x + 1) // 2 % 2']",
300,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,6,exclude_class,1,0,2,1,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (x * 4) % (0+1)', 'lambda x: (x * 4) % (1+1)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 4) % (3+1)']",
301,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,exclude_class,1,0,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (x * 4) + 3']",
302,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,exclude_class,1,1,2,0,2,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) ^ 3']",
303,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,exclude_class,1,0,2,0,1,0,"['27', '31', '35', '39']","['lambda x: (2 * x) + 9', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 2']",
304,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,exclude_class,1,1,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 3', 'lambda x: (x * 4) + 3', 'lambda x: (x * 5) % (4+1)']",
305,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,exclude_class,1,1,2,0,0,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 19', 'lambda x: (4 * x) + 23']",
306,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 3']",
307,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,same_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 0', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) ** 0', 'lambda x: (4 * x) // 3', 'lambda x: (5 * x) % 4']",
308,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3']",
309,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 1) % (2+1)']",
310,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,same_class,0,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) | 1', 'lambda x: (1 * x) ** 0']",
311,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 0']",
312,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,6,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 1', 'lambda x: (1 * x) + (x - 1)']",
313,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,same_class,1,1,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 1', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) - 1']",
314,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 0', 'lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) + 0']",
315,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,same_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1) or i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 1) + 1']",
316,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (x * 1) + 0', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 3']",
317,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,same_class,1,1,2,3,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3']",
318,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,same_class,0,1,1,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) ** 2', 'lambda x: 2 ** (4 * x)']",
319,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,same_class,1,0,2,3,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 3', 'lambda x: (4 * x) - 6']",
320,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,same_class,0,0,1,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 4) % (3+1)', 'lambda x: (2 * x) ** 0', 'lambda x: 2 ** (2 * x)']",
321,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,same_class,1,1,2,2,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (1 * x) + 0', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (1 * x) ** 0', 'lambda x: (1 * x) | 0']",
322,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,6,same_class,0,1,1,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 0']",
323,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,same_class,1,0,1,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x + 1) * 2', 'lambda x: (x + 2) * 3', 'lambda x: (x + 3) * 4', 'lambda x: (x + 4) * 5']",
324,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 1) % (3+1) + 2']",
325,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,same_class,1,0,0,1,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (x + 1) % (2+1)', 'lambda x: (x * 1) | 1', 'lambda x: (x * 2) | 0']",
326,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,same_class,0,0,2,3,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 2) + 0', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) + 2', 'lambda x: (x * 2) + 3']",
327,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,same_class,1,1,2,1,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 2', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 5']",
328,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,same_class,1,0,2,2,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) + 0']",
329,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,same_class,0,0,1,1,0,0,"['7', '9', '11', '13', '15']","['lambda x: (x * 1) % (5+1)', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3']",
330,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,same_class,1,0,1,2,0,0,"['7', '9', '11', '13', '15']","['lambda x: x + 1', 'lambda x: 2 + x', 'lambda x: (x * 1) + 2']",
331,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) - 2']",
332,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: (2 * x) | 1', 'lambda x: (3 * x) * 1']",
333,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,6,same_class,1,0,2,3,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) ** 0', 'lambda x: (4 * x) ** 0', 'lambda x: (5 * x) ** 0']",
334,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,same_class,1,0,2,2,0,0,"['7', '8', '9', '10']","['lambda x: (x + 1) | 0', 'lambda x: (2 * x) + 1', 'lambda x: (x * 3) % (1+1)']",
335,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: (2 * x) + 1', 'lambda x: (x * 1) + 3']",
336,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,same_class,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 3']",
337,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,same_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) % (4+1)', 'lambda x: (2 * x) + 3']",
338,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,same_class,1,0,2,1,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: x + 2', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",
339,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,6,same_class,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1']",
340,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,same_class,0,0,2,3,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) + 1']",
341,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,6,same_class,1,0,2,2,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 1']",
342,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,same_class,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (2 * x) | 0', 'lambda x: (1 * x) ** 2', 'lambda x: [i for i in range(100) if i % (3 + 1)][x]']",
343,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['12', '15', '18']","['lambda x: 3 * x', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 3) ** 2', 'lambda x: (x * 3) + (x * 0)']",
344,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (2 * x) + 0', 'lambda x: (x * 3) + 0']",
345,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,same_class,1,0,2,2,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: 3 * x', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 3) % (5+1)', 'lambda x: (x * 3) % (6+1)', 'lambda x: (x * 3) % (7+1)', 'lambda x: (x * 3) % (8+1)', 'lambda x: (x * 3) % (9+1)', 'lambda x: (x * 3) % (10+1)']",
346,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,same_class,1,1,2,1,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) - 3']",
347,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['15', '18', '21', '24']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6']",
348,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,same_class,1,1,2,0,1,0,"['15', '18', '21', '24']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) | 0']",
349,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,same_class,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) * 1']",
350,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,same_class,1,1,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (1 * x) + 5', 'lambda x: (2 * x) + 4']",
351,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (2 * x) + 4', 'lambda x: (3 * x) | 0', 'lambda x: (4 * x) - 3']",
352,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,same_class,1,0,2,1,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) * 1']",
353,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (5 + 1)][x]']",
354,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,6,same_class,1,0,2,0,1,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) % (3+1)']",
355,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['21', '24', '27']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) ** 2', 'lambda x: (3 * x) ** 3']",
356,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 9', 'lambda x: (1 * x) | 9']",
357,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,6,same_class,1,1,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",
358,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,6,same_class,1,0,2,1,0,0,"['21', '24', '27', '30']","['lambda x: 3 * (1 * x) + 3', 'lambda x: 3 * (2 * x) + 3', 'lambda x: 3 * (3 * x) + 3', 'lambda x: 3 * (4 * x) + 3']",
359,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,6,same_class,0,0,2,1,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x * 3) + 6', 'lambda x: (x * 3) + 3 * (x - 1)']",
360,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,6,same_class,1,0,0,1,0,0,"['9', '11', '13', '15']","['lambda x: x + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) - 1']",
361,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['8', '9', '10']","['lambda x: x + 4', 'lambda x: (x * 4) % (3+1) + 1', 'lambda x: (3 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x] + 1']",
362,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,6,same_class,1,1,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: (x * 1) + 4', 'lambda x: (x * 2) % (3 + 1) + 4', 'lambda x: (x * 3) % (2 + 1) + 4']",
363,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,6,same_class,1,0,2,0,0,0,"['8', '9', '10']","['lambda x: x + 4', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 2']",
364,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,6,same_class,0,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: (x * 4) + 4', 'lambda x: (x * 1) + 4']",
365,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,same_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) | 2', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) / 2', 'lambda x: (5 * x) % 3']",
366,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,6,same_class,0,1,2,2,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (5+1)', 'lambda x: (x * 4) % (6+1)', 'lambda x: (x * 5) % (7+1)']",
367,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,6,same_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 5', 'lambda x: (x * 1) + 6', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 1) % (5+1)', 'lambda x: (x * 1) % (6+1)', 'lambda x: (x * 1) % (7+1)']",
368,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,6,same_class,0,0,0,1,1,1,"['0', '2', '4', '6', '8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (x * 0) % (2+1)', 'lambda x: (x * 1) % (2+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 3) % (2+1)']",
369,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,6,same_class,0,1,0,2,0,0,"['3', '0']","['lambda x: (1 * x) % 3', 'lambda x: (1 * x) * 2 % 4', 'lambda x: (1 * x) * 2 % 3', 'lambda x: (1 * x) * 3 % 4']",
370,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (x + 1) ** 1', 'lambda x: (x + 1) * 2 - 1', 'lambda x: (x + 1) * 3 - 2', 'lambda x: (x + 1) * 4 - 3']",
371,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,6,same_class,0,0,2,3,0,0,"['9', '10', '11', '12']","['lambda x: (x * 2) + 4', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) + 0', 'lambda x: (x * 5) - 1']",
372,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,6,same_class,1,0,2,1,0,0,"['9', '10', '11']","['lambda x: (x + 4) % (1+1)', 'lambda x: (x + 4) % (2+1)', 'lambda x: (x + 4) % (3+1)', 'lambda x: (x + 4) % (4+1)', 'lambda x: (x + 4) % (5+1)', 'lambda x: (x + 4) % (6+1)', 'lambda x: (x + 4) % (7+1)', 'lambda x: (x + 4) % (8+1)']",
373,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,same_class,1,1,2,0,1,0,"['9', '11', '13', '15']","['lambda x: (2 * x) ** 1', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 1']",
374,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,same_class,1,1,2,1,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 0']",
375,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,same_class,0,0,2,2,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 1']",
376,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 3']",
377,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,same_class,1,0,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 3']",
378,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,same_class,1,1,2,1,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (x * 4) % (5+1)', 'lambda x: (x * 2) + 3']",
379,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,same_class,1,1,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (x * 5) % (2+1)']",
380,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5']",
381,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,same_class,1,0,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 4']",
382,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,6,same_class,1,1,2,2,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (3 * x) | 1', 'lambda x: (4 * x) - 1']",
383,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,same_class,1,1,2,0,2,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) - 1']",
384,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (x * 4) % (5+1)']",
385,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,6,same_class,0,0,2,1,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 8']",
386,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,6,same_class,1,0,2,1,1,0,"['15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 1']",
387,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 9', 'lambda x: (2 * x) + 11']",
388,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,6,same_class,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (x * 1) + 5', 'lambda x: (x * 1) % (5+1)', 'lambda x: (x * 2) % (3+1)']",
389,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,6,same_class,0,0,2,2,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 5', 'lambda x: (1 * x) ** 1', 'lambda x: (4 * x) | 1']",
390,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,same_class,0,0,2,2,0,0,"['22', '26', '30', '34']","['lambda x: 2 * x + 4', 'lambda x: 4 * x - 2', 'lambda x: (x * 4) - 2']",
391,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,6,same_class,1,1,0,0,1,0,"['20', '24', '28', '32']","['lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 6', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8']",
392,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,same_class,1,1,2,0,0,0,"['24', '26', '28', '30']","['lambda x: 4 * x + 6', 'lambda x: (2 * x) | 4', 'lambda x: (x * 2) + 8']",
393,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,6,same_class,1,1,2,0,0,0,"['30', '34', '38', '42']","['lambda x: (4 * x) + 10', 'lambda x: (x * 4) + 14', 'lambda x: (x + 4) * 4', 'lambda x: (x * 2) + (2 * x) + 10']",
394,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,same_class,1,1,2,3,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '148', '152', '156', '160', '164', '168', '172', '176', '180', '184', '188', '192', '196', '200', '204', '208', '212', '216', '220', '224', '228', '232', '236', '240', '244', '248', '252', '256', '260', '264', '268', '272', '276', '280', '284', '288', '292', '296', '300', '304', '308', '312', '316', '320', '324', '328', '332', '336', '340', '344', '348', '352', '356', '360', '364', '368', '372', '376', '380', '384', '388', '392', '396', '400', '404', '408', '412', '416', '420', '424', '428', '432', '436', '440', '444', '448', '452', '456', '460', '464', '468', '472', '476', '480', '484', '488', '492', '496', '500', '504', '508', '512', '516', '520', '524', '528', '532', '536', '540', '544', '548', '552', '556', '560', '564', '568', '572', '576', '580', '584', '588', '592', '596', '600', '604', '608', '612', '616', '620', '624', '628', '632', '636', '640', '644', '648', '652', '656', '660', '664', '668', '672', '676', '680', '684', '688']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) % (4+1)']",
395,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,same_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (x * 4) + 0', 'lambda x: (x * 4) % (0+1)', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) ** 0']",
396,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,same_class,1,1,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) ^ 0']",
397,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,same_class,1,1,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) | 0', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) - 0']",
398,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['16', '20', '24', '28', '32']","['lambda x: (x * 4) % (0+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 4) % (8+1)', 'lambda x: (x * 4) % (12+1)']",
399,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,same_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) % (2+1)']",
400,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,same_class,1,1,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x)', 'lambda x: (2 * x) * 2', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) * 1']",
401,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,same_class,1,0,2,3,0,0,"['20', '24', '28', '32', '36', '40']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) ** 3']",
402,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,same_class,1,1,2,0,1,0,"['20', '24', '28', '32']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) & 4']",
403,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['20', '24', '28', '32']","['lambda x: 4 * x', 'lambda x: (x * 4) % (0+1)', 'lambda x: (x * 4) | 0', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) - 0']",
404,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8', 'lambda x: (4 * x) - 4']",
405,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['24', '28', '32']","['lambda x: (x * 4) + 4', 'lambda x: (x * 4) % (4 + 1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]']",
406,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,same_class,1,1,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (x * 4) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 4']",
407,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (x * 4) % (4+1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 1) % (4+1)']",
408,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,6,same_class,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) | 12', 'lambda x: (4 * x) % (4+1)']",
409,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,6,same_class,1,1,0,0,1,0,"['48', '52', '56', '60']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) - 4']",
410,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,6,same_class,1,1,2,1,0,0,"['28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (2 * x) * 3', 'lambda x: (4 * x) | 0', 'lambda x: (x * 5) % (2+1)']",
411,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,6,same_class,1,0,2,1,0,0,"['28', '32', '36', '40']","['lambda x: 4 * x + 8', 'lambda x: 4 * (x + 2)']",
412,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * x + 8', 'lambda x: 4 * (x + 3)']",
413,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,same_class,1,0,2,2,2,2,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: (3 * x) * 2', 'lambda x: (6 * x) * 1', 'lambda x: (2 * x) * 3']",
414,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,same_class,1,1,2,0,2,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: (3 * x) * 2', 'lambda x: (6 * x) * 1', 'lambda x: (2 * x) * 3']",
415,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,same_class,1,1,2,0,2,0,"['30', '36', '42', '48']","['lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 4', 'lambda x: (4 * x) * 1']",
416,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,same_class,1,1,2,0,2,0,"['30', '36', '42', '48']","['lambda x: (6 * x)', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3']",
417,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,6,same_class,1,1,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (3 * x) + 6', 'lambda x: (6 * x) + 6', 'lambda x: (4 * x) + 6', 'lambda x: (2 * x) + 12']",
418,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,6,same_class,1,1,2,1,0,0,"['36', '42', '48', '54']","['lambda x: 6 * x + 6', 'lambda x: 3 * (2 * x + 2)']",
419,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,same_class,1,1,2,0,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) * 1', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) % (2+1)']",
420,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,same_class,1,1,2,0,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (2 * x) * 4', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) * 4', 'lambda x: (1 * x) * 6', 'lambda x: (1 * x) * 8']",
421,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,same_class,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20']","['lambda x: 2 * x', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) ** 2', 'lambda x: (4 * x) / 2']",
422,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,same_class,1,0,2,3,0,1,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (2 * x) ** 2']",
423,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,same_class,1,1,2,2,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: 2 * x', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) ** 2']",
424,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,same_class,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: 2 * x + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x + 2) * 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]']",
425,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,same_class,1,0,2,2,0,0,"['12', '14', '16', '18', '20']","['lambda x: 2 * x + 2', 'lambda x: (2 * x) ** 1', 'lambda x: (1 * x) ** 2', 'lambda x: (x * 2) % (4+1)']",
426,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,same_class,1,1,2,0,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 2) + 4']",
427,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 4', 'lambda x: (x * 2) + 4', 'lambda x: (x * 2) % (10+1)']",
428,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,same_class,1,1,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) / 2', 'lambda x: (x * 5) - 2']",
429,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 3', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) | 4']",
430,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,same_class,1,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (1 * x) + 5', 'lambda x: (2 * x) + 6']",
431,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,6,same_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 8', 'lambda x: (2 * x) + 10', 'lambda x: (2 * x) + 12']",
432,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,6,same_class,1,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 2) + 6', 'lambda x: (x * 4) + 2', 'lambda x: (x * 6) + 0']",
433,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,same_class,1,1,2,0,1,0,"['14', '16', '18']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) - 2']",
434,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) | 2', 'lambda x: (3 * x) + 2', 'lambda x: (x + 2) * 2']",
435,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,6,same_class,1,1,2,1,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) | 0', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (2 * x) ** 1']",
436,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) + 0', 'lambda x: (x * 2) % (0+1)']",
437,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,6,same_class,1,1,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x)', 'lambda x: (x * 2) + 0', 'lambda x: (x * 2) % (4+1) - 2']",
438,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,6,same_class,1,0,2,1,1,1,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (1 * x) * 2', 'lambda x: (2 * x) * 1', 'lambda x: (3 * x) % (2+1)']",
439,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,6,same_class,0,0,2,0,0,0,"['256', '1024']","['lambda x: 2 ** x', 'lambda x: 4 * (x ** 2) + 0', 'lambda x: 4 * (x ** 3) + 0', 'lambda x: 4 * (x ** 4) + 0']",
440,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,6,same_class,0,1,2,0,0,0,"['128', '256', '512']","['lambda x: (2 ** x) ** 1', 'lambda x: (4 ** x) ** 1', 'lambda x: (1 * x) * 3']",
441,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,6,same_class,0,0,2,0,0,1,"['2048', '4096', '8192']","['lambda x: 2 ** (4 * x)', 'lambda x: 4 ** (2 * x)', 'lambda x: 16 ** (x)']",
442,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,6,same_class,0,1,0,1,0,0,"['17', '21', '25']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
443,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,same_class,1,0,2,0,1,0,"['17', '19', '21', '23', '25']","['lambda x: (4 * x) - 3', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) ** 0', 'lambda x: (4 * x) / 3']",
444,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,same_class,0,0,1,0,1,1,"['19', '23', '27', '31']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 4']",
445,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['17', '21', '25', '29', '33']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) - 2']",
446,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,same_class,1,1,2,0,1,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 1', 'lambda x: (x * x) + 1', 'lambda x: (2 * x) + 1']",
447,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,same_class,0,1,2,1,0,0,"['21', '25', '29', '33']","['lambda x: (4 * x) + 5', 'lambda x: (4 * x) * 1 + 5', 'lambda x: (4 * x) ** 1 + 5']",
448,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,same_class,1,0,0,1,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 5', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 9']",
449,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,6,same_class,1,0,2,0,0,0,"['27', '29', '31']","['lambda x: (4 * x) + 9', 'lambda x: (x * 4) + 9', 'lambda x: (x + 9) * 4', 'lambda x: (x + 4) * 5']",
450,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,6,same_class,1,1,0,0,1,0,"['27', '31', '35']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 13']",
451,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,6,same_class,0,0,2,2,0,1,"['0', '1']","['lambda x: (x * 4) % (0+1)', 'lambda x: (x * 4) % (1+1)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 4) % (3+1)']",
452,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,6,same_class,1,1,2,0,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (x // 2) % 2', 'lambda x: (x + 1) % 2', 'lambda x: (x * 2) % 2']",
453,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,same_class,1,1,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) ** 2 - 3']",
454,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,same_class,1,1,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (x * 1) + 7']",
455,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,same_class,1,1,2,1,0,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (2 * x) ** 2 + 3', 'lambda x: (2 * x) ** 2 - 2', 'lambda x: (2 * x) ** 2 + 1']",
456,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,6,same_class,1,1,2,0,1,0,"['31', '35', '39', '43']","['lambda x: 4 * x + 11', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) ^ 3', 'lambda x: (4 * x) & 3']",
457,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,6,same_class,1,0,2,0,0,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 19', 'lambda x: (4 * x) + 23']",
458,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,exclude_class,1,0,2,2,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 1', 'lambda x: (x * 3) % (1+1)']",
459,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: 2 ** x']",
460,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 1) % (4+1)']",
461,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,exclude_class,0,0,2,1,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) * 0', 'lambda x: (2 * x) * 1']",
462,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,exclude_class,1,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) ** 1', 'lambda x: (4 * x) % (1+1)']",
463,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,exclude_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) ** 1', 'lambda x: (1 * x) + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]']",
464,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,8,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x + 0', 'lambda x: (x * 1) + 0', 'lambda x: (x * 2) % (1+1)', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 4) % (3+1)']",
465,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 0', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 4) % (5+1)']",
466,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,exclude_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3', 'lambda x: (5 * x) - 4']",
467,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,exclude_class,0,0,2,0,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) ^ 0', 'lambda x: (1 * x) * 1']",
468,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,exclude_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) * 0', 'lambda x: (3 * x) + 0', 'lambda x: (4 * x) - 1', 'lambda x: (5 * x) - 4']",
469,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,2,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) + 0', 'lambda x: (2 * x) - 1', 'lambda x: (4 * x) / 4', 'lambda x: (1 * x) ** 1']",
470,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,exclude_class,0,0,1,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x', 'lambda x: (2 * x) * 0', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) * 3']",
471,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)']",
472,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,exclude_class,1,0,2,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x * 1', 'lambda x: (x * 5) % (3+1)', 'lambda x: (2 * x) * 1', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 1', 'lambda x: (5 * x) * 4']",
473,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,2,0,1,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 4) % (3+1)', 'lambda x: (5 * x) ** 0']",
474,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,8,exclude_class,0,0,1,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) | 0', 'lambda x: (1 * x) - 0', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 0']",
475,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,exclude_class,1,0,0,1,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) | 2', 'lambda x: (2 * x) | 0', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 2']",
476,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,exclude_class,0,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 1']",
477,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,exclude_class,1,1,2,1,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) + 0', 'lambda x: (x * 4) - 1']",
478,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,exclude_class,1,0,1,0,0,0,"['6', '8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: x + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 0']",
479,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,exclude_class,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 * x - 1', 'lambda x: (2 * x) + 0', 'lambda x: (5 * x) | 4', 'lambda x: (5 * x) ** 2', '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 3)']",
480,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,exclude_class,0,1,0,0,1,1,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) | 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) + 1', 'lambda x: (5 * x) | 0', 'lambda x: (5 * x) + 1']",
481,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,exclude_class,1,1,2,1,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 0', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 3']",
482,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,exclude_class,1,1,2,0,1,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 2', 'lambda x: (5 * x) + 1', 'lambda x: (5 * x) + 2']",
483,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,0,1,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 1', 'lambda x: (5 * x) / 2']",
484,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,exclude_class,1,1,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 5']",
485,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,exclude_class,0,0,2,3,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 0']",
486,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,exclude_class,1,1,2,0,1,0,"['7', '9', '11']","['lambda x: (3 * x) ** 1', 'lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",
487,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 3', 'lambda x: (4 * x) - 6']",
488,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,exclude_class,1,1,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 5']",
489,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,exclude_class,0,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) * 3', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) * 2', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) * 2', 'lambda x: (5 * x) + 1', 'lambda x: (5 * x) * 2', 'lambda x: (6 * x) + 1', 'lambda x: (6 * x) * 2']",
490,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,exclude_class,1,1,0,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3']",
491,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,exclude_class,1,0,2,1,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2']",
492,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,exclude_class,1,1,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) * 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",
493,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: x + 0', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 + (x - 1)']",
494,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['12', '15', '18']","['lambda x: 3 * x', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) + 3']",
495,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,exclude_class,1,0,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) ** 0', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) - 0']",
496,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,exclude_class,1,0,2,1,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x * 3) % (3+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]']",
497,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,exclude_class,1,0,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) | 0', 'lambda x: (1 * x) * 3', 'lambda x: (x * 1) % (3+1)']",
498,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,exclude_class,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x)', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 0', 'lambda x: (4 * x) % (3+1)']",
499,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,exclude_class,1,1,2,0,1,0,"['15', '18', '21', '24']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) * 1', 'lambda x: (1 * x) * 3']",
500,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,exclude_class,1,1,2,0,1,0,"['15', '18', '21', '24']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 0']",
501,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,exclude_class,1,0,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 6', 'lambda x: (x * 3) + 9', 'lambda x: (x * 3) + 12']",
502,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (x * 1) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x * 2) + 6', 'lambda x: (x * 5) + 1']",
503,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,exclude_class,1,1,2,0,0,0,"['18', '21', '24']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 6', 'lambda x: (x * 1) + 6', 'lambda x: (x * 2) + 6', 'lambda x: (x * 4) + 3', 'lambda x: (x * 5) + 0']",
504,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,exclude_class,0,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) * 5']",
505,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,exclude_class,1,0,2,0,1,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",
506,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,8,exclude_class,1,1,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (3 * x) + 12']",
507,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (3 * x) + 12']",
508,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 6', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) | 9']",
509,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 6', 'lambda x: (3 * x) | 9']",
510,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,exclude_class,1,1,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",
511,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,exclude_class,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (3 * x) + 12']",
512,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,exclude_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
513,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 3']",
514,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,exclude_class,1,1,2,0,0,0,"['8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) | 2', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) + 0']",
515,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,8,exclude_class,1,0,2,1,1,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) | 2', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) ** 0']",
516,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,8,exclude_class,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) % (4+1)', 'lambda x: (x * 1) % (5+1)', 'lambda x: (x * 1) % (6+1)', 'lambda x: (x * 1) % (7+1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (7 + 1) or i % (3 + 1)][x]']",
517,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12']","['lambda x: x + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 10']",
518,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,exclude_class,1,0,2,0,0,0,"['8', '9', '10']","['lambda x: x + 4', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 4) % (4+1)']",
519,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: (2 * x) + 2', 'lambda x: (x * 3) % (3+1)']",
520,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,8,exclude_class,0,0,2,2,0,0,"['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x % 3', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]']",
521,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,8,exclude_class,0,1,2,1,1,0,"['3', '0', '1', '2']","['lambda x: (x * 2) % (1+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 3) % (1+1)', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 4) % (1+1)', 'lambda x: (x * 4) % (2+1)']",
522,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,8,exclude_class,0,0,2,0,0,0,"['9', '10', '11']","['lambda x: (4 * x) + 1', 'lambda x: (5 * x) - 1', 'lambda x: (7 * x) - 3', 'lambda x: (8 * x) - 4']",
523,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,exclude_class,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
524,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (x * 1) + 4', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) | 3']",
525,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,exclude_class,1,1,2,0,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) | 1', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1']",
526,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",
527,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,exclude_class,1,1,2,1,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (x * 4) % (3 + 1)']",
528,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,exclude_class,1,1,2,1,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (x * 1) % (4+1)']",
529,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) - 1', 'lambda x: (x * 4) + 1']",
530,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) ** 1', 'lambda x: (2 * x) % (2+1)']",
531,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,exclude_class,0,1,2,0,0,0,"['11', '13', '15', '17', '19', '21', '23', '25', '27', '29', 'etc.']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) ** 1', 'lambda x: (2 * x) * 1', 'lambda x: (3 * x) | 2']",
532,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,1,0,0,"['11', '13', '15', '17', '19', '21', '23', '25', '27', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (x * 5) - 2']",
533,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,exclude_class,1,1,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) - 4']",
534,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,exclude_class,1,1,2,1,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 3']",
535,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,exclude_class,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (5 + 1)][x]']",
536,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 4', 'lambda x: (2 * x) + 5']",
537,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['15', '17', '19', '21', '23']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 6', 'lambda x: (3 * x) | 4', 'lambda x: (4 * x) | 3']",
538,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,exclude_class,1,0,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) ** 1 + 5', 'lambda x: (1 * x) + 6', 'lambda x: (1 * x) ** 1 + 6']",
539,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['15', '17', '19', '21', '23']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 4']",
540,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,8,exclude_class,1,0,2,1,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 5', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
541,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,exclude_class,1,0,0,2,0,0,"['10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 5', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 7']",
542,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,exclude_class,1,1,0,0,1,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) + 2']",
543,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,8,exclude_class,1,1,2,0,1,0,"['22', '26', '30', '34']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (x * 4) + 2']",
544,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,exclude_class,1,1,2,0,0,0,"['26', '30', '34', '38']","['lambda x: (4 * x) + 6', 'lambda x: (4 * x) | 10', 'lambda x: (2 * x) + 8', 'lambda x: (2 * x) | 10']",
545,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,exclude_class,1,1,2,0,1,0,"['30', '34', '38', '42', '46']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) + 12', 'lambda x: (4 * x) | 2', 'lambda x: (4 * x) - 2']",
546,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,exclude_class,0,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) * 1', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) * 3', 'lambda x: (4 * x) * 4', 'lambda x: (2 * x) ** 2', 'lambda x: (3 * x) ** 2', 'lambda x: (1 * x) ** 4', 'lambda x: (5 * x) * 2']",
547,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,exclude_class,1,1,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) * 0', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) * 3']",
548,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,exclude_class,0,0,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '148', '152', '156', '160', '164', '168', '172', '176', '180', '184', '188', '192', '196', '200', '204', '208', '212', '216', '220', '224', '228', '232', '236', '240', '244', '248', '252', '256', '260', '264', '268', '272', '276', '280', '284', '288', '292', '296', '300', '304', '308', '312', '316', '320', '324', '328', '332', '336', '340', '344', '348', '352', '356', '360', '364', '368', '372', '376', '380', '384', '388', '392', '396', '400', '404', '408', '412', '416', '420', '424', '428', '432', '436', '440', '444', '448', '452', '456', '460', '464', '468', '472', '476', '480', '484', '488', '492', '496', '500', '504', '508', '512', '516', '520', '524', '528', '532', '536', '540', '544', '548', '552', '556', '560', '564', '568', '572', '576', '580', '584', '588', '592', '596', '600', '604', '608', '612', '616', '620', '624', '628', '632', '636', '640', '644', '648', '652', '656', '660', '664', '668', '672', '676', '680', '684', '688']","['lambda x: (4 * x) * 1', 'lambda x: (3 * x) + 4', 'lambda x: (2 * x) * 2', 'lambda x: (1 * x) * 4']",
549,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,exclude_class,1,0,2,1,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x)', 'lambda x: (x * 4) % (1+1)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 4) + 0']",
550,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,exclude_class,0,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 1']",
551,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: 4 * x', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) + 4']",
552,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,exclude_class,1,0,2,1,0,0,"['18', '20', '24', '28', '32', '36', '40', 'etc.']","['lambda x: 4 * x', 'lambda x: (2 * x) + 2', 'lambda x: (4 * x) - 4', 'lambda x: (2 * x) ** 2']",
553,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 4', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) * 1']",
554,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,exclude_class,0,0,2,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', 'etc.']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) * 1', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 2']",
555,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,exclude_class,1,1,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x) * 1', 'lambda x: (4 * x) + 4', 'lambda x: 4 ** (x + 1)']",
556,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,exclude_class,0,0,2,1,1,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 0', 'lambda x: (2 * x) + 6', 'lambda x: (x * 4) % (4+1)']",
557,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 12', 'lambda x: (4 * x) + 16']",
558,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) + 4']",
559,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,exclude_class,1,1,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) + 4', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4) % (4+1) + 4']",
560,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,exclude_class,0,0,2,0,1,0,"['28', '32', '36', '40', '44', '48']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) % (4+1)']",
561,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,exclude_class,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) | 8', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 3']",
562,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 4']",
563,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 12', 'lambda x: (4 * x) + 16']",
564,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 8', 'lambda x: (x * 4) + 4']",
565,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,exclude_class,1,0,2,0,2,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300', '306', '312', '318', '324', '330', '336', '342', '348', '354', '360', '366', '372', '378', '384', '390', '396', '402', '408', '414', '420', '426', '432', '438', '444', '450', '456', '462', '468', '474', '480', '486', '492', '498', '504', '510', '516', '522', '528', '534', '540', '546', '552', '558', '564', '570', '576', '582', '588', '594', '600']","['lambda x: (6 * x) | 0', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 6']",
566,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['24', '30', '36']","['lambda x: (6 * x) % (0+1)', 'lambda x: (6 * x) | 0', 'lambda x: (6 * x) + 0']",
567,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,exclude_class,1,0,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) % (0+1)', 'lambda x: (6 * x) % (1+1)', 'lambda x: (6 * x) % (2+1)', 'lambda x: (6 * x) % (3+1)', 'lambda x: (6 * x) % (4+1)', 'lambda x: (6 * x) % (5+1)', 'lambda x: (6 * x) % (6+1)', 'lambda x: (6 * x) % (7+1)', 'lambda x: (6 * x) % (8+1)', 'lambda x: (6 * x) % (9+1)', 'lambda x: (6 * x) % (10+1)', 'lambda x: (6 * x) % (11+1)', 'lambda x: (6 * x) % (12+1)', 'lambda x: (6 * x) % (13+1)', 'lambda x: (6 * x) % (14+1)', 'lambda x: (6 * x) % (15+1)', 'lambda x: (6 * x) % (16+1)', 'lambda x: (6 * x) % (17+1)', 'lambda x: (6 * x) % (18+1)', 'lambda x: (6 * x) % (19+1)', 'lambda x: (6 * x) % (20+1)', 'lambda x: (6 * x) % (21+1)', 'lambda x: (6 * x) % (22+1)', 'lambda x: (6 * x) % (23+1)', 'lambda x: (6 * x) % (24+1)', 'lambda x: (6 * x) % (25+1)', 'lambda x: (6 * x) % (26+1)', 'lambda x: (6 * x) % (27+1)', 'lambda x: (6 * x) % (28+1)', 'lambda x: (6 * x) % (29+1)', 'lambda x: (6 * x) % (30+1)', 'lambda x: (6 * x) % (31+1) \\']",
568,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,exclude_class,0,0,2,0,2,0,"['30', '36', '42', '48']","['lambda x: (x * 2) * 3', 'lambda x: (x * 3) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (3 * x) * 2']",
569,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,exclude_class,1,1,2,0,2,0,"['36', '42', '48', '54']","['lambda x: (6 * x) * 1', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 4']",
570,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (3 * x) + 6', 'lambda x: (6 * x) + 6', 'lambda x: (2 * x) * 6', 'lambda x: (3 * x) * 4']",
571,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,exclude_class,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 ** x) * 1', 'lambda x: (2 ** x) + 0', 'lambda x: (2 ** (x - 1)) * 2', 'lambda x: (2 ** (x - 1)) + 2']",
572,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,exclude_class,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6']",
573,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,exclude_class,1,0,2,0,2,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) ** 1', 'lambda x: (2 * x) | 0']",
574,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,exclude_class,1,0,2,2,1,1,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) ** 1']",
575,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,exclude_class,0,1,2,0,2,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) ** 1']",
576,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (5 * x) // 2', 'lambda x: (10 * x) // 5']",
577,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,exclude_class,1,0,2,1,1,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 3', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) ** 4']",
578,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,exclude_class,0,1,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) % (2+1)']",
579,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,1,0,0,"['12', '14', '16', '18', '20']","['lambda x: 2 * x + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x + 2) * 2', 'lambda x: (x + 4) * 1']",
580,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (5 * x) | 4']",
581,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) | 2', 'lambda x: (2 * x) ^ 2', 'lambda x: (2 * x) % 2']",
582,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,exclude_class,1,1,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (3 * x) + 2', 'lambda x: (4 * x) + 0', 'lambda x: (6 * x) - 2']",
583,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,exclude_class,1,0,2,0,1,0,"['14', '16', '18', '20']","['lambda x: (2 * x) | 4', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 2']",
584,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,exclude_class,0,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) + 6']",
585,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 8', 'lambda x: (2 * x) + 10', 'lambda x: (2 * x) + 12']",
586,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (x * 2) + 6', 'lambda x: (x * 2) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 2) + 0']",
587,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 2) + 6']",
588,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,exclude_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: (x * 4) % (0+1)', 'lambda x: (x * 2) + 0', 'lambda x: (x * 3) % (2+1)']",
589,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,0,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (1 * x) * 2', 'lambda x: (2 * x) + 0', 'lambda x: (x * 5) % (2+1)']",
590,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['8', '10', '12']","['lambda x: (2 * x) | 0', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) % (1+1)']",
591,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,exclude_class,1,0,2,1,0,1,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: 2 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]']",
592,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['128', '256', '512']","['lambda x: (1 * x) ** 2', 'lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** 2', 'lambda x: (8 * x) ** 2']",
593,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['128', '256', '512']","['lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) ** 3']",
594,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,8,exclude_class,1,0,2,0,0,0,"['2048', '4096', '8192', '16384']","['lambda x: 2 ** (4 * x)', 'lambda x: 4 ** (2 * x)', 'lambda x: 16 ** (x)', 'lambda x: (2 ** x) * 16']",
595,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,exclude_class,1,0,0,0,1,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 3', 'lambda x: (x * 5) % (1+1)']",
596,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,exclude_class,0,0,1,0,1,0,"['19', '23', '27', '31']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) | 1', 'lambda x: (4 * x) ^ 2', 'lambda x: (4 * x) ** 1']",
597,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,0,1,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) + 1', 'lambda x: (x * 4) % (3+1)']",
598,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,exclude_class,1,1,2,0,1,0,"['17', '21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 13']",
599,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,exclude_class,1,1,2,0,1,0,"['21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97']","['lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
600,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['25', '29', '33', '37']","['lambda x: (4 * x) | 5', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) ^ 5']",
601,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,exclude_class,0,0,2,0,0,0,"['27', '29', '31']","['lambda x: (4 * x) + 9', 'lambda x: (x * 4) + 5', 'lambda x: (x * 4) + 1']",
602,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,exclude_class,1,1,0,0,0,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 13', 'lambda x: (4 * x) + 17', 'lambda x: (4 * x) + 21']",
603,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,8,exclude_class,1,0,2,0,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (x * 4) % (1+1)', 'lambda x: (x * 2) % (2+1)']",
604,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,8,exclude_class,0,0,2,1,0,0,"['0', '1']","['lambda x: (x * 2) % (2+1)', 'lambda x: (x % 2) * 1', 'lambda x: (x % 2) ** 1', 'lambda x: (x % 2) + 0']",
605,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,exclude_class,1,1,2,0,2,0,"['23', '27', '31', '35', '39']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) + 1']",
606,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,exclude_class,1,1,2,1,1,0,"['23', '27', '31']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 3']",
607,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,exclude_class,1,0,2,0,1,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) ^ 3', 'lambda x: (4 * x) % (7 + 1)']",
608,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,exclude_class,1,1,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (1 * x) + 15', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 11']",
609,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,exclude_class,1,0,2,0,0,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) * 4 - 1', 'lambda x: (4 * x) * 5 - 2']",
610,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,random,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 5) % (4+1)', 'lambda x: (x * 6) % (4+1)', 'lambda x: (x * 7) % (4+1)', 'lambda x: (x * 8) % (4+1)', 'lambda x: (x * 9) % (4+1)', 'lambda x: (x * 10) % (4+1)', 'lambda x: (x * 11) % (4+1)', 'lambda x: (x * 12) % (4+1)', 'lambda x: (x * 13) % (4+1)', 'lambda x: (x * 14) % (4+1)', 'lambda x: (x * 15) % (4+1)', 'lambda x: (x * 16) % (4+1)', 'lambda x: (x * 17) % (4+1)', 'lambda x: (x * 18) % (4+1)', 'lambda x: (x * 19) % (4+1)', 'lambda x: (x * 20) % (4+1)']",
611,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,random,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 0', 'lambda x: (2 * x) * 0', 'lambda x: (4 * x) ** 0', 'lambda x: (x * 1) % (2+1)']",
612,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,random,0,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 1', 'lambda x: (2 * x) ** 0', 'lambda x: (2 * x) + (-1)']",
613,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,random,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 4) / 4']",
614,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,random,0,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x + 1', 'lambda x: (x * 4) % (1+1)', 'lambda x: (x * 5) % (3+1)', 'lambda x: (2 * x) + 4', 'lambda x: (3 * x) | 4', 'lambda x: (x * 4) % (0+1)']",
615,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 1', 'lambda x: (5 * x) + 1', 'lambda x: (6 * x) + 1', 'lambda x: (7 * x) + 1', 'lambda x: (8 * x) + 1', 'lambda x: (9 * x) + 1', 'lambda x: (10 * x) + 1']",
616,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,10,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (1 * x) | 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
617,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,random,1,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) ** 1', 'lambda x: (2 * x) ** 0', 'lambda x: (3 * x) | 0', 'lambda x: (4 * x) + 4', 'lambda x: (5 * x) ** 0', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]']",
618,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,random,0,0,2,1,1,0,"['5', '6', '7', '8', '9', '10']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3']",
619,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (4 * x) * 0', 'lambda x: (4 * x) ** 1']",
620,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,random,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 1', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'lambda x: (1 * x) | 1']",
621,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,random,1,1,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 1) % (4+1)']",
622,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,random,1,0,2,0,0,1,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: (x * 1) % (3+1)']",
623,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,random,1,0,2,3,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (1 * x) + 0', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 5) % (2+1)', 'lambda x: (1 * x) ** 3', 'lambda x: (1 * x) * 0', 'lambda x: (5 * x) | 3', 'lambda x: (2 * x) ** 3', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (3 * x) + 3']",
624,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,random,1,1,1,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: (x * 1) % (1+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 3) % (3+1)']",
625,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,random,0,1,2,2,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) % (4+1)', 'lambda x: (2 * x) % (2+1)', 'lambda x: (3 * x) % (3+1)', 'lambda x: (4 * x) % (4+1)']",
626,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,10,random,0,0,1,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x', 'lambda x: (x * 1) % (2+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 3) % (2+1)']",
627,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,random,0,1,1,2,0,0,"['6', '8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) * 1', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) * 1', 'lambda x: (5 * x) + 0', 'lambda x: (5 * x) + 1', 'lambda x: (5 * x) + 2', 'lambda x: (5 * x) + 3', 'lambda x: (5 * x) + 4', 'lambda x: (5 * x) * 1']",
628,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,random,1,0,0,1,0,0,"['7', '9', '11', '13', '15']","['lambda x: (1 * x) | 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) - 1']",
629,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,random,0,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 0', 'lambda x: (4 * x) - 2']",
630,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,random,1,1,1,1,0,0,"['7', '9', '11', '13', '15']","['lambda x: (1 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1) or i % (4 + 1) or i % (5 + 1)][x]', 'lambda x: (2 * x) - 1']",
631,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,random,1,0,0,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: (1 * x) | 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) | -1', 'lambda x: (3 * x) + 1']",
632,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,random,0,1,2,1,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3', 'lambda x: (5 * x) - 4']",
633,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,random,1,1,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: (2 * x) + 0']",
634,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,random,1,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) | 2', 'lambda x: (1 * x) | 3', 'lambda x: (1 * x) | 4', 'lambda x: (1 * x) | 5', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1) or i % (3 + 1) or i % (4 + 1)][x]']",
635,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,random,1,0,2,0,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (x * 1) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 2']",
636,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,random,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 3', 'lambda x: (4 * x) - 6']",
637,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,random,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 5']",
638,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,random,1,1,2,0,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 5', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 0']",
639,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,random,1,1,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) + 1']",
640,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,random,1,1,2,2,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'lambda x: 3 + x', 'lambda x: (2 * x) + 1', 'lambda x: (x * 1) + 3']",
641,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,random,0,1,2,0,0,0,"['7', '9', '11', '13']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1']",
642,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,random,0,0,2,1,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3']",
643,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,random,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 4) % (1+1)']",
644,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,random,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) % (3+1)', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]']",
645,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,random,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 + (x - 1)', 'lambda x: (x * 1) + 3 + (x - 1) * 2', 'lambda x: (x * 1) + 3 + (x - 1) * 3', 'lambda x: (x * 1) + 3 + (x - 1) * 4']",
646,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,random,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39']","['lambda x: (3 * x) + 0', 'lambda x: (1 * x) ** 2', 'lambda x: (1 * x) * 3']",
647,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,random,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: (3 * x) + 0', 'lambda x: (1 * x) * 3', 'lambda x: (2 * x) * 1', 'lambda x: (4 * x) * 0', 'lambda x: (5 * x) ** 0']",
648,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,random,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 3) | 0']",
649,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,random,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x * 3) % (0+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]']",
650,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,random,1,0,2,0,1,0,"['12', '15', '18']","['lambda x: (3 * x) * 1', 'lambda x: (1 * x) * 3', 'lambda x: (1 * x) | 0']",
651,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,random,1,0,2,0,1,0,"['15', '18', '21', '24']","['lambda x: (1 * x) * 3', 'lambda x: (2 * x) * 3', 'lambda x: (3 * x) * 3', 'lambda x: (4 * x) * 3']",
652,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,random,1,0,2,1,0,0,"['15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) * 1', 'lambda x: (2 * x) + 3']",
653,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,random,1,0,2,0,0,0,"['17', '18', '19', '20']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (3 * x) + 12']",
654,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,random,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x * 1) * 3', 'lambda x: (1 * x) * 3']",
655,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,random,1,0,2,0,0,0,"['17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) | 1']",
656,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,random,0,0,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (3 * x) + 12']",
657,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,random,1,0,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3']",
658,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,10,random,1,0,2,1,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x * 3) + 6', 'lambda x: (3 * x) + 6']",
659,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 6', 'lambda x: (x * 4) - 3', 'lambda x: (x * 5) - 6']",
660,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,random,1,0,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) ** 2', 'lambda x: (3 * x) ** 3', 'lambda x: (3 * x) ** 4', 'lambda x: (3 * x) ** 5', 'lambda x: (3 * x) ** 6', 'lambda x: (3 * x) ** 7', 'lambda x: (3 * x) ** 8', 'lambda x: (3 * x) ** 9', 'lambda x: (3 * x) ** 10']",
661,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) ** 2', 'lambda x: (1 * x) ** 3 + 6']",
662,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,random,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (1 * x) + 9', 'lambda x: (3 * x) ** 1']",
663,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) ** 2 - 3']",
664,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,random,0,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 4', 'lambda x: (x * 1) * 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) + 0']",
665,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) | 4', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) | 2', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) | 1', 'lambda x: (3 * x) + 1']",
666,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,random,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) ** 2', 'lambda x: (1 * x) ** 3', 'lambda x: (1 * x) ** 4']",
667,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,10,random,0,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) - 1']",
668,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,10,random,1,0,2,1,1,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
669,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) ** 1', 'lambda x: (1 * x) * 1', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) % (4+1)', 'lambda x: (4 * x) % (4+1)', 'lambda x: (5 * x) % (4+1)']",
670,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1']",
671,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (0 + 1)][x]']",
672,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,10,random,0,0,2,2,0,0,"['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']","['lambda x: x % 3', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 4) % (1+1)']",
673,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,10,random,0,0,0,2,0,0,"['0', '4', '8']","['lambda x: x % 3', 'lambda x: (x * 3) % (1+1)', 'lambda x: (x * 5) % (1+1)', 'lambda x: (x * 7) % (1+1)']",
674,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,10,random,0,1,2,0,1,0,"['9', '10', '11', '12']","['lambda x: (x * 1) + 4', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 2) - 4', 'lambda x: (x * 2) + 2']",
675,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,random,1,1,2,1,0,0,"['9', '10', '11', '12']","['lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1']",
676,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,random,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) | 3', 'lambda x: (3 * x) | 1', 'lambda x: (4 * x) | 0']",
677,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,random,1,1,2,0,1,0,"['9', '11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: (4 * x) - 3']",
678,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,random,0,0,2,2,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 4) % (8+1)']",
679,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,random,1,0,2,0,0,0,"['9', '11', '13', '15']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 0']",
680,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,random,0,1,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 5) % (4+1)']",
681,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,random,1,0,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 3', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) ** 1']",
682,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,random,1,0,2,1,0,0,"['11', '13', '15', '17', '19', '21', '23', '25', '27', '29']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 3']",
683,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,random,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) + 3']",
684,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,random,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) | 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 1']",
685,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,random,1,0,2,1,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (x * 1) + 3']",
686,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,random,1,1,2,0,1,0,"['13', '15', '17', '19']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1']",
687,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,random,1,0,2,1,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) | 1', 'lambda x: (1 * x) * 2', 'lambda x: (4 * x) | -1']",
688,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,random,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (x * 4) - 1', 'lambda x: (x * 2) + 1']",
689,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,random,1,0,2,0,0,0,"['15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) * 3', 'lambda x: (2 * x) ** 2']",
690,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,random,1,0,2,0,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) - 1', 'lambda x: (x * 1) % (7+1)']",
691,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,random,1,1,2,0,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 0', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",
692,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,10,random,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 5', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 1']",
693,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,random,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) ** 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]']",
694,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,random,1,1,0,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 6']",
695,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,10,random,1,1,2,0,1,0,"['22', '26', '30', '34']","['lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 6', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) | 6']",
696,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,random,1,1,2,0,2,0,"['26', '30', '34', '38']","['lambda x: (2 * x) + 8', 'lambda x: (4 * x) | 2', 'lambda x: (4 * x) + 2']",
697,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,random,1,0,2,0,0,0,"['30', '34', '38', '42', '46', '50']","['lambda x: (2 * x) + 12', 'lambda x: (4 * x) + 6', 'lambda x: (1 * x) + 13']",
698,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,random,1,0,2,2,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '148', '152', '156', '160', '164', '168', '172', '176', '180', '184', '188', '192', '196', '200', '204', '208', '212', '216', '220', '224', '228', '232', '236', '240', '244', '248', '252', '256', '260', '264', '268', '272', '276', '280', '284', '288', '292', '296', '300', '304', '308', '312', '316', '320', '324', '328', '332', '336', '340', '344', '348', '352', '356', '360', '364', '368', '372', '376', '380', '384', '388', '392', '396', '400', '404', '408', '412', '416', '420', '424', '428', '432', '436', '440', '444', '448', '452', '456', '460', '464', '468', '472', '476', '480', '484', '488', '492', '496', '500', '504', '508', '512', '516', '520', '524', '528', '532', '536', '540', '544', '548', '552', '556', '560', '564', '568', '572', '576', '580', '584', '588', '592', '596', '600', '604', '608', '612', '616', '620', '624', '628', '632', '636', '640', '644', '648', '652', '656', '660', '664', '668', '672', '676', '680', '684', '688']","['lambda x: (4 * x) + 0', 'lambda x: (3 * x) + 0', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 0']",
699,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,random,1,0,2,1,0,1,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (x * 4) % (0+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 4) % (8+1)', 'lambda x: (x * 4) % (12+1)', 'lambda x: (x * 4) % (16+1)', 'lambda x: (x * 4) % (20+1)', 'lambda x: (x * 4) % (24+1)', 'lambda x: (x * 4) % (28+1)', 'lambda x: (x * 4) % (32+1)', 'lambda x: (x * 4) % (36+1)', 'lambda x: (x * 4) % (40+1)', 'lambda x: (x * 4) % (44+1)', 'lambda x: (x * 4) % (48+1)', 'lambda x: (x * 4) % (52+1)', 'lambda x: (x * 4) % (56+1)', 'lambda x: (x * 4) % (60+1)', 'lambda x: (x * 4) % (64+1)', 'lambda x: (x * 4) % (68+1)', 'lambda x: (x * 4) % (72+1)', 'lambda x: (x * 4) % (76+1)', 'lambda x: (x * 4) % (80+1)', 'lambda x: (x * 4) % (84+1)', 'lambda x: (x * 4) % (88+1)', 'lambda x: (x * 4) % (92+1)', 'lambda x: (x * 4) % (96+1)']",
700,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', 'etc.']","['lambda x: (x * 4) % (4+1)', 'lambda x: 4 * x']",
701,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,random,1,0,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '148', '152', '156', '160', '164', '168', '172', '176', '180', '184', '188', '192', '196', '200', '204', '208', '212', '216', '220', '224', '228', '232', '236', '240', '244', '248', '252', '256', '260', '264', '268', '272', '276', '280', '284', '288', '292', '296', '300', '304', '308', '312', '316', '320', '324', '328', '332', '336', '340', '344', '348', '352', '356', '360', '364', '368', '372', '376', '380', '384', '388', '392', '396', '400', '404', '408', '412', '416', '420', '424', '428', '432', '436', '440', '444', '448', '452', '456', '460', '464', '468', '472', '476', '480', '484', '488', '492', '496', '500', '504', '508', '512', '516', '520', '524', '528', '532', '536', '540', '544', '548', '552', '556', '560', '564', '568', '572', '576', '580', '584', '588', '592', '596', '600', '604', '608', '612', '616', '620', '624', '628', '632', '636', '640', '644', '648', '652', '656', '660', '664', '668', '672', '676', '680', '684', '688']","['lambda x: (4 * x) + 0', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 4) % (4+1)']",
702,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,random,1,0,2,0,2,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) * 0', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) ** 1', 'lambda x: (2 * x) * 2']",
703,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,random,1,0,2,0,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) | 0', 'lambda x: (2 * x) ** 2', 'lambda x: (1 * x) ** 4']",
704,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,random,0,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (2 * x) * 4', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 2', 'lambda x: (5 * x) * 1']",
705,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) | 4']",
706,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,random,1,1,2,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) * 1', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) * 2']",
707,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,random,0,0,2,1,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (2 * x) * 4', 'lambda x: (1 * x) * 4', 'lambda x: 2 ** (4 * x)']",
708,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,random,1,0,2,1,0,0,"['24', '28', '32', '36']","['lambda x: 4 * x + 4', 'lambda x: 2 * (2 * x + 1)']",
709,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,random,1,0,2,0,1,0,"['24', '28', '32']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 1']",
710,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,random,1,0,2,0,1,0,"['24', '28', '32', '36', '40']","['lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 1', 'lambda x: (5 * x) ** 1']",
711,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['24', '28', '32']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) + 6', 'lambda x: (4 * x) - 4']",
712,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,random,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) * 1', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) * 3', 'lambda x: (4 * x) * 4']",
713,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4) + 12', 'lambda x: (x * 4) + 16']",
714,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 4']",
715,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 12', 'lambda x: (x * 5) - 4']",
716,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['28', '32', '36', '40', '44', '48']","['lambda x: (2 * x) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) | 12']",
717,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,random,1,0,2,0,1,0,"['24', '30', '36']","['lambda x: (3 * x) * 2', 'lambda x: (x * 6) % (2+1)', 'lambda x: (2 * x) ** 3']",
718,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,random,1,0,2,0,1,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96']","['lambda x: (6 * x) + 0', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) ** 2', 'lambda x: (1 * x) ** 3']",
719,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,random,1,0,2,0,2,0,"['30', '36', '42', '48', '54', '60']","['lambda x: (6 * x) | 0', 'lambda x: (6 * x) + 0', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 6']",
720,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,random,1,0,2,0,2,0,"['30', '36', '42', '48']","['lambda x: (1 * x) * 6', 'lambda x: (2 * x) * 3', 'lambda x: (3 * x) * 2', 'lambda x: (4 * x) * 1']",
721,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,random,1,1,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (6 * x) + 6', 'lambda x: (3 * x) + (2 * x) + 6', 'lambda x: (4 * x) + (3 * x) + 6']",
722,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,random,1,0,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (6 * x) | 0', 'lambda x: (6 * x) + 6', 'lambda x: (6 * x) | 12']",
723,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,random,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) | 2', 'lambda x: (1 * x) | 2']",
724,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,random,1,1,2,1,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) ** 2']",
725,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,random,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) ** 1', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) * 4']",
726,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,random,1,0,2,0,0,0,"['10', '12', '14', '16', '18', '20']","['lambda x: 2 * x', 'lambda x: (x * 2) + 0', 'lambda x: (x * 2) % (2+1)']",
727,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,random,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 3) + 2']",
728,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,random,1,0,2,1,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 4) % (5+1)']",
729,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,random,0,1,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) ** 1']",
730,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,random,0,1,2,0,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) + 4']",
731,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,random,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) | 2', 'lambda x: (2 * x) * 2', 'lambda x: (3 * x) | 0']",
732,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,random,1,1,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (4 * x) / 2', 'lambda x: (4 * x) - 2']",
733,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,random,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 1) % (5+1)', 'lambda x: (x * 2) % (3+1)']",
734,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,random,1,1,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 6', 'lambda x: (1 * x) + 6', 'lambda x: (x * 2) + 4', 'lambda x: (x * 1) + 6']",
735,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,random,1,1,2,0,0,0,"['14', '16', '18']","['lambda x: (2 * x) + 6', 'lambda x: (x * 2) + 6', 'lambda x: (x + 6) * 2', 'lambda x: 6 + (2 * x)']",
736,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,random,1,0,2,1,0,1,"['14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50']","['lambda x: (2 * x) * 1', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) * 1', 'lambda x: (5 * x) * 1']",
737,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,random,1,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) | 2', 'lambda x: (4 * x) / 2', 'lambda x: (4 * x) - 2']",
738,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,random,1,1,2,0,1,0,"['14', '16', '18']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) | 6', 'lambda x: (2 * x) + 2']",
739,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,random,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 6', 'lambda x: (2 * x) * 3', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) ** 3', 'lambda x: (2 * x) * 4', 'lambda x: (2 * x) * 5', 'lambda x: (2 * x) * 6', 'lambda x: (2 * x) * 7', 'lambda x: (2 * x) * 8', 'lambda x: (2 * x) * 9', 'lambda x: (2 * x) * 10']",
740,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,random,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) | 0', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",
741,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,random,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) + 0', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: x * 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]']",
742,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,random,1,0,2,0,0,0,"['8', '10', '12']","['lambda x: (2 * x) + 0', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: (1 * x) << 1']",
743,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,random,1,0,2,0,0,0,"['8', '10', '12']","['lambda x: 2 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 4) % (2+1)', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) + 2', 'lambda x: 2 ** (2 * x)', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]']",
744,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,10,random,1,1,2,0,2,0,"['128', '256', '512']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (1 * x)', 'lambda x: (2 * x) ** 3', 'lambda x: (4 * x) ** 2']",
745,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,10,random,1,0,2,0,1,0,"['128', '256', '512', '1024']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (x - 1)', 'lambda x: (2 * x) ** 2', 'lambda x: (4 * x) * 1']",
746,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,10,random,1,0,2,0,0,0,"['2048', '4096', '8192', '16384']","['lambda x: (4 * x) ** 2', 'lambda x: (2 * x) ** 4', 'lambda x: (x * 4) ** 4', 'lambda x: (x * 16) ** 1']",
747,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,10,random,0,0,0,1,0,0,"['17', '21', '25']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 4']",
748,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,random,0,0,1,0,0,0,"['17', '19', '21', '23']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) - 1']",
749,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,random,0,0,1,0,1,0,"['17', '19', '21', '23', '25', '27', '29']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (x * 4) % (3+1)']",
750,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + (-2)']",
751,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,random,1,0,2,0,1,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 1']",
752,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,random,0,1,2,1,1,0,"['21', '25', '29', '33']","['lambda x: (4 * x) + 1', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) | 1', 'lambda x: (x * 4) % (4+1)']",
753,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['25', '29', '33', '37']","['lambda x: (4 * x) + 5', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) + 7']",
754,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['27', '29', '31', '33', '35']","['lambda x: (2 * x) + 11', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 5']",
755,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,random,1,0,2,0,0,0,"['27', '29', '31', '33', '35']","['lambda x: (2 * x) + 11', 'lambda x: (4 * x) + 5', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) + 9']",
756,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,10,random,1,0,2,0,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: [0,1][x]', 'lambda x: (x // 2) % 2']",
757,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,10,random,1,0,2,1,1,0,"['0', '1']","['lambda x: (x * 1) % (1+1)', 'lambda x: (x * 1) % (2+1)', 'lambda x: (x * 2) % (1+1)', 'lambda x: (x * 2) % (2+1)']",
758,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,random,1,0,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 2']",
759,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,random,1,1,2,0,0,0,"['23', '27', '31', '35']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 1']",
760,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,random,1,0,2,0,1,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) % (4+1)']",
761,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,random,1,0,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) - 6', 'lambda x: (4 * x) - 12']",
762,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,random,0,0,2,0,1,0,"['31', '35', '39']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) * 1']",
763,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) / 2', 'lambda x: (4 * x) * 0.5', 'lambda x: (5 * x) ** 0.5', 'lambda x: (6 * x) // 2', 'lambda x: (7 * x) % 3']",
764,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,same_class,1,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
765,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (1 * x) + 1']",
766,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,same_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) + 0', 'lambda x: (x * 3) + (-1)']",
767,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 0', 'lambda x: (x * 4) % (1+1)']",
768,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,same_class,0,0,0,0,0,0,"['8', '16', '32', '64']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) ** 1', 'lambda x: (4 * x) ** 0']",
769,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,8,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3']",
770,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,same_class,0,0,2,3,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) * 4', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) * 3', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) * 4', 'lambda x: (5 * x) + 1', 'lambda x: (5 * x) * 2', 'lambda x: (5 * x) * 3', 'lambda x: (6 * x) + 1', 'lambda x: (6 * x) * 2', 'lambda x: (6 * x) * 3', 'lambda x: (7 * x) + 1', 'lambda x: (7 * x) * 2', 'lambda x: (7 * x) * 3', 'lambda x: (8 * x) + 1', 'lambda x: (8 * x) * 2', 'lambda x: (8 * x) * 3', 'lambda x: (9 * x) + 1', 'lambda x: (9 * x) * 2', 'lambda x: (9 * x) * 3']",
771,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 1']",
772,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,same_class,1,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 4) % (1+1)', 'lambda x: (5 * x) + 2', 'lambda x: 4 ** (3 * x)']",
773,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,same_class,1,1,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 3']",
774,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,same_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) * 1', 'lambda x: (x * 1) ** 1', 'lambda x: (x * 1) % (4+1)']",
775,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,same_class,1,1,2,0,2,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) ** 1', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) % (4+1)', 'lambda x: (2 * x) | 0']",
776,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,same_class,0,1,1,3,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: (x * 1) % (3+1)', 'lambda x: (x * 1) + 0', 'lambda x: (x * 1) - (-3)', 'lambda x: (x * 1) * 0', 'lambda x: (x * 1) / 1', 'lambda x: (x * 1) // 1', 'lambda x: (x * 1) ** 0', 'lambda x: (x * 1) ^ 0', 'lambda x: (x * 1) & 3', 'lambda x: (x * 1) | 0', 'lambda x: (x * 1) << 0', 'lambda x: (x * 1) >> 0']",
777,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,same_class,0,0,1,1,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) ** 0']",
778,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,same_class,0,1,1,0,0,0,"['4', '8', '16', '32', '64', '128', '256', '512', '1024', '2048', '4096', '8192', '16384', '32768', '65536', '131072', '262144', '524288', '1048576', '2097152', '4194304', '8388608', '16777216', '33554432', '67108864', '134217728', '268435456', '536870912', '1073741824', '2147483648', '4294967296', '8589934592', '17179869184', '34359738368', '68719476736', '137438953472', '274877906944', '549755813888', '1099511627776', '2199023255552', '4398046511104', '8796093022208', '17592186044416', '35184372088832', '70368744177664', '140737488355328', '281474976710656', '562949953421312', '1125899906842624', '2251799813685248', '4503599627370496', '9007199254740992', '18014398509481984', '36028797018963968', '72057594037927936', '144115188075855872', '288230376151711744', '576460752303423488', '1152921504606846976', '2305843009213693952', '4611686018427387904', '9223372036854775808']","['lambda x: x', 'lambda x: (x * 5) % (3+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 1) % (1+1)']",
779,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,8,same_class,1,1,1,0,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) * 1']",
780,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,same_class,1,1,0,0,0,0,"['7', '9', '11']","['lambda x: (x + 1) * 1', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'lambda x: (x + 2) * 1']",
781,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,same_class,1,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4']",
782,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,same_class,1,1,2,3,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (3 * x) - 1']",
783,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,same_class,0,0,2,3,0,1,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 2']",
784,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,same_class,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (x * 1) + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4']",
785,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,same_class,1,1,2,3,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: (x * 1) % (5+1)', 'lambda x: (x * 2) % (3+1)', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'lambda x: 2 ** (x - 1)']",
786,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,same_class,0,0,2,2,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 0', 'lambda x: (3 * x) - 3', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 5', 'lambda x: (4 * x) - 4']",
787,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,same_class,1,0,2,3,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 1']",
788,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,same_class,1,1,2,2,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x + 2', 'lambda x: (2 * x) + 0', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",
789,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['7', '8', '9']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) * 3']",
790,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,same_class,1,0,2,3,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) ** 3', 'lambda x: (x * 1) | 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) ** 2', 'lambda x: (x * 2) | 2', 'lambda x: (x * 3) + 0', 'lambda x: (x * 3) ** 1', 'lambda x: (x * 3) | 1']",
791,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,same_class,1,0,2,2,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) % (6+1)', 'lambda x: (x * 2) % (6+1)', 'lambda x: (x * 3) % (6+1)', 'lambda x: (x * 4) % (6+1)']",
792,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,same_class,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 3']",
793,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,same_class,1,0,2,1,0,0,"['7', '8', '9', '10']","['lambda x: 3 + x', 'lambda x: (x * 1) % (3+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 1) + 3']",
794,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,same_class,0,0,2,3,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) * 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",
795,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,same_class,0,0,2,2,0,0,"['7', '9', '11', '13', '15']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 + (x * 1)', 'lambda x: (x * 1) + 3 + (x * 2)', 'lambda x: (x * 1) + 3 + (x * 3)']",
796,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x + 3) * 1', 'lambda x: (x * 1) + 3', 'lambda x: (1 * x) + 3', 'lambda x: (3 * 1) + x']",
797,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,same_class,1,0,2,1,0,1,"['7', '8', '9', '10']","['lambda x: (1 * x) + 2', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) % (3 + 1)']",
798,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (3 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (x * 3) % (3+1)']",
799,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,same_class,1,1,2,1,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) | 0', 'lambda x: (3 * x) % (4+1)', 'lambda x: (3 * x) ** 1']",
800,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,same_class,1,1,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) * 1', 'lambda x: (3 * x) ** 2']",
801,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,same_class,0,0,2,2,0,1,"['12', '15', '18', '21', '24', '27', '30', 'etc.']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) | 0', 'lambda x: (1 * x) ** 2', 'lambda x: (2 * x) ** 1']",
802,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,same_class,0,1,2,1,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) * 0', 'lambda x: (3 * x) * 1']",
803,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,same_class,1,1,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) + 0']",
804,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['15', '18', '21', '24']","['lambda x: 3 * x', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 0']",
805,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,same_class,1,1,2,0,1,0,"['15', '18', '21', '24']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) ** 2']",
806,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,same_class,1,0,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) & 0', 'lambda x: (3 * x) ^ 0', 'lambda x: (3 * x) % 0']",
807,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) + 3', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 3', 'lambda x: (5 * x) - 3', 'lambda x: (5 * x) + 3']",
808,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,same_class,1,0,2,0,1,0,"['18', '21', '24']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) + 3', 'lambda x: (x * 3) % (4+1)']",
809,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,same_class,1,0,2,1,1,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) ** 2', 'lambda x: (3 * x) * 5']",
810,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: 3 * x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) ^ 3']",
811,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,8,same_class,0,0,2,1,1,1,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 3) % (5+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 4) % (5+1)', 'lambda x: (4 * x) + 3', 'lambda x: (5 * x) | 4']",
812,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,same_class,1,1,2,1,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 1', 'lambda x: (3 * x) * 2']",
813,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,same_class,1,1,2,2,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) ** 1']",
814,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'lambda x: (3 * x) ** 2']",
815,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,same_class,1,1,2,1,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) * 2']",
816,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,same_class,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (x * 3) % (2+1)', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 3) % (5+1)', 'lambda x: (x * 3) % (6+1)', 'lambda x: (x * 3) % (7+1)', 'lambda x: (x * 3) % (8+1)', 'lambda x: (x * 3) % (9+1)', 'lambda x: (x * 3) % (10+1)']",
817,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,same_class,0,0,0,0,1,0,"['9', '11', '13', '15']","['lambda x: (1 * x) + 3', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1']",
818,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,same_class,1,0,2,2,0,0,"['8', '9', '10', '11', '12']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) + 0']",
819,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,same_class,0,0,2,2,0,0,"['8', '9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 2']",
820,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,8,same_class,1,0,0,0,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 4', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 3) % (4+1)']",
821,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,8,same_class,1,1,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) * 5', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 3']",
822,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,same_class,1,0,2,2,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 4', 'lambda x: (x * 1) | 4', 'lambda x: (x * 1) % (3+1) + 4', 'lambda x: (x * 1) % (3+1) | 4', 'lambda x: (x * 4) % (3+1) + 1', 'lambda x: (x * 4) % (3+1) | 1']",
823,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,same_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 2']",
824,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,same_class,0,0,2,3,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 4', 'lambda x: (x * 1) % (1+3)', 'lambda x: (x * 1) * 4', 'lambda x: (x * 1) | 3']",
825,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,8,same_class,0,0,2,3,2,1,"['2', '0', '1']","['lambda x: x % 3', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 4) % (2+1)']",
826,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,8,same_class,0,1,0,2,0,0,"['4', '0']","['lambda x: x % 3', 'lambda x: (x // 2) % 2', 'lambda x: (x * 1) % (3+1)']",
827,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 1']",
828,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,same_class,0,0,2,1,0,0,"['9', '10', '11', '12']","['lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",
829,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,same_class,1,0,2,2,0,0,"['9', '10', '11', '12']","['lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 8', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 4', 'lambda x: (3 * x) + 5', 'lambda x: (3 * x) + 6', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 6', 'lambda x: (4 * x) + 7', 'lambda x: (5 * x) + 0', 'lambda x: (5 * x) + 1', 'lambda x: (5 * x) + 2', 'lambda x: (5 * x) + 3', 'lambda x: (5 * x) + 4', 'lambda x: (5 * x) + 5']",
830,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,same_class,1,1,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]']",
831,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (1 * x) | 1']",
832,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['9', '11', '13', '15']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) * 2 + 1']",
833,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,same_class,1,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (x * 8) - (x - 1)']",
834,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,same_class,1,0,2,1,1,0,"['11', '13', '15', '17', '19', '21', '23', '25', '27', '29']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 3', 'lambda x: (2 * x) % (4+1)']",
835,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,same_class,1,1,2,1,2,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) ^ 1', 'lambda x: (2 * x) - (-2)']",
836,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,same_class,1,0,2,1,1,1,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) ** 2 - 1', 'lambda x: (2 * x) ** 2 - 3', 'lambda x: (2 * x) ** 2 - 5']",
837,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,same_class,1,0,2,0,1,0,"['11', '13', '15', '17', '19', '21', '23', '25', '27', '29']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: (1 * x) | 3']",
838,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,same_class,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (x * 4) - 1', 'lambda x: (x * 2) + 1']",
839,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,same_class,1,1,2,0,1,0,"['13', '15', '17']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 7']",
840,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,same_class,1,1,2,0,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) - (-2)', 'lambda x: (1 * x) + 4']",
841,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) - (-2)']",
842,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 8']",
843,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,same_class,1,1,2,0,0,0,"['15', '17', '19', '21', '23']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) - 2', 'lambda x: (2 * x) + 6']",
844,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,same_class,1,0,2,0,0,0,"['15', '17', '19', '21', '23']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) ** 1 + 5', 'lambda x: (2 * x) ** 2 + 5', 'lambda x: (2 * x) ** 3 + 5']",
845,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,8,same_class,0,1,0,0,0,0,"['11', '14', '17', '20']","['lambda x: (1 * x) + 5', 'lambda x: (1 * x) * 5', 'lambda x: (1 * x) ** 5', 'lambda x: (1 * x) / 5', 'lambda x: (1 * x) % 5']",
846,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,same_class,1,1,2,0,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: (x + 5)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) + 3']",
847,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,same_class,0,0,0,1,1,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (x * 4) + 2', 'lambda x: (x * 2) + 4']",
848,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,8,same_class,1,1,2,0,1,0,"['22', '26', '30']","['lambda x: (4 * x) | 2', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) | 4', 'lambda x: (4 * x) - 2']",
849,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,same_class,1,0,0,1,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) + 6', 'lambda x: (x * 4) + 2', 'lambda x: (x + 4) * 2']",
850,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,same_class,1,0,2,0,0,0,"['30', '34', '38', '42']","['lambda x: (4 * x) + 10', 'lambda x: (2 * x) + 12', 'lambda x: (x) + 14']",
851,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,same_class,1,0,2,2,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: 4 * x', 'lambda x: (2 * x) ** 2', 'lambda x: (3 * x) | 0', 'lambda x: (4 * x) | 0', 'lambda x: (x + 0) * 4', 'lambda x: (x + 4) * 2', 'lambda x: (x + 8) | 0', 'lambda x: (x + 12) | 0']",
852,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,same_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (x * 4) % (0+1)', 'lambda x: 2 ** (2 * x)']",
853,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,same_class,1,1,2,2,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) + 0', 'lambda x: (1 * x) + 4']",
854,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,same_class,1,0,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) & 4']",
855,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,same_class,0,0,2,1,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: 4 * x', 'lambda x: (x * 4) % (0+1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]']",
856,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,same_class,1,1,2,1,1,0,"['20', '24', '28', '32']","['lambda x: (2 * x) * 4', 'lambda x: (4 * x) | 0', 'lambda x: 2 ** (2 * x)']",
857,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,same_class,1,0,2,1,1,0,"['20', '24', '28', '32']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) % (4+1)']",
858,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,same_class,1,1,2,1,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x)', 'lambda x: (2 * x) + 4', 'lambda x: (x * 4) % (4+1)']",
859,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,same_class,1,1,2,0,1,0,"['20', '24', '28', '32']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 1']",
860,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,same_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (x * 4)', 'lambda x: (2 * x) * 2', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) - 0']",
861,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,same_class,1,1,2,0,1,0,"['24', '28', '32', '36', '40']","['lambda x: (2 * x) * 2', 'lambda x: (4 * x) | 0', 'lambda x: (x * 5) % (4+1)']",
862,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,same_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 0', 'lambda x: (2 * x) * 4', 'lambda x: (5 * x) - 4']",
863,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,same_class,1,1,2,1,1,0,"['24', '28', '32', '36', '40']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) - 4', 'lambda x: (4 * x) + 0']",
864,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,same_class,1,0,2,1,0,0,"['24', '28', '32', '36', '40']","['lambda x: (x * 2) + 4', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) + 4']",
865,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,same_class,1,0,2,2,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) * 3', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) * 1']",
866,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (x * 4) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (2 * x) * 3']",
867,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) | 8']",
868,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['28', '32', '36']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 8', 'lambda x: (x * 4) | 8', 'lambda x: (x * 4) % (8+1)']",
869,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) | 12', 'lambda x: (5 * x) - 4']",
870,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,same_class,0,1,2,1,0,0,"['24', '30', '36']","['lambda x: (6 * x) + 0', 'lambda x: (3 * x) ** 2', 'lambda x: (2 * x) ** 3']",
871,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,same_class,1,1,2,0,1,0,"['24', '30', '36', '42', '48', '54', '60']","['lambda x: 3 * x', 'lambda x: 6 * (x - 1)', 'lambda x: (x + 1) * 6', 'lambda x: (2 * x) * 3']",
872,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,same_class,1,1,2,1,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) ** 1', 'lambda x: (3 * x) ** 2', 'lambda x: (2 * x) ** 3', 'lambda x: (1 * x) ** 4']",
873,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,same_class,1,0,2,1,0,0,"['30', '36', '42', '48']","['lambda x: (3 * x) + 0', 'lambda x: (6 * x) / 2', 'lambda x: (4 * x) + 2']",
874,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,same_class,1,0,2,1,1,0,"['36', '42', '48', '54']","['lambda x: 3 * (2 * x)', 'lambda x: 6 * (x + 1)', 'lambda x: (2 * x) * 3', 'lambda x: (x + 1) * 6']",
875,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,same_class,0,1,2,1,2,1,"['36', '42', '48', '54']","['lambda x: (2 * x) * 3', 'lambda x: (3 * x) * 2', 'lambda x: (6 * x) * 1']",
876,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,same_class,1,1,2,2,2,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) * 1']",
877,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,same_class,1,1,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) % (4+1)', 'lambda x: (2 * x) * 1']",
878,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,same_class,1,1,2,2,0,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2']",
879,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,same_class,1,0,2,1,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (1 * x) * 2', 'lambda x: 2 ** (1 * x)']",
880,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,same_class,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28']","['lambda x: 2 * x', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) | 1']",
881,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,same_class,1,1,2,1,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) | 2']",
882,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,same_class,1,0,2,1,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) + 2', 'lambda x: (x * 2) + 4']",
883,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,same_class,1,1,2,1,0,0,"['12', '14', '16', '18', '20']","['lambda x: x * 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 2) % (2+1) + 4']",
884,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]']",
885,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,same_class,1,1,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) % (2 + 1)', 'lambda x: (2 * x) ** 0', 'lambda x: (2 * x) // (2 + 1)']",
886,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,same_class,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) | 2', 'lambda x: (4 * x) | 0', 'lambda x: (5 * x) | -2']",
887,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,same_class,1,1,2,1,0,0,"['14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24']","['lambda x: (2 * x) + 6', 'lambda x: (x * 4) % (2+2)']",
888,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,same_class,1,0,2,1,0,1,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 ** x) + 4', 'lambda x: (4 * x) / 2', 'lambda x: (4 ** x) / 2']",
889,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,same_class,0,0,2,1,1,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 0']",
890,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,same_class,0,0,2,2,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) | 6', 'lambda x: (4 * x) ** 0', 'lambda x: (4 * x) | 2']",
891,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,same_class,1,1,2,1,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) | 2', 'lambda x: (6 * x) - 2']",
892,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) * 3', 'lambda x: (4 * x) // 2', 'lambda x: (4 * x) % 5']",
893,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,same_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 2) % (4+1)']",
894,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,same_class,1,1,2,0,2,0,"['8', '10', '12']","['lambda x: (2 * x) ** 1', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) | 0']",
895,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,same_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (x * 2) * 3', 'lambda x: (x * 3) * 2', 'lambda x: (x * 6) % (2+1)']",
896,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,same_class,0,0,2,1,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 2) % (4+1)']",
897,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,8,same_class,0,1,2,0,0,0,"['128', '256', '512']","['lambda x: (2 ** x) + 0', 'lambda x: (4 ** x) + 0', 'lambda x: (4 * x) + 0', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) ** 3']",
898,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,8,same_class,0,0,2,0,1,0,"['128', '256', '512']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (x - 1)', 'lambda x: (x * 4) % (3+1)', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]']",
899,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,8,same_class,0,0,2,0,0,0,"['2048', '4096', '8192', '16384', '32768', '65536']","['lambda x: (2 ** x) * 4', 'lambda x: (4 ** x) * 4', 'lambda x: (4 ** x) * 16', 'lambda x: (2 ** x) * 16']",
900,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,8,same_class,0,0,1,1,0,0,"['19', '23', '27', '31']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) + 3']",
901,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,same_class,1,1,0,0,0,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
902,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,same_class,0,0,0,1,1,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) ^ 3', 'lambda x: (4 * x) & 3']",
903,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,same_class,1,1,2,0,1,0,"['17', '21', '25', '29']","['lambda x: (4 * x) - 2', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 4']",
904,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,same_class,1,0,2,1,0,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) - 1']",
905,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,same_class,0,1,0,1,1,0,"['19', '23', '27', '31']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) * 1', 'lambda x: (1 * x) * 4']",
906,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,same_class,1,1,0,0,1,0,"['23', '27', '31', '35']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 3']",
907,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['27', '29', '31']","['lambda x: (4 * x) + 9', 'lambda x: (4 * x) * 1 + 9', 'lambda x: (1 * x) * 4 + 9']",
908,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,same_class,1,1,2,0,0,0,"['27', '29', '31', '33']","['lambda x: (4 * x) + 9', 'lambda x: (x * 4) + 5', 'lambda x: (x * 4) | 1']",
909,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,8,same_class,0,1,2,3,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (1 * x) | 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]']",
910,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,8,same_class,0,0,2,3,0,0,"['0', '1']","['lambda x: (x % 2)', 'lambda x: (x + 1) % 2', 'lambda x: (x * 0) + 1']",
911,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,same_class,1,1,2,0,2,0,"['23', '27', '31', '35']","['lambda x: (4 * x) | 3', 'lambda x: (5 * x) | 2', 'lambda x: (4 * x) + 3']",
912,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,same_class,1,0,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) * 2 + 3', 'lambda x: (x * 4) + 3', 'lambda x: (x * 2) * 2 + 3']",
913,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,same_class,1,0,2,0,0,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (x * 4) + 7', 'lambda x: (x * 4) + 11']",
914,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,same_class,1,1,2,1,0,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 19', 'lambda x: (4 * x) + 23']",
915,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,same_class,1,0,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 19']",
916,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 ** x', 'lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]']",0.0
917,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,exclude_class,0,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 0', 'lambda x: x + 1', 'lambda x: (x * 1) % (4+1)']",1.0
918,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (2 * x) ** 1', 'lambda x: (4 * x) ** 0']",2.0
919,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,exclude_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 1 * x * 2', 'lambda x: 1 * x * x']",3.0
920,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,exclude_class,1,1,2,1,0,1,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25']","['lambda x: x + 0', 'lambda x: x + 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 1']",4.0
921,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,exclude_class,1,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (4 * x) - 3', 'lambda x: (2 * x) + 1', 'lambda x: (x ** 2) - (x - 1)']",5.0
922,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,4,exclude_class,0,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 3', 'lambda x: (x * 4) - 6']",6.0
923,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,exclude_class,1,1,2,1,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) ** 1', 'lambda x: (1 * x) ** 0']",7.0
924,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,exclude_class,1,1,2,2,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 1', 'lambda x: (5 * x) - 4']",8.0
925,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 2) % (1+1)']",9.0
926,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,exclude_class,0,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 0) + 1', 'lambda x: (x * 2) - 1']",10.0
927,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,exclude_class,1,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: x * 2 - 1', 'lambda x: (x - 1) * 2 + 1', 'lambda x: (x - 1) ** 2 + 1']",11.0
928,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,exclude_class,0,0,1,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: x + 1', 'lambda x: 2 * x', 'lambda x: 3 * x + 0']",12.0
929,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (x * 1) % (3+1)', 'lambda x: (x * 1) + 0', 'lambda x: (x * 1) - 0', 'lambda x: (x * 1) * 0', 'lambda x: (x * 1) / 1']",13.0
930,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,exclude_class,0,0,1,1,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 1) % (2+1) + 1', 'lambda x: (2 * x) ** 2 - 1']",14.0
931,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,exclude_class,1,0,2,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: x + 1', 'lambda x: 2 * x - 1', 'lambda x: 3 * x - 3']",15.0
932,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,4,exclude_class,0,0,1,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x', 'lambda x: (x * 3) % (0+1)', 'lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]']",16.0
933,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,exclude_class,0,1,1,0,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 1']",17.0
934,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,exclude_class,1,0,0,0,0,0,"['7', '9', '11']","['lambda x: (1 * x) + 2', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + (2 * 1)']",18.0
935,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,exclude_class,0,0,0,0,0,0,"['7', '9', '11']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) | 2', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) - 1']",19.0
936,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,exclude_class,1,0,1,0,0,0,"['7', '9', '11']","['lambda x: (x + 1)', 'lambda x: (x * 2)', 'lambda x: (x * 3)', 'lambda x: (x * 4)', 'lambda x: (x * 5)', 'lambda x: (x * 6)', 'lambda x: (x * 7)', 'lambda x: (x * 8)', 'lambda x: (x * 9)', 'lambda x: (x * 10)', 'lambda x: (x * 11)', 'lambda x: (x * 12)', 'lambda x: (x * 13)', 'lambda x: (x * 14)', 'lambda x: (x * 15)', 'lambda x: (x * 16)', 'lambda x: (x * 17)', 'lambda x: (x * 18)', 'lambda x: (x * 19)', 'lambda x: (x * 20)']",20.0
937,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,exclude_class,1,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 1', 'lambda x: (5 * x) + 1']",21.0
938,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,exclude_class,1,0,2,0,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: 2 ** x']",22.0
939,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,exclude_class,0,1,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: 2 ** (x + 1)', 'lambda x: (2 * x) | 1']",23.0
940,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,exclude_class,1,0,0,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: (x + 1)', 'lambda x: (x * 2) - 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) - 3', 'lambda x: (x * 4) - 2', 'lambda x: (x * 4) - 1', 'lambda x: (x * 4)', 'lambda x: (x * 5) - 4', 'lambda x: (x * 5) - 3', 'lambda x: (x * 5) - 2', 'lambda x: (x * 5) - 1']",24.0
941,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) - 2']",25.0
942,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (3 + x) ** 1', 'lambda x: 3 ** (2 * x)']",26.0
943,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,exclude_class,1,0,0,1,0,0,"['8', '10', '12']","['lambda x: (1 * x) | 2', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'lambda x: 2 ** (1 * x) - 1']",27.0
944,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x + 1) | 0', 'lambda x: (x + 3) | 0', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) | -1']",28.0
945,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,exclude_class,1,0,2,2,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 + (x - 1)', 'lambda x: (x * 1) + 3 + (x - 1) * 1']",29.0
946,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['7', '11', '15', '19', '23', '27', '31', '35', '39', '43', '47', '51', '55', '59', '63', '67', '71', '75', '79', '83', '87', '91', '95', '99']","['lambda x: x + 3', 'lambda x: 3 + (x * 1)', 'lambda x: 3 + (x * 0) + 1']",30.0
947,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x + 3) % (7+1)', 'lambda x: (x * 3) % (7+1)', 'lambda x: (x * 4) % (7+1)', 'lambda x: (x * 5) % (7+1)', 'lambda x: (x * 6) % (7+1)']",31.0
948,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,exclude_class,1,1,2,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: 3 + (x * 1)']",32.0
949,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3']",33.0
950,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,exclude_class,1,1,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 2']",34.0
951,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'lambda x: 2 ** (1 * x) + 1', 'lambda x: (lambda a:lambda v:a(a,v))(lambda fn,x:3 if x==0 else 1 * x * fn(fn,x-1) + 2)']",35.0
952,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,exclude_class,1,1,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: (3 * x) % (0+1)', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) ** 1']",36.0
953,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,exclude_class,1,0,2,0,0,1,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x + 3) % (3+1)', 'lambda x: (x * 3) % (3+1)']",37.0
954,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,exclude_class,1,0,2,1,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x * 3) + 0', 'lambda x: (x * 3) - 3']",38.0
955,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,exclude_class,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: (3 * x) | 0', 'lambda x: (1 * x) + 3', 'lambda x: (3 * x) - 3']",39.0
956,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,exclude_class,0,1,2,1,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) * 1', 'lambda x: (x * 3) % (2+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",40.0
957,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,exclude_class,1,1,2,0,0,0,"['15', '18', '21', '24', '27', '30']","['lambda x: (x * 3)', 'lambda x: (x + 3)', 'lambda x: (3 * (x + 1))', 'lambda x: (3 * (x * 1))']",41.0
958,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,exclude_class,0,0,2,1,0,0,"['15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x + 3) * 3', 'lambda x: 3 + (x * 3)']",42.0
959,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,exclude_class,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x * 4) - 1']",43.0
960,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,exclude_class,1,0,2,1,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * (x + 3)', 'lambda x: (x * 3) + 6', 'lambda x: (x + 6) * 3', 'lambda x: (x * 4) - 3']",44.0
961,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (x * 3) % (6+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]']",45.0
962,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",46.0
963,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,exclude_class,1,1,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 0', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) * 3']",47.0
964,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,4,exclude_class,1,0,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 1', 'lambda x: (x * 3) + 6']",48.0
965,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x + 3', 'lambda x: 3 * x + 6', 'lambda x: 4 * x + 3', 'lambda x: 4 * x + 5']",49.0
966,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x + 3', 'lambda x: (x + 3) ** 2 - 3', 'lambda x: (x * 3) + 9']",50.0
967,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['21', '24', '27']","['lambda x: 3 * (x + 3)', 'lambda x: 3 * x + 9', 'lambda x: 3 * x + 3']",51.0
968,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x + 3', 'lambda x: (x + 1) * 3', 'lambda x: (x + 2) * 3', 'lambda x: (x + 3) * 3']",52.0
969,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,exclude_class,1,1,2,0,1,0,"['21', '24', '27']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) - 6']",53.0
970,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,exclude_class,0,0,2,1,0,0,"['8', '9', '10', '11', '12']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)']",54.0
971,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) | 1', 'lambda x: (2 * x) ** 0 + 4']",55.0
972,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['8', '9', '10', '11', '12']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)']",56.0
973,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,4,exclude_class,0,1,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: (2 * x) + 2']",57.0
974,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,4,exclude_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]']",58.0
975,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,exclude_class,1,0,0,0,0,0,"['9', '11', '13', '15']","['lambda x: (x + 0) * 1', 'lambda x: (x + 1) * 1', 'lambda x: (x + 2) * 1', 'lambda x: (x + 3) * 1']",59.0
976,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,exclude_class,1,1,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 4', 'lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1']",60.0
977,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,exclude_class,1,1,2,0,0,0,"['8', '9', '10']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)']",61.0
978,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,4,exclude_class,1,1,0,1,0,0,"['0', '2', '4', '6', '8']","['lambda x: (x % 3)', 'lambda x: (x + 1) % 3', 'lambda x: (x * 2) % 3']",62.0
979,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,4,exclude_class,1,1,0,1,0,0,"['3', '4', '5', '6', '7', '8', '9', '0']","['lambda x: x % 3', 'lambda x: (x + 1) % 3', 'lambda x: (x + 2) % 3']",63.0
980,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,4,exclude_class,1,1,2,0,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) - 1']",64.0
981,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: 4 + (x * 1)', 'lambda x: 4 + (x * 2) - 1', 'lambda x: 4 + (x * 3) - 3', 'lambda x: 4 + (x * 4) - 6']",65.0
982,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,exclude_class,0,0,2,1,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",66.0
983,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x - 1) | 1']",67.0
984,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) / 2 + 1']",68.0
985,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,exclude_class,1,1,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (x * (x + 1)) // 2 + 1']",69.0
986,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,exclude_class,1,1,2,1,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (4 * x) - 3']",70.0
987,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) - 1']",71.0
988,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,exclude_class,1,1,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",72.0
989,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,exclude_class,1,1,2,1,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) / 2', 'lambda x: (x * 5) - 2']",73.0
990,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (2 * x) + 3', 'lambda x: (x * 4) % (1+3)']",74.0
991,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,exclude_class,0,0,2,1,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) * 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) * 2']",75.0
992,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: 2 * x + 3', 'lambda x: x + 2 * (x - 1) + 1', 'lambda x: (x * 2) + 1']",76.0
993,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,exclude_class,1,0,2,0,1,0,"['13', '15', '17', '19']","['lambda x: 2 * x + 1', 'lambda x: (2 * x) + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) + 3']",77.0
994,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,exclude_class,1,1,2,1,1,0,"['13', '15', '17']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1']",78.0
995,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 9', 'lambda x: (2 * x) + 11']",79.0
996,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,exclude_class,1,0,2,0,0,0,"['15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 7', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 5']",80.0
997,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,exclude_class,0,0,2,1,0,0,"['15', '17', '19']","['lambda x: (x * 2) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 2) % (4+1)']",81.0
998,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,4,exclude_class,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: x + 5', 'lambda x: (x * 5) % (3 + 1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]']",82.0
999,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,exclude_class,1,0,0,0,0,0,"['10', '12', '14', '16']","['lambda x: (1 * x) + 5', 'lambda x: (1 * x) + 6', 'lambda x: (1 * x) + 7', 'lambda x: (1 * x) + 8']",83.0
1000,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,exclude_class,1,1,0,1,0,0,"['20', '24', '28', '32']","['lambda x: 4 * x + 2', 'lambda x: 2 * (2 * x + 1)']",84.0
1001,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,4,exclude_class,1,0,0,0,0,0,"['20', '24', '28', '32']","['lambda x: (x * 4) + 2', 'lambda x: (x * 4) + 6', 'lambda x: (x * 4) + 10', 'lambda x: (x * 4) + 14']",85.0
1002,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,exclude_class,0,0,2,0,1,0,"['26', '30', '34', '38']","['lambda x: (2 * x) + 8', 'lambda x: (4 * x) + 6', 'lambda x: (4 * x) + 2']",86.0
1003,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,exclude_class,1,0,2,0,0,0,"['30', '34', '38', '42']","['lambda x: 4 * x + 10', 'lambda x: 2 * x + 12', 'lambda x: x + 14']",87.0
1004,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,exclude_class,1,0,2,1,0,0,"['16', '20', '24', '28', '32']","['lambda x: x * 4', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) + 2', 'lambda x: (x * 4) + 4']",88.0
1005,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,exclude_class,1,1,2,1,2,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48']","['lambda x: (4 * x) | 0', 'lambda x: (4 * x) + 0', 'lambda x: 4 * x']",89.0
1006,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,1,1,1,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '148', '152', '156', '160', '164', '168', '172', '176', '180', '184', '188', '192', '196', '200', '204', '208', '212', '216', '220', '224', '228', '232', '236', '240', '244', '248', '252', '256', '260', '264', '268', '272', '276', '280', '284', '288', '292', '296', '300', '304', '308', '312', '316', '320', '324', '328', '332', '336', '340', '344', '348', '352', '356', '360', '364', '368', '372', '376', '380', '384', '388', '392', '396', '400']","['lambda x: 4 * x', 'lambda x: (2 * x) * 2', 'lambda x: (1 * x) * 4', 'lambda x: (0 * x) * 12']",90.0
1007,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: 2 * x', 'lambda x: 4 * x', 'lambda x: x + 4', 'lambda x: x * 3']",91.0
1008,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['18', '20', '24']","['lambda x: (x * 4)', 'lambda x: (2 * x) + 4', 'lambda x: 4 + (x * 4)']",92.0
1009,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,exclude_class,0,0,2,2,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: 4 * x', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) / 2', 'lambda x: (x + 4) * 2', 'lambda x: (x + 4) / 2', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4) - 4']",93.0
1010,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120']","['lambda x: 4 * x', 'lambda x: 4 + (4 * x)', 'lambda x: 4 + (x * 4)']",94.0
1011,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['20', '24', '28', '32', '36', '40']","['lambda x: 4 * x', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 6', 'lambda x: (4 * x) + 7', 'lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 10', 'lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 12', 'lambda x: (4 * x) + 13', 'lambda x: (4 * x) + 14', 'lambda x: (4 * x) + 15']",95.0
1012,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (x * 2) * 2', 'lambda x: (x * 4) * 1', 'lambda x: (x * 4) + 0']",96.0
1013,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,exclude_class,1,1,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 4']",97.0
1014,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['24', '28', '32', '36']","['lambda x: 4 * x + 4', 'lambda x: 4 * (x + 2)']",98.0
1015,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: 4 * x + 4', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4) % (4+4)']",99.0
1016,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,exclude_class,1,1,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) | 4', 'lambda x: (4 * x) + 4', 'lambda x: (2 * x) ** 2 + 4']",100.0
1017,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,exclude_class,0,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x + 4) * 4', 'lambda x: 4 * (x + 3)']",101.0
1018,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,exclude_class,1,0,2,0,0,1,"['28', '32', '36', '40']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 12', 'lambda x: (4 * x) - 4', 'lambda x: (4 * x) - 8']",102.0
1019,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40', '44', '48', '52', '56', '60', '64']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 0']",103.0
1020,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) * 0.5', 'lambda x: (5 * x) * 0.25']",104.0
1021,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * x + 8', 'lambda x: 4 * (x + 1) + 4', 'lambda x: 4 * (x + 2)', 'lambda x: 4 * (x + 3) - 4']",105.0
1022,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,exclude_class,1,0,2,0,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: (6 * x) + 0', 'lambda x: (6 * x) ** 0', 'lambda x: (3 * x) ** 2']",106.0
1023,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: 3 * x', 'lambda x: 6 * x', 'lambda x: x * (2 * x + 1)']",107.0
1024,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,exclude_class,1,1,2,1,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) + 0', 'lambda x: (6 * x) + 6', 'lambda x: (6 * (x - 1)) + 6']",108.0
1025,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['30', '36', '42', '48']","['lambda x: 6 * (x + 1)', 'lambda x: 6 * (2 * x)', 'lambda x: 6 * (3 * x)', 'lambda x: 6 * (4 * x)', 'lambda x: 6 * (x * 4)', 'lambda x: 6 * (x * 3)', 'lambda x: 6 * (x * 2)', 'lambda x: 6 * x']",109.0
1026,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,exclude_class,0,1,2,0,1,0,"['36', '42', '48', '54']","['lambda x: (3 * x) + 6', 'lambda x: (6 * x) + 6', 'lambda x: (4 * x) + 6', 'lambda x: (2 * x) * 3']",110.0
1027,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['36', '42', '48', '54', '60']","['lambda x: (3 * x) + 6', 'lambda x: (6 * x) - 6', 'lambda x: (4 * x) + 6', 'lambda x: (5 * x) - 6']",111.0
1028,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,exclude_class,1,0,2,1,0,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (1 * x) * 2', 'lambda x: (2 * x)', 'lambda x: (2 * x) + 2']",112.0
1029,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,exclude_class,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) ** 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (4 * x) % (2+1)']",113.0
1030,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['10', '12', '14', '16']","['lambda x: 2 * x', 'lambda x: (5 * x) * 2', 'lambda x: (10 * x) + 2']",114.0
1031,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,exclude_class,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (x * 2) % (2+1)', 'lambda x: (x * 2) + 2', 'lambda x: (2 * x) % (2+1)', 'lambda x: (2 * x) + 2']",115.0
1032,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,1,0,0,"['10', '12', '14', '16']","['lambda x: 2 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: 2 ** (2 * x)']",116.0
1033,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,exclude_class,1,0,2,0,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (x + 2) * 2', 'lambda x: (x * 2) + 2', 'lambda x: (2 + x) * 2']",117.0
1034,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: 2 * (x + 2)', 'lambda x: 2 * (x + 1) + 2', 'lambda x: 2 * x + 2', 'lambda x: 4 + (2 * x)']",118.0
1035,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 4', 'lambda x: (x + 4) * 2', 'lambda x: (x * 2) + 4', 'lambda x: (x * 4) / 2']",119.0
1036,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) | 2', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) | 6']",120.0
1037,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,exclude_class,0,0,2,1,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 1) + 4']",121.0
1038,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (2 * (x - 1)) + 4']",122.0
1039,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) ** 1', 'lambda x: (2 * x) + 4', 'lambda x: (4 * x) ** 0.5', 'lambda x: (2 * x) | 2']",123.0
1040,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,exclude_class,1,1,2,1,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) | 2', 'lambda x: (2 * x) + 6']",124.0
1041,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,exclude_class,1,0,2,1,0,0,"['14', '16', '18', '20', '22', '24']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 8']",125.0
1042,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,exclude_class,1,1,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) * 2', 'lambda x: (1 * x) * 4']",126.0
1043,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: 2 * x + 4', 'lambda x: 4 * (x + 1)', 'lambda x: (x + 1) * (x + 2)']",127.0
1044,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 6', 'lambda x: (2 * x) * 3', 'lambda x: (x * 4) + 2']",128.0
1045,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,exclude_class,1,1,2,1,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) | 0']",129.0
1046,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,exclude_class,1,1,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) | 2']",130.0
1047,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,exclude_class,0,1,2,0,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) * 2']",131.0
1048,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,exclude_class,1,1,2,1,2,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) / 2']",132.0
1049,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,4,exclude_class,1,1,2,0,0,0,"['256', '1024']","['lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** 3', 'lambda x: (4 * x) ** 4', 'lambda x: (8 * x) ** 3']",133.0
1050,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,4,exclude_class,1,1,2,0,0,0,"['128', '256', '512']","['lambda x: 2**x', 'lambda x: 4**(x-1)', 'lambda x: 4**(x-2) + 1', 'lambda x: 4**(x-3) + 3']",134.0
1051,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,4,exclude_class,0,1,2,0,0,0,"['2048', '4096', '8192', '16384']","['lambda x: (2 * x) ** 4', 'lambda x: (4 * x) ** 3', 'lambda x: (8 * x) ** 2', 'lambda x: (16 * x) ** 1']",135.0
1052,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,4,exclude_class,0,0,0,0,0,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",136.0
1053,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,exclude_class,0,0,1,0,0,0,"['17', '19', '21', '23']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",137.0
1054,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,exclude_class,1,0,2,0,1,1,"['19', '23', '27', '31']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) | 3', 'lambda x: (2 * x) + 1']",138.0
1055,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['17', '21', '25']","['lambda x: (x * 4) + 1', 'lambda x: (x * 4) - 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) - 1']",139.0
1056,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,exclude_class,0,0,2,0,0,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (x * 1) + 4']",140.0
1057,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,exclude_class,1,1,2,0,1,0,"['21', '25', '29', '33']","['lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",141.0
1058,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,exclude_class,0,0,2,0,0,0,"['25', '29', '33', '37']","['lambda x: (2 * x) + 7', 'lambda x: (4 * x) + 5', 'lambda x: (x + 1) ** 2']",142.0
1059,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,exclude_class,1,0,0,0,0,0,"['27', '31', '35', '39']","['lambda x: (x * 4) + 9', 'lambda x: (x * 4) + 13', 'lambda x: (x * 4) + 5', 'lambda x: (x * 4) + 1']",143.0
1060,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,exclude_class,1,0,2,0,0,0,"['27', '29', '31']","['lambda x: 4 * x + 9', 'lambda x: 4 * (x + 3)']",144.0
1061,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,4,exclude_class,0,1,2,1,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (x + 1) % 2', 'lambda x: (x // 2) % 2']",145.0
1062,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,4,exclude_class,1,1,2,0,2,0,"['0', '1']","['lambda x: (x * 1) % (1+1)', 'lambda x: (x * 1) % (2+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 3) % (4+1)']",146.0
1063,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,exclude_class,1,0,2,0,0,0,"['23', '27', '31', '35']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) + 5', 'lambda x: (3 * x) - 2']",147.0
1064,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,exclude_class,1,0,2,1,0,0,"['23', '27', '31', '35']","['lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 1']",148.0
1065,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,exclude_class,0,0,2,0,0,0,"['27', '31', '35', '39']","['lambda x: 4 * x + 7', 'lambda x: 4 * (x + 2) + 3', 'lambda x: 4 * (x + 3) - 1']",149.0
1066,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,exclude_class,0,0,2,0,0,0,"['29', '31', '33', '35']","['lambda x: 4 * x + 11', 'lambda x: 4 * x + 15', 'lambda x: 4 * (x + 3)']",150.0
1067,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,exclude_class,1,1,2,0,1,0,"['31', '35', '39', '43', '47', '51', '55', '59', '63', '67', '71', '75', '79', '83', '87', '91', '95', '99']","['lambda x: (2 * x) + 13', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 6']",151.0
1068,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (x * 1) ** 1', 'lambda x: (x * 2) ** 0', 'lambda x: (x * 3) ** -1']",152.0
1069,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,same_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 1', 'lambda x: (x * 1) % (4+1)']",153.0
1070,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 ** (1 * x)', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1']",154.0
1071,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,same_class,1,1,2,0,1,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) | 0']",155.0
1072,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,same_class,1,0,2,1,0,1,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (4 * x) / 4']",156.0
1073,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,same_class,0,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 4) % (3+1) + 1']",157.0
1074,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,4,same_class,0,0,2,2,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (1 * x) ** 1', 'lambda x: (2 * x) | 1', 'lambda x: (4 * x) ** 0']",158.0
1075,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,same_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 4) % (4+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",159.0
1076,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,same_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 4) % (4+1)']",160.0
1077,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,same_class,0,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (2 * x) ** 0 + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x] + 1', 'lambda x: (2 * x) | 3 + 1']",161.0
1078,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,same_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) - 3']",162.0
1079,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,same_class,0,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x | 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) | -1']",163.0
1080,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (2 * x) % (3+1)']",164.0
1081,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,same_class,1,0,2,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: x + 1', 'lambda x: 2 * x', 'lambda x: 3 * x + 1', 'lambda x: 4 * x - 2']",165.0
1082,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,same_class,1,0,2,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: (2 * x) + 0', 'lambda x: (3 * x) + 0', 'lambda x: (4 * x) + 0']",166.0
1083,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,same_class,1,0,2,3,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 0']",167.0
1084,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,4,same_class,0,0,1,2,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) * 3']",168.0
1085,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,same_class,1,0,0,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) | 1', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) | 1', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) | 1', 'lambda x: (5 * x) | 0', 'lambda x: (5 * x) | 1', 'lambda x: (6 * x) | 0', 'lambda x: (6 * x) | 1']",169.0
1086,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,same_class,0,0,0,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (2 * x) ** 1', 'lambda x: (x + 1) % (2+1)', 'lambda x: (x * 1) % (2+1)', 'lambda x: (x * 2) % (2+1)']",170.0
1087,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,same_class,1,1,0,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 * x - 1', 'lambda x: (x * 3) % (2+1)']",171.0
1088,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,same_class,0,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 * x - 1', 'lambda x: (x - 1) * 2 + 1', 'lambda x: (x + 1) * 2 - 1']",172.0
1089,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,same_class,1,0,1,1,0,0,"['7', '9', '11', '13', '15']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1) or i % (4 + 1) or i % (5 + 1)][x]', 'lambda x: 2 ** (x - 1)']",173.0
1090,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,same_class,0,1,0,0,0,0,"['7', '9', '11', '13']","['lambda x: (1 * x) + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 2 ** 1', 'lambda x: (x * 1) + 2 ** (x - 1)']",174.0
1091,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,same_class,0,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: (x * 1) + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",175.0
1092,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 + x', 'lambda x: (x * 1) + 2']",176.0
1093,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,same_class,1,0,2,2,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (5 + 1)][x]']",177.0
1094,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 3) % (3+1)']",178.0
1095,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,same_class,1,0,2,2,1,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3']",179.0
1096,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,same_class,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3', 'lambda x: (5 * x) - 5']",180.0
1097,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['7', '9', '11', '13']","['lambda x: x + 3', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 3']",181.0
1098,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,same_class,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",182.0
1099,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,same_class,1,1,2,1,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) * 3', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) * 1', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) * 0']",183.0
1100,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,same_class,1,0,2,1,0,0,"['7', '8', '9', '10']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) | 3', 'lambda x: (x * 2) - 1', 'lambda x: (x * 2) | 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 3) % (4+1)']",184.0
1101,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,same_class,1,0,2,1,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) + 1', 'lambda x: (x * 5) + 1', 'lambda x: (x * 6) + 1']",185.0
1102,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,same_class,0,0,2,0,0,0,"['7', '9', '11', '13', '15', '17', '19', '21']","['lambda x: (x + 3)', 'lambda x: (2 * x) + 1', 'lambda x: (x * 1) + 3']",186.0
1103,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,same_class,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: 3 * x + 1', 'lambda x: (x * 1) + 3']",187.0
1104,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,same_class,1,0,2,1,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x * 3) + 0', 'lambda x: (x + 0) * 3', 'lambda x: (x + 0) + (3 * x)']",188.0
1105,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['12', '15', '18', '21']","['lambda x: 3 * x', 'lambda x: [i for i in range(100) if i % (0 + 1) or i % (3 + 1)][x]', 'lambda x: (3 * x) + 0']",189.0
1106,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39']","['lambda x: 3 * x', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) ** 0']",190.0
1107,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,same_class,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: [i for i in range(100) if i % (0 + 1) or i % (3 + 1)][x]']",191.0
1108,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,same_class,1,1,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) - 3']",192.0
1109,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,same_class,0,0,2,0,0,0,"['15', '18', '21', '24', '27', '30']","['lambda x: (1 * x) * 3', 'lambda x: (3 + x) * 2', 'lambda x: (3 + x) * 3', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + (3 * x)']",193.0
1110,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,same_class,1,1,2,0,0,0,"['15', '18', '21', '24']","['lambda x: (3 * x)', 'lambda x: (x * 4) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x * 2) + 3']",194.0
1111,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,same_class,1,0,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (1 * x) * 3', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) - 3']",195.0
1112,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * x + 3', 'lambda x: x * 3 + 3', 'lambda x: x * 4 - 2', 'lambda x: 4 * x - 2']",196.0
1113,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) ** 2 + 3', 'lambda x: (3 * x) ** 3 + 3']",197.0
1114,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,same_class,1,0,2,1,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",198.0
1115,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,same_class,1,0,2,1,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3']",199.0
1116,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,4,same_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: 3 * (x + 2)', 'lambda x: 3 * x + 6', 'lambda x: (x * 3) + 6', 'lambda x: (x + 2) * 3']",200.0
1117,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,same_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x + 3', 'lambda x: 3 * (x + 1) + 0', 'lambda x: 3 * (x + 2) - 3']",201.0
1118,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,same_class,1,0,2,1,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9']",202.0
1119,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,same_class,0,1,2,0,0,0,"['21', '24', '27']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) | 9', 'lambda x: (3 * x) % (9+1)']",203.0
1120,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,same_class,0,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * (x + 3)', 'lambda x: 3 * (x + 6)', 'lambda x: 3 * (x + 9)', 'lambda x: 3 * (x + 12)']",204.0
1121,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,same_class,1,1,0,0,0,0,"['20', '22', '24', '26']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 3', 'lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 9']",205.0
1122,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 1']",206.0
1123,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,same_class,1,1,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)']",207.0
1124,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,same_class,1,1,2,0,0,0,"['8', '9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 3 + 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 1 + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]']",208.0
1125,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,4,same_class,1,0,2,0,0,0,"['8', '9', '10']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)']",209.0
1126,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,4,same_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: (x * 4) % (3+1)']",210.0
1127,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,same_class,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x + 4)', 'lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) - 1']",211.0
1128,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,same_class,1,1,2,0,0,0,"['8', '9', '10']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 1']",212.0
1129,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,same_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x + 4)', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2']",213.0
1130,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,4,same_class,1,1,0,0,0,0,"['4', '-2', '-4', '-6', '-8', '-10', '-12', '-14', '-16', '-18', '-20', '-22', '-24', '-26', '-28', '-30', '-32', '-34', '-36', '-38', '-40', '-42', '-44', '-46', '-48', '-50', '-52', '-54', '-56', '-58', '-60', '-62', '-64', '-66', '-68', '-70', '-72', '-74', '-76', '-78', '-80', '-82', '-84', '-86', '-88', '-90', '-92', '-94', '-96', '-98', '-100']","['lambda x: x % 3', 'lambda x: (x + 1) % 3', 'lambda x: (x * 2) % 3']",214.0
1131,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,4,same_class,0,0,0,0,0,0,"['5', '-1', '3', '-2']","['lambda x: x % 3', 'lambda x: (x // 3) % 2']",215.0
1132,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,4,same_class,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (2 * x) + 4', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 3', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 1']",216.0
1133,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,same_class,0,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: 4 + x', 'lambda x: 5 + x', 'lambda x: 7 + x', 'lambda x: 8 + x', 'lambda x: 4 + (x * 1)', 'lambda x: 5 + (x * 1)', 'lambda x: 7 + (x * 1)', 'lambda x: 8 + (x * 1)', 'lambda x: 4 + (x * 2)', 'lambda x: 5 + (x * 2)', 'lambda x: 7 + (x * 2)', 'lambda x: 8 + (x * 2)']",217.0
1134,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x + 1) * 1', 'lambda x: (x + 1) * 2', 'lambda x: (x + 2) * 1', 'lambda x: (x + 3) * 1']",218.0
1135,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 0', 'lambda x: (x * 5) % (2+1)']",219.0
1136,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,same_class,1,0,2,1,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 2) + 1']",220.0
1137,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,same_class,1,1,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) % (4+1)']",221.0
1138,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,same_class,1,1,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (1 * x) * 2 + 1', 'lambda x: (1 * x) * 2 - 1']",222.0
1139,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 2) + 3']",223.0
1140,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (x * 2) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 2) + 3', 'lambda x: (x * 2) - 3', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) - 1', 'lambda x: (x * 4) + 3', 'lambda x: (x * 4) - 3']",224.0
1141,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,same_class,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (x * 4) - 3']",225.0
1142,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,same_class,1,1,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 5']",226.0
1143,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: 2 * x + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) - 1']",227.0
1144,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,same_class,0,1,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 5', 'lambda x: (x * 4) - 3']",228.0
1145,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,same_class,0,1,2,1,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) * 3 + 1', 'lambda x: (2 * x) * 4 - 1']",229.0
1146,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,same_class,1,0,2,0,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 7']",230.0
1147,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (1 * x) + 6', 'lambda x: (4 * x) - 3']",231.0
1148,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,same_class,1,0,2,0,1,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 3']",232.0
1149,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,same_class,0,0,2,0,0,0,"['15', '17', '19']","['lambda x: 2 * x + 5', 'lambda x: 4 * x - 3', 'lambda x: 4 * x + 1']",233.0
1150,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,4,same_class,0,1,2,2,2,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 5', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 2']",234.0
1151,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,same_class,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 1) + 5']",235.0
1152,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,same_class,0,0,0,0,0,0,"['20', '24', '28', '32']","['(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 4 * x * fn(fn,x-1) + 2)', '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 4 * x * fn(fn,x-1) + 6)', '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 4 * x * fn(fn,x-1) + 10)', '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 4 * x * fn(fn,x-1) + 14)']",236.0
1153,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,4,same_class,1,0,0,1,0,0,"['20', '24', '28', '32']","['lambda x: x * 2 + 4', 'lambda x: (x + 2) * 2', 'lambda x: (x * 2) + 4', 'lambda x: (x + 4) * 2']",237.0
1154,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['24', '26', '28', '30']","['lambda x: (4 * x) + 10', 'lambda x: (x * 4) + 10', 'lambda x: (x * 2) + (2 * x) + 10']",238.0
1155,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['30', '34', '38', '42']","['lambda x: (4 * x) + 10', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) ** 0 + 14']",239.0
1156,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,same_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) * 0', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) * 3']",240.0
1157,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,same_class,1,0,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', 'etc.']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) + 0', 'lambda x: (2 * x) ** 2']",241.0
1158,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: 4 * x', 'lambda x: (2 * x) + 0', 'lambda x: (4 * x) - 0', 'lambda x: (1 * x) + 4']",242.0
1159,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,same_class,0,0,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) | 0', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) - 0', 'lambda x: (4 * x) * 0', 'lambda x: (4 * x) / 0']",243.0
1160,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (2 * x) | 0', 'lambda x: (4 * x) | 0', 'lambda x: (1 * x) | 4', 'lambda x: (2 * x) | 2']",244.0
1161,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 2', 'lambda x: (4 * x) % (4+1)', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) ** 3', 'lambda x: (4 * x) ** 4']",245.0
1162,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,same_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) * 0.5']",246.0
1163,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,same_class,1,1,2,0,2,0,"['20', '24', '28', '32']","['lambda x: (4 * x) * 1', 'lambda x: (2 * x) * 2', 'lambda x: (x * 4) % (3+1)']",247.0
1164,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,same_class,1,0,2,1,1,1,"['20', '24', '28', '32']","['lambda x: (2 * x) * 2', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 0']",248.0
1165,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,1,1,"['20', '24', '28', '32']","['lambda x: (4 * x) | 0', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) % (4+1)']",249.0
1166,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,same_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 12', 'lambda x: (4 * x) + 16']",250.0
1167,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (x * 4) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 4']",251.0
1168,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,same_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x + 4) * 4']",252.0
1169,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['24', '32', '40', '48']","['lambda x: (x * 4) + 8', 'lambda x: (x * 4) + 4 * 2', 'lambda x: (x * 4) + 4 * (x - 1)']",253.0
1170,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,same_class,0,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * (x + 3)', 'lambda x: 4 * x + 12', 'lambda x: (x * 4) + 12']",254.0
1171,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * x + 8', 'lambda x: 4 * (x + 3)']",255.0
1172,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * x + 8', 'lambda x: 4 * (x - 2) + 12', 'lambda x: (x * 4) % (5+1) + 12']",256.0
1173,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,same_class,1,0,2,0,0,0,"['28', '32', '36']","['lambda x: (x * 4) + 8', 'lambda x: (x * 2) + 10', 'lambda x: (x * 5) - 2']",257.0
1174,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: 4 * x + 12', 'lambda x: 4 * (x - 1) + 12', 'lambda x: 4 * (x - 2) + 12', 'lambda x: 4 * (x - 3) + 12']",258.0
1175,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,same_class,1,1,2,0,0,0,"['24', '30', '36']","['lambda x: (2 * x) | 0', 'lambda x: (3 * x) | 0', 'lambda x: (4 * x) | 0', 'lambda x: (5 * x) | 0', 'lambda x: (6 * x) | 0']",259.0
1176,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,same_class,1,1,0,0,0,0,['24\\30\\36\\42\\48\\54\\60'],"['lambda x: (3 * x) ** 2', 'lambda x: (6 * x) ** 1', 'lambda x: (2 * x) ** 3']",260.0
1177,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,same_class,0,1,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (x * 6)', 'lambda x: (x * 3) * 2', 'lambda x: (x * 4) + 2']",261.0
1178,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,same_class,1,1,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) | 0', 'lambda x: (2 * x + 4) | 0', 'lambda x: (3 * x + 3) | 0', 'lambda x: (4 * x + 2) | 0']",262.0
1179,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,same_class,1,0,2,0,0,0,"['36', '42', '48', '54']","['lambda x: 6 * (x + 1)', 'lambda x: (x * 3) + 6', 'lambda x: (x * 4) + 6']",263.0
1180,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (x * 6) % (4+1)', 'lambda x: (x * 3) * 2', 'lambda x: (x * 2) * 6 + 6']",264.0
1181,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,same_class,1,1,2,0,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4']",265.0
1182,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,same_class,0,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: 2 * x', 'lambda x: (x * 4) % (1+1) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x + 2) * 2']",266.0
1183,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,same_class,1,1,2,0,1,0,"['10', '12', '14', '16']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) | 0']",267.0
1184,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28']","['lambda x: (x * 2)', 'lambda x: (x + 2)', 'lambda x: (2 * x)']",268.0
1185,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6']",269.0
1186,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,same_class,0,0,2,1,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) / 2', 'lambda x: (x * 2) + 4']",270.0
1187,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,same_class,1,0,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) % (2+2)', 'lambda x: [i for i in range(100) if i % (2 + 2) or i % (3 + 2)][x]', 'lambda x: 4 ** (1 * x)']",271.0
1188,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,same_class,1,0,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) + 4']",272.0
1189,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (x * 2) + 2', 'lambda x: (x * 2) | 2', 'lambda x: (x * 2) % (2+1)']",273.0
1190,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['12', '14', '16']","['lambda x: (x * 2) + 2', 'lambda x: (x * 2) + 4', 'lambda x: (x * 2) + 6', 'lambda x: (x * 2) + 8']",274.0
1191,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) / 2']",275.0
1192,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,same_class,0,1,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (x + 6) * 2']",276.0
1193,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,same_class,1,0,2,2,0,1,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 2) + 6', 'lambda x: (x * 4) - 2']",277.0
1194,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,same_class,0,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * (x + 3)) - 2', 'lambda x: (2 * (x - 1)) + 6']",278.0
1195,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) / 2', 'lambda x: (x ** 2) / 2', 'lambda x: (x ** 2) - 2']",279.0
1196,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,same_class,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x + 6) * 2']",280.0
1197,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 2) + 4', 'lambda x: (x + 2) * 4', 'lambda x: (4 * x) - 2']",281.0
1198,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,same_class,1,1,2,0,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) - 0', 'lambda x: (2 * x) ** 0']",282.0
1199,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) | 0', 'lambda x: 2 ** (1 * x)']",283.0
1200,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: (x + 1) * 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) - 2']",284.0
1201,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: (x * 2) % (0+1)', 'lambda x: (x * 2) + 0']",285.0
1202,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,4,same_class,1,0,2,0,0,0,"['128', '256', '512']","['lambda x: (2 ** x)', 'lambda x: (4 ** (x-1))', 'lambda x: (x * 4) % (3+1)']",286.0
1203,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,4,same_class,0,1,2,0,0,0,"['128', '256', '512']","['lambda x: 4**x', 'lambda x: 2**(2*x)', 'lambda x: (2**x) * 4', 'lambda x: (4**(x-1)) * 4']",287.0
1204,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,4,same_class,1,1,2,0,0,0,"['2048', '4096', '8192']","['lambda x: 2 ** (4 * x)', 'lambda x: 4 ** (4 * x)']",288.0
1205,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,4,same_class,0,1,0,0,0,0,"['17', '21', '25']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) - 1']",289.0
1206,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,same_class,0,0,0,0,0,0,"['17', '21', '25']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1', 'lambda x: (x * 5) - 2']",290.0
1207,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,same_class,0,0,0,0,0,0,"['17', '21', '25']","['lambda x: 4 * x + 1', 'lambda x: 2 * x + 3', 'lambda x: x + 4']",291.0
1208,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['17', '21', '25', '29']","['lambda x: (x * 4) + 1', 'lambda x: (x ** 2) + 1', 'lambda x: (x * 2) + 3']",292.0
1209,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['17', '21', '25', '29']","['lambda x: (x * 4) + 1', 'lambda x: (x * 4) - 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) - 1']",293.0
1210,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['21', '25', '29', '33']","['lambda x: (x * 4) + 1', 'lambda x: (x * 4) + 5', 'lambda x: (x ** 2) + 1', 'lambda x: (x ** 2) + 5']",294.0
1211,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,same_class,1,0,2,0,1,0,"['25', '29', '33', '37']","['lambda x: (2 * x) + 7', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 5']",295.0
1212,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,same_class,1,1,2,0,0,0,"['27', '29', '31']","['lambda x: (4 * x) + 9', 'lambda x: (4 * (x - 1)) + 13']",296.0
1213,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,same_class,1,1,0,0,0,0,"['27', '31', '35']","['lambda x: (4 * x) + 9', 'lambda x: (4 * x) | 13', 'lambda x: (4 * x) ^ 17']",297.0
1214,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,4,same_class,1,0,2,0,0,0,"['0', '1']","['lambda x: (1 * x) % 2', 'lambda x: (2 * x) % 3', 'lambda x: (3 * x) % 4', 'lambda x: (4 * x) % 5', 'lambda x: (5 * x) % 6', 'lambda x: (6 * x) % 7', 'lambda x: (7 * x) % 8', 'lambda x: (8 * x) % 9', 'lambda x: (9 * x) % 10']",298.0
1215,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,4,same_class,0,0,2,1,0,0,"['0', '1']","['lambda x: (x % 2)', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) | 1']",299.0
1216,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,same_class,1,0,2,0,0,0,"['23', '27', '31', '35']","['lambda x: 4 * x + 3', 'lambda x: 4 * (x + 3)', 'lambda x: (x + 3) * 4', 'lambda x: 4 * x + 7']",300.0
1217,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,same_class,1,0,0,0,0,0,"['21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97']","['lambda x: (x * 4) + 3', 'lambda x: (x * 4) - 2', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) - 4']",301.0
1218,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,same_class,1,0,2,0,0,0,"['27', '31', '35', '39']","['lambda x: 4 * x + 7', 'lambda x: 4 * (x - 1) + 11', 'lambda x: 4 * (x - 2) + 15', 'lambda x: 4 * (x - 3) + 19']",302.0
1219,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,same_class,1,0,2,0,1,0,"['29', '31', '33', '35', '37', '39']","['lambda x: (4 * x) + 3', 'lambda x: (x * 4) + 3', 'lambda x: (x * 4) + 15']",303.0
1220,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,same_class,1,1,2,0,1,1,"['31', '35', '39', '43']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) ** 0', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) ** 3']",304.0
1221,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,random,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: x * 2', 'lambda x: x * 3 - 1', 'lambda x: x * 4 - 3']",305.0
1222,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,random,0,1,2,0,1,0,"['5', '6', '7', '8', '9', '10']","['lambda x: (1 * x) | 0', 'lambda x: (x + 1) % 5', 'lambda x: (x * 2) - 1', 'lambda x: (x * 4) - 3']",306.0
1223,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,random,0,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: 2 * x - 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3', 'lambda x: (x * 5) - 4']",307.0
1224,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",308.0
1225,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,random,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 0', 'lambda x: x + 1', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1']",309.0
1226,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,random,1,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3']",310.0
1227,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,4,random,0,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) % (5+1)', 'lambda x: (x * 1) + (0+1)', 'lambda x: (x * 1) + 1']",311.0
1228,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,random,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) + 0', 'lambda x: (x * 4) - 1']",312.0
1229,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,random,0,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 4) - 3']",313.0
1230,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,random,0,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3']",314.0
1231,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 ** x', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",315.0
1232,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,random,1,1,2,1,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) * 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) * 0.5', 'lambda x: (4 * x) * 0.25']",316.0
1233,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,random,0,0,1,0,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: (x * 1) % (0+1)', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 2) % (0+1)', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 3) % (0+1)', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 4) % (0+1)', 'lambda x: (x * 4) % (3+1)']",317.0
1234,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,random,0,0,2,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) * 4', 'lambda x: (4 * x) ** 1', '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 0)']",318.0
1235,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,random,1,0,2,3,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) + 0']",319.0
1236,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,random,1,1,2,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 0']",320.0
1237,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,4,random,0,1,1,2,1,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) ** 1', 'lambda x: (x * 1) + 0', 'lambda x: (x * 0) + 1', 'lambda x: (x * -1) + 2', 'lambda x: (x * -2) + 3']",321.0
1238,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,random,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 * x - 2', 'lambda x: (x ** 2 - x) / 2 + 1']",322.0
1239,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,random,0,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: (2 * x) + 1', 'lambda x: (x + 2) ** 1', 'lambda x: (x * 2) + 2']",323.0
1240,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,random,1,0,0,1,0,0,"['7', '9', '11', '13', '15']","['lambda x: (x + 1)', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) - 1', 'lambda x: (x * 1) + (1 * 2)', 'lambda x: (x * 1) + (2 * 1)', 'lambda x: (x * 1) + (1 * 3)', 'lambda x: (x * 1) + (3 * 1)', 'lambda x: (x * 1) + (1 * 4)', 'lambda x: (x * 1) + (4 * 1)', 'lambda x: (x * 1) + (1 * 5)', 'lambda x: (x * 1) + (5 * 1)']",324.0
1241,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,random,0,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: x + 0', 'lambda x: x + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) - 1']",325.0
1242,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,random,0,1,0,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 * x', 'lambda x: (2 * x) - 1']",326.0
1243,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,random,1,0,2,1,1,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) ** 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]']",327.0
1244,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,random,1,1,2,0,1,0,"['6', '7', '8', '9', '10']","['lambda x: x + 2', 'lambda x: (x * 1) % (3 + 1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",328.0
1245,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,random,0,0,0,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: 2 + (1 * x)', 'lambda x: 2 + (x * 1)', 'lambda x: 2 + (x ** 0)']",329.0
1246,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,random,1,0,0,1,0,0,"['7', '9', '11', '13', '15']","['lambda x: x + 2', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 1 + 1', 'lambda x: (x * 2) - 1']",330.0
1247,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,4,random,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1']",331.0
1248,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,4,random,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 3', 'lambda x: 3 + (x * 1)']",332.0
1249,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,random,1,0,2,0,0,0,"['7', '9', '11', '13']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 + (x - 1)']",333.0
1250,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,random,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x + 3)', 'lambda x: (2 * x) + 1']",334.0
1251,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,random,1,1,2,1,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) - 2']",335.0
1252,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,random,0,0,2,0,0,0,"['7', '8', '9']","['lambda x: x + 3', 'lambda x: (x * 2) - 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1']",336.0
1253,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,random,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 + (x - 1)', 'lambda x: (x * 1) + 3 + (x - 2)', 'lambda x: (x * 1) + 3 + (x - 3)']",337.0
1254,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,4,random,0,0,2,1,0,0,"['7', '8', '9']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: (x + 2)']",338.0
1255,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,random,1,1,2,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: (1 * x) | 3', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]']",339.0
1256,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,4,random,1,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 4) % (1+1)']",340.0
1257,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,random,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: x * 3', 'lambda x: (x * 4) % (2+1) + 3', 'lambda x: (x * 2) * 3']",341.0
1258,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,random,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 0']",342.0
1259,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,random,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (x * 3) + 0', 'lambda x: (x ** 1) * 3']",343.0
1260,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,random,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: (3 * x) | 0', 'lambda x: (3 * x) * 0', 'lambda x: (3 * x) ** 0', 'lambda x: (3 * x) + 0']",344.0
1261,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,random,1,0,2,0,0,0,"['12', '15', '18', '21']","['lambda x: 3 * x', 'lambda x: (x * 3) + 0', 'lambda x: (x * 2) + 1', 'lambda x: (x * 1) + 3']",345.0
1262,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,random,1,1,2,0,0,0,"['15', '18', '21', '24']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (1 * x) ** 2 + 3']",346.0
1263,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,random,1,1,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) | 0', 'lambda x: (x * 3) % (0+1)', 'lambda x: (x * 3) + 3']",347.0
1264,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,random,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) ** 1', 'lambda x: (3 * x) % (4+1)']",348.0
1265,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,random,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * (x - 1)) + 6']",349.0
1266,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,random,0,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (4 * x) + 2', 'lambda x: (5 * x) - 1']",350.0
1267,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,random,0,0,2,1,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 6', 'lambda x: (x * (x + 1)) + 6', 'lambda x: (x * (x + 3)) | 6']",351.0
1268,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,4,random,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: x + 3', 'lambda x: (x * 1) + 6']",352.0
1269,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,4,random,1,0,0,0,0,0,"['20', '22', '24', '26']","['lambda x: 3 * x + 6', 'lambda x: 3 * (x + 3)']",353.0
1270,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,4,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (6 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (9 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (12 + 1)][x]', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (15 + 1)][x]', 'lambda x: [i for i in range(100) if i % (7 + 1) or i % (18 + 1)][x]']",354.0
1271,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,4,random,0,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) * 3', 'lambda x: (3 * x) - 3']",355.0
1272,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,4,random,0,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) - 3']",356.0
1273,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,4,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x + 6', 'lambda x: (x + 1) * 3', 'lambda x: (x + 3) * 3', 'lambda x: (x + 6) * 3']",357.0
1274,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,4,random,1,1,2,0,0,0,"['8', '9', '10']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)']",358.0
1275,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,4,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) | 4', 'lambda x: (1 * x) - 3', 'lambda x: (1 * x) * 4', 'lambda x: (1 * x) / 4']",359.0
1276,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,4,random,1,1,2,0,0,0,"['8', '9', '10']","['lambda x: (x + 1)', 'lambda x: (x + 4) - 3', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 3']",360.0
1277,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,4,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",361.0
1278,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,4,random,0,0,2,3,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 3 + 1', 'lambda x: (1 * x) + 2 + 2', 'lambda x: (1 * x) + 1 + 3']",362.0
1279,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,random,1,0,0,0,0,0,"['9', '10', '11', '12']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)']",363.0
1280,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,4,random,1,1,2,0,0,0,"['8', '9', '10', '11']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)', 'lambda x: 4 + (x * (1 + 0))', 'lambda x: 4 + (x * (2 - 1))']",364.0
1281,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,4,random,1,0,2,0,0,0,"['8', '9', '10']","['lambda x: x + 4', 'lambda x: 4 + (x * 1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",365.0
1282,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,4,random,1,0,2,2,0,0,"['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']","['lambda x: x % 3', 'lambda x: (x // 3) % 2', 'lambda x: (x // 6) % 2']",366.0
1283,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,4,random,1,1,2,1,0,0,"['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x % 3', 'lambda x: (x + 1) % 3', 'lambda x: (x + 2) % 3', 'lambda x: (x + 3) % 3']",367.0
1284,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,4,random,1,0,2,0,0,0,"['10', '12', '14', '16']","['lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 2', 'lambda x: (x * 3) + 1']",368.0
1285,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,4,random,1,0,2,1,0,0,"['9', '10', '11']","['lambda x: (x + 1) | 4', 'lambda x: (x + 3) | 4', 'lambda x: (2 * x) | 4', 'lambda x: (3 * x) | 4']",369.0
1286,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,4,random,0,0,2,1,0,0,"['9', '10', '11', '12']","['lambda x: x + 4', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 3']",370.0
1287,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,random,1,1,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 2']",371.0
1288,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,random,1,0,2,0,0,0,"['9', '11', '13', '15']","['lambda x: 2 * x + 1', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 2) + 1']",372.0
1289,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,random,1,0,2,0,0,0,"['9', '11', '13', '15', '17']","['lambda x: 2 * x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]']",373.0
1290,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,random,1,0,2,1,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % 2 or i % 2][x]', 'lambda x: (4 * x) - 3']",374.0
1291,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,random,0,0,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) - 1']",375.0
1292,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,random,1,0,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 3']",376.0
1293,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,random,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (x * 4) - 1', 'lambda x: (x * 2) + 1']",377.0
1294,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,random,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * (x - 1)) + 3', 'lambda x: (2 * (x - 2)) + 5']",378.0
1295,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,random,1,1,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (1 + 1)][x]', 'lambda x: [i for i in range(100) if i % (8 + 1) or i % (1 + 1)][x]']",379.0
1296,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,4,random,1,1,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (2 * (x + 1)) + 1', 'lambda x: (2 * (x - 1)) + 9']",380.0
1297,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,random,1,1,2,0,0,0,"['13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 5', 'lambda x: (2 * (x + 1)) + 3']",381.0
1298,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,4,random,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 3']",382.0
1299,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,4,random,1,1,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) + 3', 'lambda x: (2 ** x) + 5']",383.0
1300,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,4,random,1,1,2,0,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 7', 'lambda x: (x * 2) + 5', 'lambda x: (x * 2) + 7']",384.0
1301,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,4,random,1,1,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (x * 4) - 3', 'lambda x: (x * 2) + 1']",385.0
1302,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,4,random,1,0,2,1,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 5', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 1']",386.0
1303,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,4,random,1,0,2,0,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 5', 'lambda x: (x * 1) + 5', 'lambda x: (x * 0) + 5', 'lambda x: (x * 2) + 3']",387.0
1304,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,random,1,0,2,0,1,0,"['22', '26', '30']","['lambda x: (4 * x) + 2', 'lambda x: (4 * x) ** 1', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) ** 2']",388.0
1305,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,4,random,1,1,0,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) + 2', 'lambda x: (4 * x) + 6', 'lambda x: (4 * x) + 10', 'lambda x: (4 * x) + 14']",389.0
1306,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,random,1,0,2,0,1,0,"['24', '26', '28', '30']","['lambda x: (2 * x) + 8', 'lambda x: (4 * x) + 6', 'lambda x: (4 * x) + 2']",390.0
1307,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,4,random,1,0,2,0,0,0,"['30', '34', '38', '42']","['lambda x: 4 * x + 10', 'lambda x: 4 * (x + 2) + 6', 'lambda x: 4 * (x - 1) + 14', 'lambda x: 4 * (x - 3) + 18']",391.0
1308,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x)', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) * 4', 'lambda x: (1 * x) + 4']",392.0
1309,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) + 0', 'lambda x: (x * 4) + 0', 'lambda x: (x * 2) + 0', 'lambda x: (x * 1) + 0']",393.0
1310,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,random,0,1,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) | 0', 'lambda x: (2 * x) + 4', 'lambda x: (1 * x) * 4']",394.0
1311,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (x * 4)', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) - 4', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4) - 8', 'lambda x: (x * 4) + 8', 'lambda x: (x * 4) - 12', 'lambda x: (x * 4) + 12']",395.0
1312,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (x * 4)', 'lambda x: (x + 4) * 2', 'lambda x: (x * 2) + (x * 2)']",396.0
1313,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,random,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) | 4']",397.0
1314,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,random,1,0,2,1,0,0,"['18', '20', '24', '28']","['lambda x: 4 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]']",398.0
1315,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,random,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (x * 4)', 'lambda x: 4 + (x * 4)', 'lambda x: 4 * (x + 1)']",399.0
1316,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,random,1,1,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x)', 'lambda x: (2 * x) * 4', 'lambda x: (x + 4) * 4']",400.0
1317,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,random,0,0,2,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) + 2', 'lambda x: (4 * x) - 4', 'lambda x: (2 * x) * 2']",401.0
1318,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,random,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: 4 * x', 'lambda x: (x + 4) * 2', 'lambda x: (2 * x) + 8']",402.0
1319,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,random,1,1,2,0,1,0,"['24', '28', '32', '36', '40']","['lambda x: (2 * x) * 4', 'lambda x: (4 * x) * 1', 'lambda x: (5 * x) - 4']",403.0
1320,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,random,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 4', 'lambda x: (x * 4) + 8', 'lambda x: (x * 5) - 2']",404.0
1321,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,random,1,1,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 0', 'lambda x: (2 * x) ** 2', 'lambda x: (1 * x) | 3']",405.0
1322,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,4,random,0,0,2,1,1,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 12', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) | 12', 'lambda x: (4 * x) & 12']",406.0
1323,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,4,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (x * 4) + 8', 'lambda x: (x + 4) ** 2', 'lambda x: (x * 4) ** 2', 'lambda x: (x + 4) * 4']",407.0
1324,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,4,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) | 12', 'lambda x: (x * 4) % (5+1)']",408.0
1325,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,4,random,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (x * 4) + 0', 'lambda x: (x * 4) + 12', 'lambda x: (x * 4) % (4+1)']",409.0
1326,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,4,random,1,0,2,0,0,0,"['28', '32', '36', '40', '44', '48']","['lambda x: 4 * x', 'lambda x: x + 4', 'lambda x: (x * 4) + 8']",410.0
1327,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,random,1,1,2,0,1,0,"['24', '30', '36']","['lambda x: (3 * x) * 2', 'lambda x: (x * 6) % (0+1)', 'lambda x: (x * 3) + 0']",411.0
1328,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,random,1,1,2,1,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: (3 * x) + 0', 'lambda x: (6 * x) + 0', 'lambda x: (2 * x) + 0', 'lambda x: (4 * x) + 0']",412.0
1329,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,random,0,0,2,1,2,1,"['30', '36', '42', '48']","['lambda x: (6 * x)', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3']",413.0
1330,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,random,0,0,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) * 0', 'lambda x: (6 * x) * 1', 'lambda x: (6 * x) * 2', 'lambda x: (6 * x) * 3']",414.0
1331,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,4,random,1,1,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (x * 6) % (12+1)', 'lambda x: (x * 3) % (12+1)', 'lambda x: (x * 2) % (12+1)', 'lambda x: (x * 1) % (12+1)']",415.0
1332,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,4,random,1,1,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (6 * x) + 6', 'lambda x: (6 * x) + 12', 'lambda x: (6 * x) + 18', 'lambda x: (6 * x) + 24']",416.0
1333,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,random,0,0,2,3,2,1,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) | 0']",417.0
1334,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,random,0,1,2,0,2,0,"['10', '12', '14', '16']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) ** 1']",418.0
1335,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,random,1,1,2,0,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) ** 1']",419.0
1336,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,random,1,0,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50']","['lambda x: 2 * (1 * x)', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'lambda x: 4 * (1 * x)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",420.0
1337,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,random,1,1,2,0,2,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: 2 ** (1 * x)']",421.0
1338,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,random,1,1,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: 2 * x + 2', 'lambda x: (x + 2) * 2', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 1']",422.0
1339,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,random,1,1,2,0,1,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x + 4) * 2', 'lambda x: (x * 2) + 4', 'lambda x: (x * 4) + 2']",423.0
1340,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,random,0,0,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (1 * x) * 2', 'lambda x: (4 * x) - 2']",424.0
1341,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,random,1,0,2,0,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) / 2', 'lambda x: (x * 8) / 4']",425.0
1342,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,random,1,1,2,1,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (x + 2) * 2', 'lambda x: (x * 2) + 2']",426.0
1343,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,random,1,0,2,0,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (x + 2) * 2', 'lambda x: (x + 4) * 2']",427.0
1344,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,random,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) / 2', 'lambda x: (6 * x) ** 0']",428.0
1345,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,4,random,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: 2 * x + 4', 'lambda x: x + 2 * (x - 1)']",429.0
1346,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,4,random,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: 2 * x + 4', 'lambda x: 4 * (x + 1)']",430.0
1347,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,random,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) | 6', 'lambda x: (2 * x) & 8', 'lambda x: (2 * x) ^ 10']",431.0
1348,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,random,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) / 2', 'lambda x: (6 * x) / 3']",432.0
1349,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,random,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 8', 'lambda x: (2 * x) + 10']",433.0
1350,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,4,random,1,0,2,2,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', 'etc.']","['lambda x: (2 * x)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]']",434.0
1351,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,4,random,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: x + (2 * 0)', 'lambda x: (2 * x) + 0']",435.0
1352,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,4,random,1,1,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x)', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) + 0']",436.0
1353,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,4,random,1,0,2,1,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: 2 * x', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) + 2']",437.0
1354,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,4,random,1,0,2,0,1,0,"['128', '256', '512']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (x - 1)', 'lambda x: 4 ** (2 * x - 1)']",438.0
1355,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,4,random,1,1,2,0,2,0,"['128', '256', '512']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (1 * x)', 'lambda x: (2 * x) | 1']",439.0
1356,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,4,random,0,0,2,1,0,0,"['2048', '4096', '8192', '16384']","['lambda x: 2 ** (4 * x)', 'lambda x: 4 ** (2 * x)', 'lambda x: 16 * (x ** 2)']",440.0
1357,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,4,random,0,0,0,0,0,0,"['17', '21', '25', '29']","['lambda x: (x * 4) + 1', 'lambda x: (x * 4) - 2', 'lambda x: (x * 4) + 3', 'lambda x: (x * 4) - 4']",441.0
1358,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,random,0,0,1,0,0,0,"['17', '19', '21', '23', '25', '27', '29', '31']","['lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1']",442.0
1359,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,random,1,1,0,0,0,0,"['17', '21', '25']","['lambda x: (x * 4) + 3', 'lambda x: (x * 4) - 1', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) - 3']",443.0
1360,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,random,1,1,2,0,2,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) | 1', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1']",444.0
1361,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,random,1,1,2,0,1,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 0']",445.0
1362,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,random,1,1,0,0,1,0,"['19', '23', '27', '31']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 5', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) + 5']",446.0
1363,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,random,1,0,0,0,0,0,"['23', '27', '31']","['lambda x: (4 * x) + 5', 'lambda x: (x * 5) - 2', 'lambda x: (x * 4) + 1']",447.0
1364,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,4,random,1,0,2,0,0,0,"['27', '29', '31', '33']","['lambda x: 4 * x + 9', 'lambda x: 4 * x + 5', 'lambda x: 4 * x + 1', 'lambda x: 4 * x - 3']",448.0
1365,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,4,random,1,0,0,0,0,0,"['27', '31', '35']","['lambda x: (x * 4) + 9', 'lambda x: (x * 4) + 13', 'lambda x: (x * 4) + 17', 'lambda x: (x * 4) + 21']",449.0
1366,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,4,random,1,0,0,0,0,0,['0\\1\\0\\1'],"['lambda x: x % 2', 'lambda x: (x // 2) % 2', 'lambda x: (x + 1) % 2', 'lambda x: (x + 2) % 2']",450.0
1367,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,4,random,1,1,2,2,0,0,"['1', '0', '2', '-1']","['lambda x: x % 2', 'lambda x: (x // 2) % 2', 'lambda x: (x + 1) % 2', 'lambda x: (x + 2) % 2']",451.0
1368,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,random,1,1,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) + 3']",452.0
1369,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,random,1,0,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (x ** 2) + 5', 'lambda x: (2 * x) + 5']",453.0
1370,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,random,1,1,2,0,0,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 19']",454.0
1371,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,4,random,1,0,2,0,0,0,"['31', '35', '39', '43']","['lambda x: 4 * x + 11', 'lambda x: 4 * x + 15', 'lambda x: 4 * (x - 1) + 15']",455.0
1372,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,4,random,1,0,2,0,0,0,"['29', '31', '33', '35']","['lambda x: (4 * x) + 15', 'lambda x: (4 * x) | 11', 'lambda x: (4 * x) ^ 11']",456.0
1373,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,random,1,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) / 3']",
1374,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,random,0,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) * 2', 'lambda x: (3 * x) * 1', 'lambda x: (3 * x) * 2', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) * 2']",
1375,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'lambda x: (1 * x) + 1']",
1376,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,random,0,1,2,1,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3', 'lambda x: (5 * x) - 4']",
1377,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,random,1,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3']",
1378,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,random,1,1,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) * 1', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3']",
1379,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,8,random,0,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) ** 0', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) - 1']",
1380,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,random,1,0,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 4) % (3+1)']",
1381,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,random,0,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3']",
1382,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,random,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: 2 ** (x - 1)', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
1383,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,random,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (x + 1) % (1+1)', 'lambda x: (x * 1) | 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) * 1', 'lambda x: (x * 2) % (1+1)', 'lambda x: (x * 3) % (1+1)', 'lambda x: (x * 4) % (1+1)', 'lambda x: (x * 5) % (1+1)', 'lambda x: (x * 6) % (1+1)', 'lambda x: (x * 7) % (1+1)', 'lambda x: (x * 8) % (1+1)', 'lambda x: (x * 9) % (1+1)', 'lambda x: (x * 10) % (1+1)', 'lambda x: (x * 11) % (1+1)', 'lambda x: (x * 12) % (1+1)', 'lambda x: (x * 13) % (1+1)', 'lambda x: (x * 14) % (1+1)', 'lambda x: (x * 15) % (1+1)', 'lambda x: (x * 16) % (1+1)', 'lambda x: (x * 17) % (1+1)', 'lambda x: (x * 18) % (1+1)', 'lambda x: (x * 19) % (1+1)', 'lambda x: (x * 20) % (1+1)', 'lambda x: (x * 21) % (1+1)', 'lambda x: (x * 22) % (1+1)', 'lambda x: (x * 23) % (1+1)', 'lambda x: (x * 24) % (1+1)', 'lambda x: (x * 25) % (1+1)', 'lambda x: (x * 26) % (1+1)', 'lambda x: (x * 27) % (1+1)', 'lambda x: (x * 28) % (1+1)', 'lambda x: (x * 29) % (1+1)', 'lambda x: (x * 30) % (1']",
1384,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,random,1,0,2,3,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: (x * 1) + 0', 'lambda x: (x * 0) + 1', 'lambda x: (x * 1) + 0']",
1385,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,random,1,1,2,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 1) % (0+1)', 'lambda x: (2 * x) % (4+1)']",
1386,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,random,1,0,2,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x % (4+1)', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 5) % (4+1)', 'lambda x: (x * 6) % (4+1)', 'lambda x: (x * 7) % (4+1)', 'lambda x: (x * 8) % (4+1)', 'lambda x: (x * 9) % (4+1)', 'lambda x: (x * 10) % (4+1)']",
1387,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,random,1,0,2,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x', 'lambda x: (x * 1) % (4+1)', 'lambda x: (2 * x) ** 0', 'lambda x: (2 * x) | 0']",
1388,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,8,random,0,0,1,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 3']",
1389,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,random,1,1,2,1,0,0,"['6', '8', '10', '12', '14', '16', '18', '20']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) - 1', 'lambda x: (5 * x) - 3']",
1390,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,random,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) * 1', 'lambda x: (2 * x) * 1', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) * 1', 'lambda x: (5 * x) * 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 1', 'lambda x: (5 * x) + 1']",
1391,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,random,1,1,2,1,1,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (2 + 1)][x]']",
1392,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,random,1,0,1,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: (x * 1) % (3+1)', 'lambda x: (x * 1) + 1', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) - 1']",
1393,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,random,1,0,0,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: x + 1', 'lambda x: 2 * x', 'lambda x: (x * 1) + 2']",
1394,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,random,1,0,2,1,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (2 * x) ** 2', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) ** 3', 'lambda x: (2 * x) ** 4', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) | 2', 'lambda x: (2 * x) | 3', 'lambda x: (2 * x) | 4', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]']",
1395,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,random,0,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) * 3', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) * 2', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2', 'lambda x: (3 * x) * 1']",
1396,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,random,1,1,2,1,0,0,"['6', '8', '10', '12']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (x + 2) | 1', 'lambda x: (x * 2) | 1', 'lambda x: (x * 3) | 1', 'lambda x: (x * 4) | 1']",
1397,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,random,1,1,2,0,1,0,"['6', '12', '24', '40', '80', '160', '320', '640', '1280', '2560', '5120', '10240', '20480', '40960', '81920', '163840']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4']",
1398,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,8,random,1,1,0,0,1,0,"['8', '9', '10']","['lambda x: (1 * x) + 2', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) ** 0']",
1399,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,8,random,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'lambda x: 3 + x', 'lambda x: 3 * x']",
1400,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,random,0,1,2,2,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3', 'lambda x: (5 * x) - 4']",
1401,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,random,1,0,2,3,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 3', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 3']",
1402,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,random,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 3', 'lambda x: (x * 1) + 3', 'lambda x: (x * 2) - 1']",
1403,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,random,1,0,2,2,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16']","['lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 2']",
1404,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,random,0,0,2,0,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: (x * 1) + 3']",
1405,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,8,random,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) | 2', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) - 1']",
1406,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,random,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) | 1', 'lambda x: (3 * x) | 0', 'lambda x: (4 * x) - 3']",
1407,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,8,random,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) ** 2 - 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) / 2']",
1408,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,random,1,0,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) % (3+1)', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) + 0']",
1409,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,random,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (3 * x) | 0']",
1410,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,random,1,1,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) * 1', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) - 3', 'lambda x: (3 * x) / 3']",
1411,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,random,1,1,2,1,1,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: (1 * x) * 3', 'lambda x: 3 * (x ** 2)', 'lambda x: 3 * (x + 1)']",
1412,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,random,1,1,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: 3 * x', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 0']",
1413,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,random,1,1,2,0,0,0,"['15', '18', '21', '24']","['lambda x: (1 * x) * 3', 'lambda x: (2 * x) * 3', 'lambda x: (3 * x) + 3', 'lambda x: (4 * x) + 3']",
1414,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,random,1,0,2,0,0,0,"['15', '18', '21', '24']","['lambda x: 3 * x', 'lambda x: (2 * x) + 3', 'lambda x: (x * 3) - 3', 'lambda x: (x * 4) - 6']",
1415,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,random,1,0,2,1,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) % (5+1)', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]']",
1416,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,random,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 9', 'lambda x: (3 * x) + 12']",
1417,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,random,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 2 + 3', 'lambda x: (3 * x) * 3 + 3', 'lambda x: (3 * x) * 4 + 3', 'lambda x: (3 * x) * 5 + 3', 'lambda x: (3 * x) * 6 + 3', 'lambda x: (3 * x) * 7 + 3', 'lambda x: (3 * x) * 8 + 3', 'lambda x: (3 * x) * 9 + 3', 'lambda x: (3 * x) * 10 + 3']",
1418,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,random,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 6', 'lambda x: (x * 4) + 3', 'lambda x: (x * 5) - 1']",
1419,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,random,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) * 1', 'lambda x: (3 * x) + 3', 'lambda x: (x * 5) % (3+1)']",
1420,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,8,random,1,0,2,0,1,0,"['18', '21', '24', '27']","['lambda x: (3 * x) | 0', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) * 4', 'lambda x: (3 * x) * 5']",
1421,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,8,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * x + 6', 'lambda x: (x * 3) + 3', 'lambda x: (x * 3) + 6', 'lambda x: (x + 3) * 3', 'lambda x: (x + 6) * 3']",
1422,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,8,random,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 9', 'lambda x: (1 * x) ** 2 + 7']",
1423,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,8,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) ^ 3', 'lambda x: (3 * x) % (3+1)']",
1424,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,8,random,1,1,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) * 1', 'lambda x: (3 * x) ** 2', 'lambda x: (3 * x) ** 3', 'lambda x: (3 * x) ** 4']",
1425,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,8,random,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 9']",
1426,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,8,random,1,0,2,2,0,1,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
1427,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,8,random,1,1,0,0,0,0,"['9', '11', '13']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) | 3', 'lambda x: (1 * x) ** 3', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]']",
1428,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,8,random,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 2']",
1429,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,8,random,0,1,0,0,0,0,"['9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 3 + 1', 'lambda x: (1 * x) + 3 * 1', 'lambda x: (1 * x) + 4 * 1']",
1430,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,8,random,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 3 + 1', 'lambda x: (1 * x) + 2 + 2', 'lambda x: (1 * x) + 1 + 3']",
1431,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,random,0,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 2']",
1432,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,8,random,0,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
1433,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,8,random,1,0,2,1,0,1,"['8', '9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
1434,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,8,random,1,0,2,1,1,0,"['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10']","['lambda x: x % 3', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 5) % (2+1)']",
1435,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,8,random,1,0,0,0,0,0,"['3', '0']","['lambda x: (x % 4)', 'lambda x: (x // 4) % 4', 'lambda x: (x * 4) % 4']",
1436,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,8,random,1,0,0,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25']","['lambda x: (x * 1) % (1+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 5) % (5+1)', 'lambda x: (x * 6) % (6+1)', 'lambda x: (x * 7) % (7+1)', 'lambda x: (x * 8) % (8+1)']",
1437,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,8,random,1,1,2,1,0,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 4', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) | 1']",
1438,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,8,random,1,0,1,0,0,0,"['10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) % (4+1)', 'lambda x: (x * 1) % (5+1)', 'lambda x: (x * 1) % (7+1)', 'lambda x: (x * 1) % (8+1)']",
1439,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,random,1,1,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) % (2+1)']",
1440,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,random,1,0,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (x * 4) % (3 + 1)']",
1441,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,random,1,0,2,0,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) | 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (4 * x) | 1']",
1442,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,random,1,0,2,0,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1']",
1443,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,random,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) ** 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (5 + 1)][x]']",
1444,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,random,0,1,2,0,1,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) - 5']",
1445,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,random,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1) or i % (4 + 1)][x]', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1) or i % (6 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1) or i % (5 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (5 + 1) or i % (7 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (5 + 1) or i % (6 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (6 + 1) or i % (8 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (6 + 1) or i % (7 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (7 + 1) or i % (9 + 1)][x]']",
1446,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,random,1,0,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (1 * x) * 2', 'lambda x: (2 * x) | 1', 'lambda x: (1 * x) ** 2']",
1447,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,random,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 2', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) | 1']",
1448,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,8,random,0,0,2,0,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) ^ 1', 'lambda x: (2 * x) - (-2)']",
1449,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,random,1,0,2,0,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) | 1', 'lambda x: (x * 5) % (4+1)']",
1450,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,8,random,1,1,2,0,0,0,"['13', '15', '17']","['lambda x: (2 * x) + 5', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 5) % (2+1)']",
1451,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,8,random,1,0,2,0,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 3', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 1']",
1452,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,8,random,0,1,2,1,0,0,"['15', '17', '19', '21', '23', '25', '27', '29']","['lambda x: (2 * x) + 5', 'lambda x: (x * 1) % (4+1) + 7', 'lambda x: (x * 1) % (4+1) * 2 + 7']",
1453,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,8,random,1,1,2,0,0,0,"['15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 5', 'lambda x: (1 * x) | 6', 'lambda x: (4 * x) - 3', 'lambda x: (3 * x) + 4']",
1454,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,8,random,1,0,2,1,0,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 5', 'lambda x: (2 * x) + 3', 'lambda x: (1 * x) + 4']",
1455,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,8,random,1,0,2,0,0,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x + 5) % (5+1)', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'lambda x: (1 * x) + 5']",
1456,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,random,1,0,2,0,0,0,"['22', '26', '30', '34', '38', '42', '46', '50', '54', '58', '62', '66', '70', '74', '78', '82', '86', '90', '94', '98']","['lambda x: (1 * x) * 2 + 4', 'lambda x: (2 * x) * 2 + 2', 'lambda x: (3 * x) * 2']",
1457,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,8,random,1,0,0,0,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) % (4+1)', 'lambda x: (x * 5) % (4+2)']",
1458,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,random,1,1,0,0,1,0,"['24', '28', '32', '36', '40', '44', '48', '52', '56', '60']","['lambda x: (4 * x) + 2', 'lambda x: (2 * x) + 8', 'lambda x: (x + 2) * 4', 'lambda x: (x * 4) + 2']",
1459,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,8,random,1,0,2,0,0,0,"['30', '34', '38', '42', '46', '50']","['lambda x: (4 * x) + 10', 'lambda x: (4 * x) + 6 + 8', 'lambda x: (4 * x) + 2 + 12']",
1460,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,random,1,0,2,0,1,0,"['16', '20', '24', '28', '32']","['lambda x: 4 * x', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (2 * x) * 4', 'lambda x: (4 * x) | 0']",
1461,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (1 * x) * 4', 'lambda x: 4 ** (1 * x)']",
1462,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,random,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: (x * 4) % (4+1)']",
1463,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,random,1,1,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (x * 4) % (0+1)', 'lambda x: (x * 4) % (4+1)']",
1464,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,random,1,0,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', 'etc.']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) ** 0', 'lambda x: 4 ** (1 * x)']",
1465,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,random,0,0,2,1,1,0,"['20', '24', '28', '32']","['lambda x: 4 * x', 'lambda x: (2 * x) ** 2', 'lambda x: (4 * x) + 0']",
1466,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,random,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (2 * x) * 4', 'lambda x: (4 * x) ** 1', 'lambda x: (x * 4) % (4+1)']",
1467,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,random,1,1,2,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) * 4']",
1468,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,random,1,0,2,0,0,0,"['20', '24', '28', '32', '36', '40', '44', '48', 'etc.']","['lambda x: (4 * x) ** 1', 'lambda x: (2 * x) ** 2', 'lambda x: (1 * x) ** 4']",
1469,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,random,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (2 * x) * 2', 'lambda x: (1 * x) * 4', 'lambda x: (3 * x) * 2', 'lambda x: (4 * x) * 1']",
1470,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,random,0,1,2,1,0,0,"['24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) ^ 4', 'lambda x: (4 * x) & 4']",
1471,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,random,1,1,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (2 * x) + 6', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 2', 'lambda x: (5 * x) - 4']",
1472,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,random,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 4', 'lambda x: (x * 5) % (4 + 1)', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4) + 8']",
1473,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,random,1,0,2,0,1,0,"['24', '28', '32', '36', '40', '44', '48']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) - 4']",
1474,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,8,random,1,0,2,0,0,0,"['28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) - 4']",
1475,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,8,random,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (x * 5) % (2+1)']",
1476,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,8,random,1,0,2,1,0,0,"['28', '32', '36', '40']","['lambda x: (x * 4) + 12', 'lambda x: (x * 4) + 8', 'lambda x: (x * 4) + 4', 'lambda x: (x * 4)']",
1477,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,8,random,0,0,2,0,2,0,"['28', '32', '36']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 4', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) % 4', 'lambda x: (4 * x) ^ 4']",
1478,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,8,random,1,0,2,0,1,0,"['28', '32', '36', '40']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) * 1']",
1479,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,random,0,1,2,0,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: (x * 6) % (4+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 1) % (4+1)']",
1480,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,random,1,0,2,0,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: (6 * x) % (2+1)', 'lambda x: (6 * x) % (3+1)', 'lambda x: (6 * x) % (4+1)', 'lambda x: (6 * x) % (5+1)', 'lambda x: (6 * x) % (6+1)', 'lambda x: (6 * x) % (7+1)', 'lambda x: (6 * x) % (8+1)', 'lambda x: (6 * x) % (9+1)', 'lambda x: (6 * x) % (10+1)']",
1481,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,random,1,0,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) ** 1', 'lambda x: (3 * x) ** 2', 'lambda x: (2 * x) ** 3', 'lambda x: (1 * x) ** 4']",
1482,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,random,1,0,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) | 0', 'lambda x: (3 * x) | 6', 'lambda x: (2 * x) | 6', 'lambda x: (1 * x) | 6']",
1483,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,8,random,1,0,2,1,0,0,"['36', '42', '48', '54', '60']","['lambda x: (6 * x) + 6', 'lambda x: (6 * x) | 0', 'lambda x: (x * 3) % (12+1)']",
1484,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,8,random,0,1,2,0,2,0,"['36', '42', '48', '54']","['lambda x: (2 * x) * 3', 'lambda x: (3 * x) * 2', 'lambda x: (6 * x) * 1']",
1485,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,random,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) ** 2']",
1486,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,random,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) ** 1', 'lambda x: (1 * x) ** 2', 'lambda x: (1 * x) + 2']",
1487,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,random,1,1,2,1,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) % (4+1)']",
1488,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,random,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (2 * x) ** 1', 'lambda x: (2 * x) | 0']",
1489,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,random,1,0,2,0,0,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6']",
1490,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,random,1,0,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 4) + 2', 'lambda x: (x * 2) + 4', 'lambda x: (x * 5) - 2']",
1491,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,random,1,0,2,0,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 4', 'lambda x: (x * 4) + 2', 'lambda x: (x * 5) - 2']",
1492,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,random,1,0,2,1,0,1,"['12', '14', '16', '18']","['lambda x: (2 * x) * 2', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) | 2', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]']",
1493,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,random,0,1,2,0,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: 4 + (2 * x)']",
1494,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,random,1,0,2,1,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) | 4', 'lambda x: (2 * x) % (4+1)']",
1495,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,random,1,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: 2 * x + 2', 'lambda x: (2 * x) + 2', 'lambda x: x + 4']",
1496,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,random,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: 2 * (x + 3)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) ** 2 + 2']",
1497,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,8,random,0,1,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) | 6', 'lambda x: (6 * x) | 0']",
1498,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,8,random,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 4) + 2', 'lambda x: (x * 2) + 6']",
1499,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,random,1,1,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 4) + 2', 'lambda x: (x * 2) + 6']",
1500,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,random,1,1,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 8', 'lambda x: (2 * x) + 10']",
1501,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,random,1,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (x * 2) + 6', 'lambda x: (x * 4) + 2', 'lambda x: (x * 6) + 0']",
1502,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,8,random,1,1,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) * 1', 'lambda x: (1 * x) ** 2', 'lambda x: (x * 5) % (4+1)']",
1503,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,8,random,1,0,2,0,1,0,"['8', '10', '12']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) % (2+1)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) | 0']",
1504,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,8,random,1,1,2,2,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: 2 * x', 'lambda x: (x * 4) % (3+1)', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]']",
1505,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,8,random,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: [i for i in range(100) if i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]']",
1506,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,8,random,1,0,2,0,0,0,"['128', '256', '512', '1024']","['lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** (1 + 1)', 'lambda x: (4 * x) ** (2 + 1)', 'lambda x: (4 * x) ** (3 + 1)']",
1507,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,8,random,1,1,2,0,0,0,"['256', '1024', '4096']","['lambda x: 1 ** (2 * x)', 'lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** 2', 'lambda x: (8 * x) ** 2']",
1508,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,8,random,0,0,2,0,0,0,"['2048', '4096', '8192']","['lambda x: 2 ** (4 * x)', 'lambda x: 4 ** (4 * x)', 'lambda x: 4 ** (x + 4)', 'lambda x: 2 ** (x + 4)']",
1509,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,8,random,0,1,0,0,1,0,"['17', '21', '25']","['lambda x: (4 * x) | 3', 'lambda x: (1 * x) + 2', 'lambda x: (5 * x) - 2']",
1510,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,random,0,0,1,0,0,0,"['19', '23', '27', '31']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 4']",
1511,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,random,1,0,0,0,0,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 2', 'lambda x: (4 * x) - 1']",
1512,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,random,1,0,2,1,0,0,"['17', '21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) - 1']",
1513,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,random,1,1,2,0,2,0,"['17', '21', '25']","['lambda x: (4 * x) | 1', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) % (4+1) + 1']",
1514,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,random,1,1,0,0,1,0,"['19', '23', '27', '31']","['lambda x: (2 * x) * 2', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 3']",
1515,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,random,1,1,2,0,0,0,"['25', '29', '33']","['lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 13', 'lambda x: (4 * x) + 17']",
1516,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,8,random,1,1,2,0,0,0,"['29', '33', '37', '41']","['lambda x: 4 * x + 9', 'lambda x: 4 * x + 5', 'lambda x: 4 * (x - 1) + 13']",
1517,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,8,random,1,1,2,0,1,0,"['27', '29', '31', '33']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 13']",
1518,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,8,random,0,0,2,0,0,0,"['0', '1']","['lambda x: x % 2', 'lambda x: (x // 2) % 2', 'lambda x: (x + 1) % 2', 'lambda x: (x * 2) % 2']",
1519,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,8,random,0,0,2,0,0,0,"['0', '1']","['lambda x: (x % 2)', 'lambda x: (x // 2) % 2', 'lambda x: (x * 2) % (2 + 1)']",
1520,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,random,1,0,0,0,1,0,"['21', '25', '29']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (3 * x) + 2', 'lambda x: (5 * x) + 1']",
1521,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,random,1,0,2,0,1,0,"['23', '27', '31']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 1', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 3']",
1522,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,random,1,0,2,0,0,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (x * 4) + 7', 'lambda x: (x * 4) + 3']",
1523,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,8,random,1,0,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 3', 'lambda x: (x * 4) + 11', 'lambda x: (x * 4) + 7']",
1524,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,8,random,1,0,2,0,0,0,"['31', '35', '39', '43']","['lambda x: (x * 4) + 11', 'lambda x: (x * 4) + 15', 'lambda x: (x * 4) + 19', 'lambda x: (x * 4) + 23']",
1525,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
1526,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) % (4+1)', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) * 1']",
1527,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) % (4+1)', 'lambda x: (x * 1) | 0', 'lambda x: (x * 1) + 0', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]']",
1528,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,exclude_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: (1 * x) | 0', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
1529,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,exclude_class,1,1,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) ** 0', 'lambda x: (2 * x) ** 1']",
1530,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 0', 'lambda x: (2 * x) - 1']",
1531,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,10,exclude_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) * 1', 'lambda x: (x * 1) + 0', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 3']",
1532,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,exclude_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) % (2+1)', 'lambda x: (x * 2) % (2+1)', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 4) % (2+1)']",
1533,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,exclude_class,0,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + (-1)', 'lambda x: (2 * x) + (-2)']",
1534,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,exclude_class,0,0,2,2,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 0) + 1', 'lambda x: (x * 2) + (-1)']",
1535,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,exclude_class,1,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) ** 1']",
1536,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,exclude_class,1,0,2,1,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 2', 'lambda x: (x * 4) - 3', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]']",
1537,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,3,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 1) % (0+1)', 'lambda x: (x * 2) % (1+1)', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 4) % (3+1)']",
1538,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,exclude_class,1,0,2,1,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 2) % (4+1)', 'lambda x: (x * 3) % (4+1)', 'lambda x: (x * 4) % (4+1)', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) | 1', 'lambda x: (4 * x) | 2', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) ** 0', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) ** 3', 'lambda x: (5 * x) | 0', 'lambda x: (5 * x) | 1', 'lambda x: (5 * x) | 2', 'lambda x: (5 * x) | 3', 'lambda x: (5 * x) ** 0', 'lambda x: (5 * x) ** 1', 'lambda x: (5 * x) ** 2', 'lambda x: (5 * x) ** 3', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]']",
1539,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,1,0,1,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 1) % (0+1)', 'lambda x: (x * 2) % (1+1)', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 4) % (3+1)']",
1540,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,exclude_class,1,1,2,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: (4 * x) * 0', 'lambda x: (3 * x) + 1']",
1541,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,10,exclude_class,0,0,1,2,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 1']",
1542,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,exclude_class,0,0,2,2,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) | 1', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) | 1', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) | 1', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) | 1', 'lambda x: (5 * x) | 0', 'lambda x: (5 * x) | 1']",
1543,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,exclude_class,1,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (2 * x) | 1', 'lambda x: (1 * x) + 1']",
1544,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
1545,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,exclude_class,0,1,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) ** 1', 'lambda x: (2 * x) ** 1', 'lambda x: (3 * x) ** 1', 'lambda x: (4 * x) ** 1', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]']",
1546,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,exclude_class,1,1,0,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) % (4+1)']",
1547,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,exclude_class,1,1,0,0,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 1 * 3', 'lambda x: (x * 1) + 2 * 2', 'lambda x: (x * 1) + 3 * 1']",
1548,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,exclude_class,1,1,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 0', 'lambda x: (3 * x) - 2', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) - 2', 'lambda x: (5 * x) - 4', 'lambda x: (5 * x) - 3']",
1549,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,exclude_class,1,1,2,2,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 2', 'lambda x: (3 * x) | 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]']",
1550,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,exclude_class,1,1,2,1,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 1', 'lambda x: (1 * x) ** 1', 'lambda x: (2 * x) ** 0']",
1551,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (3 * x) + 0', 'lambda x: (1 * x) + 3', 'lambda x: (3 * x) - 2', 'lambda x: (2 * x) + 1']",
1552,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 + (x * 1)', 'lambda x: (x * 1) + 3 + (x * 2)', 'lambda x: (x * 1) + 3 + (x * 3)']",
1553,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,exclude_class,0,0,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 3 | 1', 'lambda x: (x * 1) + 3 | 2', 'lambda x: (x * 1) + 3 | 3', 'lambda x: (x * 1) + 3 | 4']",
1554,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,1,1,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 5']",
1555,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 3', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (x * 1) % (3+1)']",
1556,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,exclude_class,1,0,2,0,1,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1']",
1557,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,exclude_class,0,1,2,1,1,0,"['7', '10', '13', '16', '19', '22', '25', '28', '31', '34', '37', '40', '43', '46', '49', '52', '55', '58', '61', '64', '67', '70', '73', '76', '79', '82', '85', '88', '91', '94', '97', '100']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 5']",
1558,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,exclude_class,1,1,2,1,0,0,"['7', '8', '9', '10']","['lambda x: x + 3', 'lambda x: (x * 1) + 3', 'lambda x: (x * 2) - 1', 'lambda x: (x * 3) - 4', 'lambda x: (x * 4) - 7', 'lambda x: (x * 5) - 10']",
1559,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,exclude_class,1,0,2,2,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x + 3) % (7+1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 1']",
1560,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,exclude_class,1,0,2,1,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: (3 * x) % (3 + 1)', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) & 3', 'lambda x: (3 * x) ^ 0']",
1561,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'lambda x: (3 * x) | 0', 'lambda x: (x * 3) % (4+1)']",
1562,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,exclude_class,1,0,2,0,1,0,"['12', '15', '18']","['lambda x: 3 * x', 'lambda x: (1 * x) + 0', 'lambda x: (2 * x) + 0', 'lambda x: (3 * x) + 0']",
1563,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,exclude_class,1,0,2,1,0,0,"['12', '15', '18', '21', '24', '27', '30', 'etc.']","['lambda x: 3 * x', 'lambda x: (x * 1) % (0+1) + 3', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x] + 3']",
1564,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['12', '15', '18']","['lambda x: 3 * x', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 3) | 0']",
1565,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,exclude_class,0,1,2,0,0,0,"['15', '18', '21', '24', '27', '30']","['lambda x: (3 * x)', 'lambda x: (x * 3)', 'lambda x: (x + 3) * 3', 'lambda x: (x + 3) ** 2']",
1566,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,exclude_class,1,0,2,0,1,0,"['15', '18', '21', '24']","['lambda x: (1 * x) * 3', 'lambda x: (2 * x) * 3', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) * 0', 'lambda x: (5 * x) % (3+1)']",
1567,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) | 3', 'lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 3', 'lambda x: (x * 4) - 3']",
1568,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,exclude_class,0,0,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) * 3', 'lambda x: (3 * x) % (3+1)']",
1569,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (1 * x) * 3 + 3', 'lambda x: (2 * x) * 3']",
1570,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,exclude_class,1,1,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) | 3', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) - 3']",
1571,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,exclude_class,1,1,2,0,2,0,"['18', '21', '24']","['lambda x: (3 * x) + 0', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) * 1', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) * 3']",
1572,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,10,exclude_class,1,0,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: 3 * x', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 3) % (2+1)']",
1573,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * (x + 3)', 'lambda x: (3 * x) + 3', 'lambda x: (x * 3) + 6']",
1574,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,exclude_class,1,0,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) * 1', 'lambda x: (3 * x) ** 1']",
1575,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,exclude_class,1,1,2,0,1,0,"['21', '24', '27', '30']","['lambda x: (3 * x) ** 1', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) | 1', 'lambda x: (3 * x) | 2']",
1576,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,exclude_class,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (x * 3) + 9', 'lambda x: (x * 4) + 5']",
1577,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) * 4 - 3']",
1578,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x + 4)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 4', 'lambda x: (x * 3) + 1']",
1579,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 3', 'lambda x: (4 * x) - 3', 'lambda x: (2 * x) + 1', 'lambda x: (7 * x) - 3']",
1580,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,exclude_class,1,1,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 4', 'lambda x: (x * 4) % (2+1)', 'lambda x: (2 * x) | 3', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (0 + 1)][x]']",
1581,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,10,exclude_class,1,0,2,1,1,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 1', 'lambda x: (3 * x) + 2']",
1582,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,10,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 2']",
1583,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,exclude_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 3) + 4', 'lambda x: (x * 4) + 4', 'lambda x: (x * 5) + 4', 'lambda x: (x * 6) + 4']",
1584,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,exclude_class,1,0,2,0,0,0,"['8', '9', '10', '11']","['lambda x: (x * 1) + 4', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 1) * 4', 'lambda x: (2 * x) + 2']",
1585,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,exclude_class,1,0,2,1,0,0,"['8', '9', '10', '11', '12']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1']",
1586,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,10,exclude_class,1,0,2,0,0,0,"['0', '1', '2']","['lambda x: x % 4', 'lambda x: (x // 4) + (x % 4)', 'lambda x: (x // 2) + (x % 2)']",
1587,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,10,exclude_class,1,0,2,0,0,0,"['0', '1', '2']","['lambda x: (x * 3) % (2+1)', 'lambda x: (x * 5) % (2+1)', 'lambda x: (x * 7) % (2+1)', 'lambda x: (x * 9) % (2+1)']",
1588,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,10,exclude_class,1,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (x * 1) + 4', 'lambda x: (x * 2) + 3', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) + 0']",
1589,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,exclude_class,0,1,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) - 1', 'lambda x: (1 * x) | 0', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]']",
1590,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,exclude_class,0,1,2,0,1,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1']",
1591,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,1,0,"['9', '11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (x * 3) | 0', 'lambda x: (x * 4) | 1']",
1592,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (x * 4) % (4+1)', 'lambda x: (x * 8) % (8+1)', 'lambda x: (x * 16) % (16+1)']",
1593,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,exclude_class,1,1,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 2) + 1']",
1594,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,exclude_class,0,1,2,0,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) ^ 1']",
1595,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) ** 1', 'lambda x: (2 * x) * 1', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) * 3', 'lambda x: (0 * x) + 3']",
1596,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
1597,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,exclude_class,0,0,2,0,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 3', 'lambda x: (2 * x) ** 2 - 1', 'lambda x: (3 * x) | 0', 'lambda x: (4 * x) | -3']",
1598,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,exclude_class,1,0,2,1,0,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (x * 4) % (2+1)']",
1599,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,0,1,0,"['11', '13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
1600,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,exclude_class,0,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 1 * x * fn(fn,x-1) + 2)']",
1601,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,exclude_class,1,1,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (x * 1) + 5', 'lambda x: (x * 2) + 3']",
1602,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,exclude_class,1,1,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 4']",
1603,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['15', '17', '19', '21', '23']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) | 7', 'lambda x: (2 * x) * 4 - 3']",
1604,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,exclude_class,1,0,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (x * 2) + 1', 'lambda x: (x * 4) % (4+1)']",
1605,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['15', '17', '19', '21']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 2']",
1606,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,10,exclude_class,1,0,2,0,0,1,"['9', '10', '11', '12']","['lambda x: (1 * x) + 5', 'lambda x: (1 * x) ** 1', 'lambda x: (1 * x) | 5']",
1607,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,exclude_class,1,1,2,1,0,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 5', 'lambda x: (1 * x) * 5', 'lambda x: (2 * x) - 3', 'lambda x: (2 * x) | 3', 'lambda x: (3 * x) - 2', 'lambda x: (3 * x) | 2', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) | 1', 'lambda x: (5 * x) | 0']",
1608,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,exclude_class,1,1,0,0,1,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (x * 4) + 2', 'lambda x: (x * 2) + 4']",
1609,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,10,exclude_class,1,0,2,0,1,0,"['22', '26', '30']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (x * 4) + 2', 'lambda x: (x * 5) % (4+1)']",
1610,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,exclude_class,1,1,2,0,1,0,"['24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (1 * x) * 4 + 2']",
1611,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,exclude_class,1,0,2,0,2,0,"['30', '34', '38', '42']","['lambda x: (4 * x) + 2', 'lambda x: (4 * x) | 2', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) / 2']",
1612,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,exclude_class,1,0,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x)', 'lambda x: (x * 4)', 'lambda x: (x * 2) + (2 * x)', 'lambda x: (x * 3) + (x * 1)']",
1613,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,exclude_class,1,0,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) % (0+1)', 'lambda x: (4 * x) | 0', 'lambda x: 2 ** (2 * x)', 'lambda x: (3 * x) ** 2']",
1614,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,exclude_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: 4 * x', 'lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** 1']",
1615,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,exclude_class,1,0,2,0,2,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '148', '152', '156', '160', '164', '168', '172', '176', '180', '184', '188', '192', '196', '200', '204', '208', '212', '216', '220', '224', '228', '232', '236', '240', '244', '248', '252', '256', '260', '264', '268', '272', '276', '280', '284', '288', '292', '296', '300', '304', '308', '312', '316', '320', '324', '328', '332', '336', '340', '344', '348', '352', '356', '360', '364', '368', '372', '376', '380', '384', '388', '392', '396', '400', '404', '408', '412', '416', '420', '424', '428', '432', '436', '440', '444', '448', '452', '456', '460', '464', '468', '472', '476', '480', '484', '488', '492', '496', '500', '504', '508', '512', '516', '520', '524', '528', '532', '536', '540', '544', '548', '552', '556', '560', '564', '568', '572', '576', '580', '584', '588', '592', '596', '600', '604', '608', '612', '616', '620', '624', '628', '632', '636', '640', '644', '648', '652', '656', '660', '664', '668', '672', '676', '680', '684', '688']","['lambda x: (4 * x)', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) + 0']",
1616,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,exclude_class,0,0,2,0,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 1', 'lambda x: (1 * x) + 4']",
1617,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,exclude_class,1,1,2,1,1,0,"['20', '24', '28', '32']","['lambda x: (4 * x) | 0', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) + 4']",
1618,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,exclude_class,1,0,2,0,1,0,"['20', '24', '28', '32']","['lambda x: (4 * x) * 1', 'lambda x: (4 * x) + 0', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) + 4', 'lambda x: (1 * x) * 4', 'lambda x: (1 * x) + 12']",
1619,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,exclude_class,1,0,2,0,2,0,"['20', '24', '28', '32']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) + 0', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) * 1']",
1620,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x)', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) * 4', 'lambda x: (2 ** x) * 2']",
1621,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x) * 1', 'lambda x: (2 * x) ** 2', 'lambda x: (x * 5) % (2+1)']",
1622,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (2 * x) * 4', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 2', 'lambda x: (1 * x) * 4']",
1623,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,exclude_class,1,1,2,0,1,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) | 0', 'lambda x: (1 * x) * 4', 'lambda x: (1 * x) + 8']",
1624,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['24', '28', '32', '36']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 12', 'lambda x: (4 * x) + 16']",
1625,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) * 1', 'lambda x: (4 * x) + 4', 'lambda x: (2 * x) * 5', 'lambda x: (2 * x) + 6']",
1626,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,exclude_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 12', 'lambda x: (5 * x) - 2', 'lambda x: (5 * x) + 2']",
1627,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,exclude_class,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) * 1', 'lambda x: (x + 4) * 4', 'lambda x: (x * 4) + 8']",
1628,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,exclude_class,0,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (x * 4) + 8', 'lambda x: (x * 4) + 4 * 3', 'lambda x: (x * 4) + 4 * 2', 'lambda x: (x * 4) + 4 * 1']",
1629,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,exclude_class,1,1,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) * 5']",
1630,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,exclude_class,1,0,2,1,0,0,"['28', '32', '36', '40']","['lambda x: (x * 4) % (4+1)', 'lambda x: (x * 4) + 8', 'lambda x: (x * 4) + 12']",
1631,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,exclude_class,1,1,2,0,1,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96']","['lambda x: (3 * x) | 0', 'lambda x: (6 * x) | 0', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 6']",
1632,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300', '306', '312', '318', '324', '330', '336', '342', '348', '354', '360', '366', '372', '378', '384', '390', '396', '402', '408', '414', '420', '426', '432', '438', '444', '450', '456', '462', '468', '474', '480', '486', '492', '498', '504', '510', '516', '522', '528', '534', '540', '546', '552', '558', '564', '570', '576', '582', '588', '594', '600']","['lambda x: (6 * x) * 1', 'lambda x: (3 * x) + 0', 'lambda x: (2 * x) + 0']",
1633,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,exclude_class,1,1,2,0,0,0,"['30', '36', '42', '48', '54', '60']","['lambda x: (2 * x) + 6', 'lambda x: (3 * x) + 6', 'lambda x: (4 * x) + 6', 'lambda x: (6 * x) + 0']",
1634,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,exclude_class,1,0,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) + 0', 'lambda x: (6 * x) + 6', 'lambda x: (4 * x) + 2', 'lambda x: (3 * x) + 4']",
1635,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,exclude_class,1,1,2,0,0,0,"['36', '42', '48', '54']","['lambda x: (6 * x) + 6', 'lambda x: (3 * x) * 4', 'lambda x: (2 * x) * 3 + 6', 'lambda x: (1 * x) * 5 + 12']",
1636,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,exclude_class,1,0,2,0,1,0,"['36', '42', '48', '54']","['lambda x: (3 * x) * 2', 'lambda x: (6 * x) + 6', 'lambda x: (6 * x) * 2', 'lambda x: (4 * x) * 3']",
1637,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,exclude_class,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) & 2', 'lambda x: (2 * x) % (4+1)']",
1638,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,exclude_class,1,0,2,0,1,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) | 2', 'lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 2) | 2']",
1639,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,exclude_class,1,1,2,1,1,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) | 2', 'lambda x: (2 * x) + 2', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) + 0']",
1640,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,exclude_class,1,1,2,0,1,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) + 2', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) * 1']",
1641,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,exclude_class,0,0,2,1,1,1,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) * 1', 'lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 2']",
1642,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (1 * x) + 4', 'lambda x: (5 * x) / 2', 'lambda x: (10 * x) / 5']",
1643,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,exclude_class,1,0,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: [i for i in range(100) if i % (4 + 2) or i % (4 + 2)][x]', 'lambda x: (2 * x) * 2', 'lambda x: (1 * x) | 4']",
1644,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,exclude_class,0,0,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: 2 * x + 2', 'lambda x: 4 + (2 * x)']",
1645,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,2,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 4', 'lambda x: (2 * x) ** 1', 'lambda x: (2 * x) ** 2']",
1646,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['12', '14', '16', '18']","['lambda x: (2 * x) | 2', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) % (4+1)']",
1647,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,1,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) % (5+1)', 'lambda x: (x * 1) + 4']",
1648,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) / 2']",
1649,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,exclude_class,0,1,2,0,0,0,"['14', '16', '18']","['lambda x: (2 * x) + 6', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) + 6', 'lambda x: (x * 4) % (1+1)']",
1650,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,exclude_class,1,0,2,0,0,0,"['14', '16', '18']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: 2 * x + 4', 'lambda x: (2 * x) * 2 + 2', 'lambda x: (4 * x) ** 0 + 6']",
1651,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) / 2', 'lambda x: (6 * x) - 2']",
1652,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,exclude_class,1,1,2,2,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) + 4', 'lambda x: (3 * x) + 2', 'lambda x: (4 * x) + 0', 'lambda x: (6 * x) + 0']",
1653,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (x * 2) + 6', 'lambda x: (x * 4) + 2', 'lambda x: (x * 6) + 0']",
1654,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,exclude_class,1,0,2,0,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: (2 * x) + 0', 'lambda x: (x * 4) % (0+1)', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]']",
1655,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (2 * x) + 0', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) | 0']",
1656,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,exclude_class,1,0,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (x * 2) % (7+1)', 'lambda x: (x * 2) | 0', 'lambda x: (2 * x) % (7+1)', 'lambda x: (2 * x) | 0', 'lambda x: (x * 2) + 0', 'lambda x: (2 * x) + 0']",
1657,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,exclude_class,1,0,2,0,2,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) | 0', 'lambda x: (2 * x) * 1', 'lambda x: (1 * x) * 2', 'lambda x: (x * 4) % (2+1)']",
1658,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,10,exclude_class,1,0,2,0,0,0,"['256', '1024', '4096']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) ** 2', 'lambda x: (4 * x) ** 3', 'lambda x: (4 * x) ** 4', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) ** 3', 'lambda x: (2 * x) ** 4', 'lambda x: (1 * x) ** 4']",
1659,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,10,exclude_class,1,1,2,0,1,0,"['128', '256', '512', '1024']","['lambda x: 2 ** (2 * x)', 'lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** 1', 'lambda x: (4 * x) ** (1/2)']",
1660,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,10,exclude_class,1,1,2,0,0,0,"['2048', '4096', '8192', '16384', '32768', '65536']","['lambda x: (1 * x) ** 4', 'lambda x: (2 * x) ** 4', 'lambda x: (4 * x) ** 4', 'lambda x: (8 * x) ** 4']",
1661,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,10,exclude_class,0,0,1,0,1,0,"['19', '23', '27', '31', '35', '39', '43', '47', '51', '55', '59', '63', '67', '71', '75', '79', '83', '87', '91', '95', '99']","['lambda x: (2 * x) + 3', 'lambda x: (4 * x) + 3', 'lambda x: (x * 1) + 3', 'lambda x: (x * 4) + 3']",
1662,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,exclude_class,0,1,1,0,0,0,"['19', '23', '27', '31']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) | 1', 'lambda x: (4 * x) ^ 1']",
1663,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,exclude_class,1,1,2,0,1,0,"['19', '23', '27', '31']","['lambda x: (4 * x) + 3', 'lambda x: (x * 4) + 3', 'lambda x: (x * 2) + (2 * x) + 3']",
1664,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,exclude_class,1,0,2,1,0,1,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) - 2', 'lambda x: (4 * x) - 1']",
1665,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,exclude_class,0,0,2,0,2,0,"['17', '21', '25']","['lambda x: (4 * x) | 1', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 3']",
1666,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,exclude_class,1,0,2,0,1,0,"['21', '25', '29', '33']","['lambda x: (2 * x) + 3', 'lambda x: (4 * x) + 1', 'lambda x: (x * 1) + 5']",
1667,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,exclude_class,1,1,2,0,1,0,"['25', '29', '33', '37', '41']","['lambda x: (4 * x) + 5', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (5 + 1)][x]', 'lambda x: (4 * x) | 1']",
1668,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,exclude_class,1,0,0,0,1,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 1', 'lambda x: (4 * x) + 9', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 13']",
1669,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,exclude_class,0,1,0,0,1,0,"['27', '31', '35']","['lambda x: (4 * x) + 1', 'lambda x: (x * 4) + 9', 'lambda x: (x * 4) + 5', 'lambda x: (x * 4) + 13']",
1670,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,10,exclude_class,1,0,2,0,0,0,"['0', '1']","['lambda x: (x * 2) % (1+1)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 8) % (4+1)']",
1671,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,10,exclude_class,1,1,2,0,0,0,"['0', '1']","['lambda x: (x * 5) % (4+1)', 'lambda x: (x * 5) % 2', 'lambda x: (x * 5) % 3', 'lambda x: (x * 5) % 5', 'lambda x: (x * 5) % 6', 'lambda x: (x * 5) % 7', 'lambda x: (x * 5) % 8', 'lambda x: (x * 5) % 9', 'lambda x: (x * 5) % 10']",
1672,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,exclude_class,1,0,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (2 * x) ** 2 + 5']",
1673,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,exclude_class,1,0,2,0,2,0,"['23', '27', '31', '35', '39', '43', '47', '51', '55', '59', '63', '67', '71', '75', '79', '83', '87', '91', '95', '99']","['lambda x: (4 * x) | 3', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 4']",
1674,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,exclude_class,0,1,0,1,2,0,"['17', '21', '25', '29']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) * 3', 'lambda x: (4 * x) ^ 3']",
1675,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,exclude_class,0,0,2,0,0,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) % (27+1)']",
1676,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,exclude_class,1,0,2,0,1,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 7']",
1677,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,same_class,0,1,2,1,0,0,"['5', '6', '7', '8', '9', '10', '11', '12']","['lambda x: (x * 1) + 0', 'lambda x: (x * 1) + 1', 'lambda x: (x * 2) + 0', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) + 0', 'lambda x: (x * 3) + 1', 'lambda x: (x * 4) + 0', 'lambda x: (x * 4) + 1']",
1678,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,same_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) * 1']",
1679,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,same_class,1,1,2,3,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) | 2', 'lambda x: (2 * x) | 3', 'lambda x: (3 * x) | 0', 'lambda x: (3 * x) | 1', 'lambda x: (3 * x) | 2', 'lambda x: (3 * x) | 3', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) | 1', 'lambda x: (4 * x) | 2', 'lambda x: (4 * x) | 3']",
1680,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,same_class,1,1,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x + 1', 'lambda x: (x * 1) + 1', 'lambda x: (x * 1) + 0']",
1681,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,same_class,1,1,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 0', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) | 1', 'lambda x: (3 * x) ** 0', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) | 3', 'lambda x: (5 * x) ** 0', 'lambda x: (6 * x) - 5', 'lambda x: (6 * x) | 5', 'lambda x: (7 * x) ** 0', 'lambda x: (8 * x) - 7', 'lambda x: (8 * x) | 7', 'lambda x: (9 * x) ** 0', 'lambda x: (10 * x) - 9', 'lambda x: (10 * x) | 9']",
1682,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,same_class,0,1,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 3) % (2+1)']",
1683,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,10,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (1 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3', 'lambda x: (5 * x) - 4', 'lambda x: (6 * x) - 5', 'lambda x: (7 * x) - 6', 'lambda x: (8 * x) - 7', 'lambda x: (9 * x) - 8', 'lambda x: (10 * x) - 9']",
1684,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,same_class,1,0,2,2,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3']",
1685,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x + 1', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 3) % (2+1)', 'lambda x: (x * 2) % (1+1)', 'lambda x: (x * 1) % (0+1)']",
1686,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['5', '6', '7', '8', '9', '10']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) | 0', 'lambda x: (1 * x) ^ 0', 'lambda x: (1 * x) & 0']",
1687,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,same_class,1,0,2,3,0,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x + 1', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) * 1']",
1688,text-davinci-003,"1,2,3,4","{'fn': 'lambda x: (1 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,same_class,1,1,2,3,1,0,"['5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']","['lambda x: (1 * x) + 0', 'lambda x: (1 * x) ** 1', 'lambda x: (1 * x) * 1', 'lambda x: (2 * x) - 1']",
1689,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) * 0', 'lambda x: (1 * x) ** 0', 'lambda x: (1 * x) // 0', 'lambda x: (1 * x) % 0']",
1690,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,same_class,1,0,2,3,1,1,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50']","['lambda x: x', 'lambda x: (1 * x) | 0', 'lambda x: (2 * x) - 2', 'lambda x: (3 * x) - 3']",
1691,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 0, 1)}",2,3,10,same_class,1,1,2,3,2,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) * 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]']",
1692,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (1 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,same_class,1,1,2,3,1,1,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) * 1', 'lambda x: (1 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) - 0', 'lambda x: (1 * x) - 1', 'lambda x: (1 * x) - 2', 'lambda x: (1 * x) - 3', 'lambda x: (2 * x) * 0', 'lambda x: (2 * x) * 0.5', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) * 1.5', 'lambda x: (2 * x) * 2', 'lambda x: (2 * x) * 2.5', 'lambda x: (2 * x) * 3', 'lambda x: (2 * x) * 3.5', 'lambda x: (2 * x) * 4', 'lambda x: (2 * x) * 4.5', 'lambda x: (2 * x) * 5', 'lambda x: (2 * x) * 5.5', 'lambda x: (2 * x) * 6', 'lambda x: (2 * x) * 6.5', 'lambda x: (2 * x) * 7', 'lambda x: (2 * x) * 7.5', 'lambda x: (2 * x) * 8', 'lambda x: (2 * x) * 8.5', 'lambda x: (2 * x) * 9', 'lambda x: (2 * x) * 9.5', 'lambda x: (2 * x) * 10', 'lambda x: (2 * x) * 10.5', 'lambda x: (2 * x) * 11', 'lambda x: (2 * x) * 11.5', 'lambda x: (2 * x) * 12', 'lambda x: (2 * x) * 12.5', 'lambda x: (2 * x) * 13', 'lambda x: (2 * x) * 13.5', 'lambda x: (2 * x) * 14', 'lambda x: (2 * x) * 14.5', 'lambda x: (2 * x) * 15', 'lambda']",
1693,text-davinci-003,"0,1,2,3","{'fn': 'lambda x: (x * 1) % (3+1)', 'offset': 0, 'metadata': ('modular_progression', 0, 3)}",2,3,10,same_class,0,1,1,0,0,0,"['4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","['lambda x: x', 'lambda x: (x * 1) % (4+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 1) | 0']",
1694,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['6', '7', '8', '9', '10']","['lambda x: (x * 1) + 1', 'lambda x: (x * 1) % (3+1)', 'lambda x: (x * 1) * 2', 'lambda x: (x * 2) + 1', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 2) * 2', 'lambda x: (x * 3) + 1', 'lambda x: (x * 3) % (3+1)', 'lambda x: (x * 3) * 2', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 4) * 2']",
1695,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,same_class,1,1,0,2,0,0,"['7', '9', '11', '13', '15']","['lambda x: (x * 1) + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 0', 'lambda x: (x * 2) + 1']",
1696,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,same_class,1,1,2,3,0,0,"['6', '7', '8', '9', '10']","['lambda x: (x * 1) % (3+1)', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) | 2']",
1697,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,same_class,0,1,1,1,0,0,"['6', '8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4']",
1698,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,same_class,1,1,1,0,0,0,"['7', '9', '11', '13', '15']","['lambda x: x + 2', 'lambda x: (x * 1) + 2', 'lambda x: (x * 1) + 2 + (x * 0)']",
1699,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,same_class,1,0,2,2,0,0,"['6', '8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70', '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94', '96', '98', '100']","['lambda x: (1 * x) + 2', 'lambda x: (2 * x) + 0', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 2']",
1700,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,same_class,1,0,2,1,0,0,"['6', '7', '8', '9', '10']","['lambda x: (1 * x) + 1', 'lambda x: (2 * x) + 0', 'lambda x: (3 * x) - 1', 'lambda x: (4 * x) - 2', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1) or i % (3 + 1) or i % (4 + 1)][x]']",
1701,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,same_class,1,0,0,1,0,0,"['7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: 2 + x', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) ** 2', 'lambda x: (2 * x) ** 1']",
1702,text-davinci-003,"2,3,4,5","{'fn': 'lambda x: (1 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,same_class,1,1,2,0,0,0,"['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: x + 1', 'lambda x: (x * 1) + 2', 'lambda x: (x * 2) + 0', 'lambda x: (x * 3) - 1']",
1703,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 0, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['7', '8', '9', '10']","['lambda x: (3 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (5 * x) - 2', 'lambda x: (6 * x) - 3']",
1704,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 0, 0)}",2,3,10,same_class,1,0,2,1,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: x + 2', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (3 + 1)][x]', 'lambda x: (x * 5) % (2+1)']",
1705,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,same_class,1,0,2,2,0,0,"['7', '8', '9', '10']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3']",
1706,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,same_class,1,1,2,0,1,1,"['7', '9', '11', '13']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) + 2']",
1707,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,same_class,0,0,2,3,0,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x + 0) * 1', 'lambda x: (x + 1) * 1', 'lambda x: (x + 2) * 1', 'lambda x: (x + 3) * 1', 'lambda x: (x * 1) + 3', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + 5', 'lambda x: (x * 1) + 6', 'lambda x: (x * 2) - 1', 'lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 3', 'lambda x: (x * 3) - 2', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 6', 'lambda x: (x * 4) - 5', 'lambda x: (x * 4) - 4']",
1708,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,same_class,1,1,2,0,1,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) + 5']",
1709,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,same_class,0,0,2,2,0,0,"['7', '8', '9', '10']","['lambda x: (1 * x) + 3', 'lambda x: (2 * x) + 1', 'lambda x: (3 * x) - 2', 'lambda x: (4 * x) - 3']",
1710,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,same_class,1,0,2,2,1,0,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 3', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1']",
1711,text-davinci-003,"3,4,5,6","{'fn': 'lambda x: (1 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 0)}",2,3,10,same_class,1,0,2,0,0,1,"['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 2', 'lambda x: (1 * x) * 1', 'lambda x: (1 * x) * 2', 'lambda x: (1 * x) * 3']",
1712,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,same_class,1,1,2,1,1,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) * 1', 'lambda x: (3 * x) + 0', 'lambda x: (3 * x) ** 1']",
1713,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['12', '15', '18', '21', '24', '27', '30']","['lambda x: (3 * x) + 0', 'lambda x: (x * 1) % (4+1)', 'lambda x: (x * 3) % (4+1)']",
1714,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,same_class,1,1,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: 3 * x', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) * 3', 'lambda x: (2 * x) | 3']",
1715,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (1 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,same_class,1,0,2,1,0,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: 3 * x', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]', 'lambda x: (3 * x) ** 2', 'lambda x: (3 * x) * 4', 'lambda x: (4 * x) * 0', 'lambda x: (5 * x) + 2', 'lambda x: (2 * x) | 3', '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 3 * x * fn(fn,x-1) + 2)']",
1716,text-davinci-003,"0,3,6,9","{'fn': 'lambda x: (3 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,same_class,1,1,2,0,1,0,"['12', '15', '18', '21', '24', '27', '30', '33', '36', '39', '42', '45', '48', '51', '54', '57', '60', '63', '66', '69', '72', '75', '78', '81', '84', '87', '90', '93', '96', '99']","['lambda x: (3 * x) + 0', 'lambda x: (x * 3) % (4+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]']",
1717,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,same_class,1,1,2,1,1,0,"['15', '18', '21', '24']","['lambda x: (3 * x) * 1', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 0']",
1718,text-davinci-003,"3,6,9,12","{'fn': 'lambda x: (1 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,same_class,1,1,2,0,1,0,"['15', '18', '21', '24']","['lambda x: (1 * x) * 3', 'lambda x: (3 * x) | 0', 'lambda x: 3 ** (0 * x)']",
1719,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,same_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) * 1', 'lambda x: (3 * x) + 3', 'lambda x: (1 * x) * 3', 'lambda x: (1 * x) + 5']",
1720,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,same_class,1,1,2,2,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 0', 'lambda x: (x * 3) + 6', 'lambda x: (x * 5) - 3']",
1721,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['18', '21', '24', '27']","['lambda x: (3 * x) + 3', 'lambda x: (5 * x) - 1', 'lambda x: (5 * x) + 1', 'lambda x: (3 * x) + 5']",
1722,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (1 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,same_class,1,1,2,0,0,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) % (3 + 1)']",
1723,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,same_class,1,1,2,1,1,0,"['18', '21', '24', '27', '30']","['lambda x: (3 * x) | 2', 'lambda x: (3 * x) + 3', 'lambda x: (x * 5) % (3+1)']",
1724,text-davinci-003,"6,9,12,15","{'fn': 'lambda x: (3 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 2, 3)}",2,3,10,same_class,1,0,2,0,1,0,"['18', '21', '24']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) + 6', 'lambda x: (4 * x) + 3', 'lambda x: (5 * x) - 3']",
1725,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 2, 0)}",2,3,10,same_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) | 3', 'lambda x: (1 * x) + 9']",
1726,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 2, 1)}",2,3,10,same_class,0,1,2,2,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) + 6', 'lambda x: (3 * x) | 3', 'lambda x: (3 * x) | 9', 'lambda x: (3 * x) | 5']",
1727,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 2, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['21', '24', '27', '30']","['lambda x: 3 * (x + 3)', 'lambda x: 3 * x + 3', 'lambda x: 3 * (x * 3)', 'lambda x: 3 * x * 3']",
1728,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (1 * x) * 3', 'offset': 3, 'metadata': ('geometric_progression', 0, 3)}",2,3,10,same_class,0,0,2,1,1,1,"['21', '24', '27', '30']","['lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 1', 'lambda x: (x * 4) % (3+1)', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (3 + 1)][x]']",
1729,text-davinci-003,"9,12,15,18","{'fn': 'lambda x: (3 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 2, 0)}",2,3,10,same_class,1,1,2,0,0,0,"['21', '24', '27', '30']","['lambda x: (3 * x) * 1', 'lambda x: (3 * x) + 3', 'lambda x: (3 * x) * 2', 'lambda x: (3 * x) * 3']",
1730,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 2)}",2,3,10,same_class,0,0,2,2,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'lambda x: (4 * x) + 4', 'lambda x: (1 * x) + 4']",
1731,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 1)}",2,3,10,same_class,1,0,2,1,0,1,"['8', '9', '10', '11', '12']","['lambda x: (1 * x) | 4', 'lambda x: (1 * x) + 4', 'lambda x: (2 * x) | 2', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) | 1', 'lambda x: (3 * x) + 1']",
1732,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 2, 2)}",2,3,10,same_class,0,0,2,2,0,0,"['8', '9', '10', '11', '12']","['lambda x: (1 * x) + 3', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: (2 * x) - 2']",
1733,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,10,same_class,1,0,2,0,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x * 1) + 4', 'lambda x: (x * 3) % (4 + 1)', 'lambda x: (x * 4) | 4', 'lambda x: (x * 5) ** 0']",
1734,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 3)}",2,3,10,same_class,1,1,2,2,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 3', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) ** 1', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) ** 1', 'lambda x: (3 * x) - 5', 'lambda x: (3 * x) ** 1', 'lambda x: (4 * x) - 8', 'lambda x: (4 * x) ** 1', 'lambda x: (5 * x) - 11', 'lambda x: (5 * x) ** 1']",
1735,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: (1 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,same_class,1,1,2,2,0,0,"['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 4', 'lambda x: (1 * x) | 4', 'lambda x: (2 * x) - 2', 'lambda x: (2 * x) | 2', 'lambda x: (3 * x) - 1', 'lambda x: (3 * x) | 1', 'lambda x: (4 * x) - 0']",
1736,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 3)}",2,3,10,same_class,0,0,2,2,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (3 * x) + 1', 'lambda x: (4 * x) + 0']",
1737,text-davinci-003,"4,5,6,7","{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 3, 1)}",2,3,10,same_class,0,1,2,3,0,0,"['8', '9', '10', '11', '12', '13', '14', '15']","['lambda x: (x + 1) * 1', 'lambda x: (x * 1) + 4', 'lambda x: (x * 1) + (2 * x)']",
1738,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 4) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 3, 2)}",2,3,10,same_class,0,0,2,3,0,0,"['0', '1', '2', '3']","['lambda x: x % 3', 'lambda x: (1 * x) % 3', 'lambda x: (2 * x) % 3', 'lambda x: (3 * x) % 3']",
1739,text-davinci-003,"0,1,2,0","{'fn': 'lambda x: (x * 1) % (2+1)', 'offset': 3, 'metadata': ('modular_progression', 0, 2)}",2,3,10,same_class,0,1,2,2,0,0,"['0', '1', '2']","['lambda x: x % 3', 'lambda x: (x + 1) % 3', 'lambda x: (x + 2) % 3', 'lambda x: (x + 3) % 3']",
1740,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 1, 0)}",2,3,10,same_class,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: [i for i in range(100) if i % (4 + 1) or i % (3 + 1)][x]', 'lambda x: (2 * x) + 2', 'lambda x: (4 * x) | 1']",
1741,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (2 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 2)}",2,3,10,same_class,0,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (x * 2) + 1', 'lambda x: (x * 3) - 1', 'lambda x: (x * 4) - 3', 'lambda x: (x * 5) - 4']",
1742,text-davinci-003,"4,5,7,8","{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 1, 1)}",2,3,10,same_class,1,0,2,1,0,0,"['9', '10', '11', '12']","['lambda x: (2 * x) + 2', 'lambda x: (3 * x) - 1', 'lambda x: (1 * x) + 4']",
1743,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,same_class,1,1,2,1,1,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: (1 * x) * 2 + 1']",
1744,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: (2 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,same_class,1,1,2,2,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (x * 2) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: (x * 2) % (2+1)']",
1745,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,same_class,1,0,2,0,1,0,"['9', '11', '13', '15']","['lambda x: (2 * x) ** 1', 'lambda x: (2 * x) + 1', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]']",
1746,text-davinci-003,"1,3,5,7","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 0, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,same_class,1,0,2,1,0,0,"['9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1', 'lambda x: (8 * x) - 3']",
1747,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 1', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,same_class,1,1,2,0,2,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 1']",
1748,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,same_class,1,1,2,1,2,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) % (2+1)']",
1749,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: (2 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,same_class,1,1,2,0,1,0,"['11', '13', '15', '17', '19', 'etc.']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) - 3', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 3']",
1750,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,same_class,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (x * 2) + 1', 'lambda x: (x * 2) - 1', 'lambda x: (x * 2) + 3', 'lambda x: (x * 2) - 3', 'lambda x: (x * 4) % (5+1)']",
1751,text-davinci-003,"3,5,7,9","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 1, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['11', '13', '15']","['lambda x: (2 * x) + 1', 'lambda x: (2 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 7']",
1752,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) | 1', 'offset': 2, 'metadata': ('bit_or_progression', 1, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) | 4', 'lambda x: (2 * x) - 1', 'lambda x: (2 * x) + 1']",
1753,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: (2 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,same_class,1,1,2,0,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) | 1', 'lambda x: (2 * x) + 1', 'lambda x: (1 * x) + 4']",
1754,text-davinci-003,"5,7,9,11","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'offset': 2, 'metadata': ('indexing_criteria_progression', 0, 0)}",2,3,10,same_class,1,0,2,0,1,0,"['13', '15', '17', '19']","['lambda x: (2 * x) + 3', 'lambda x: (2 * x) | 1', 'lambda x: (2 * x) ** 1', 'lambda x: (2 * x) - 1']",
1755,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 1)}",2,3,10,same_class,1,1,2,2,0,0,"['15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) | 1', 'lambda x: (4 * x) + 3']",
1756,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: (2 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 3)}",2,3,10,same_class,1,1,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 7', 'lambda x: (2 * x) + 8']",
1757,text-davinci-003,"7,9,11,13","{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (1 + 1)][x]', 'offset': 3, 'metadata': ('indexing_criteria_progression', 0, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['15', '17', '19']","['lambda x: (2 * x) + 5', 'lambda x: (4 * x) + 3', 'lambda x: (x * 4) + 3', 'lambda x: (x * 2) + 7']",
1758,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 3', 'offset': 2, 'metadata': ('arithmetic_progression', 0, 3)}",2,3,10,same_class,1,0,2,2,0,0,"['9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']","['lambda x: (1 * x) + 5', 'lambda x: (2 * x) + 3', 'lambda x: (3 * x) + 2', 'lambda x: (4 * x) + 1']",
1759,text-davinci-003,"5,6,7,8","{'fn': 'lambda x: (1 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 0, 2)}",2,3,10,same_class,1,0,2,0,0,0,"['9', '10', '11', '12']","['lambda x: (x * 1) + 5', 'lambda x: (x * 1) + 4 + 1', 'lambda x: (x * 1) + 3 + 2', 'lambda x: (x * 1) + 2 + 3', 'lambda x: (x * 1) + 1 + 4']",
1760,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,same_class,1,0,0,1,1,0,"['20', '24', '28', '32']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) + 2', 'lambda x: (x * 4) + 2', 'lambda x: (x * 2) + 4']",
1761,text-davinci-003,"6,10,14,18","{'fn': 'lambda x: (4 * x) | 2', 'offset': 1, 'metadata': ('bit_or_progression', 3, 2)}",2,3,10,same_class,1,1,2,0,1,0,"['22', '26', '30', '34']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) | 2', 'lambda x: (x * 4) % (2+1)']",
1762,text-davinci-003,"10,14,18,22","{'fn': 'lambda x: (4 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,same_class,1,0,2,0,1,0,"['26', '30', '34', '38']","['lambda x: (x * 2) + 8', 'lambda x: (4 * x) + 2', 'lambda x: (x * 4) + 2']",
1763,text-davinci-003,"14,18,22,26","{'fn': 'lambda x: (4 * x) + 2', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 2)}",2,3,10,same_class,1,1,2,0,1,0,"['30', '34', '38', '42', '46', '50']","['lambda x: (4 * x) + 2', 'lambda x: (2 * x) + 12', 'lambda x: (2 * x) + 4 * 3']",
1764,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (2 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,same_class,0,0,2,3,1,3,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) + 0']",
1765,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) | 0', 'offset': 0, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,same_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (x * 4) % (12+1)', 'lambda x: (x * 4) + 0', 'lambda x: (4 * x) ** 1']",
1766,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,same_class,1,0,2,1,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96']","['lambda x: (4 * x) + 0', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (4 + 1)][x]', 'lambda x: (1 * x) ** 2', 'lambda x: (2 * x) | 3']",
1767,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,same_class,1,0,2,1,1,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', 'etc.']","['lambda x: (2 * x) ** 2', 'lambda x: (4 * x) ** 1', 'lambda x: (x * 3) % (4+1)']",
1768,text-davinci-003,"0,4,8,12","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['16', '20', '24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (x * 4) + 0', 'lambda x: (x * 4) * 1', 'lambda x: (x * 4) * 2', 'lambda x: (x * 4) * 3']",
1769,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (2 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,same_class,1,0,2,1,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x) | 0', 'lambda x: (4 * x) % (2+1)', 'lambda x: (4 * x) % (3+1)', 'lambda x: (4 * x) % (4+1)']",
1770,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,same_class,1,1,2,0,1,0,"['20', '24', '28', '32', '36', '40', '44', '48', 'etc.']","['lambda x: 4 * x', 'lambda x: (2 * x) * 2', 'lambda x: (4 * x) | 0']",
1771,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,same_class,1,1,2,0,1,0,"['20', '24', '28', '32']","['lambda x: (1 * x) * 4', 'lambda x: (2 * x) * 4', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) + 0']",
1772,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,same_class,1,0,2,0,1,0,"['20', '24', '28', '32']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) * 2']",
1773,text-davinci-003,"4,8,12,16","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 1, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['20', '24', '28', '32']","['lambda x: (4 * x) + 0', 'lambda x: (2 * x) + 4', 'lambda x: (1 * x) + 4', 'lambda x: (x * 4) + 0']",
1774,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,same_class,1,0,2,0,2,0,"['24', '28', '32', '36', '40', '44', '48', '52', '56', '60', '64', '68', '72', '76', '80', '84', '88', '92', '96', '100']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) | 0', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) ** 1']",
1775,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,same_class,1,0,2,1,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) ** 1', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 4) % (3+1)', 'lambda x: (x * 4) % (4+1)']",
1776,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,same_class,0,0,2,1,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) + 4', 'lambda x: (x * 4) % (4+1)']",
1777,text-davinci-003,"8,12,16,20","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['24', '28', '32', '36', '40']","['lambda x: (4 * x) * 2', 'lambda x: (2 * x) * 4', 'lambda x: (1 * x) * 8']",
1778,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (2 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 1, 2)}",2,3,10,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) % (4+1)']",
1779,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 3, 0)}",2,3,10,same_class,0,1,2,1,1,0,"['28', '32', '36', '40']","['lambda x: (4 * x) ** 1', 'lambda x: (4 * x) + 0', 'lambda x: (4 * x) * 1']",
1780,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 3, 1)}",2,3,10,same_class,0,1,2,1,1,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 4', 'lambda x: (4 * x) * 1', 'lambda x: (4 * x) | 4', 'lambda x: (4 * x) ^ 4', 'lambda x: (4 * x) % 4']",
1781,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 0)}",2,3,10,same_class,1,1,2,0,1,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 0', 'lambda x: (4 * x) + 8', 'lambda x: (4 * x) * 2', 'lambda x: (4 * x) * 5']",
1782,text-davinci-003,"12,16,20,24","{'fn': 'lambda x: (4 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 3, 1)}",2,3,10,same_class,1,0,2,0,0,0,"['28', '32', '36', '40']","['lambda x: (4 * x) + 8', 'lambda x: (x * 4) + 12', 'lambda x: (x * 5) - 4']",
1783,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (2 * x) * 3', 'offset': 0, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,same_class,1,1,2,0,0,0,"['24', '30', '36', '42', '48', '54', '60', '66', '72', '78', '84', '90', '96', '102', '108', '114', '120', '126', '132', '138', '144', '150', '156', '162', '168', '174', '180', '186', '192', '198', '204', '210', '216', '222', '228', '234', '240', '246', '252', '258', '264', '270', '276', '282', '288', '294', '300']","['lambda x: (6 * x) + 0', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (0 + 1)][x]', 'lambda x: (3 * x) ** 2']",
1784,text-davinci-003,"0,6,12,18","{'fn': 'lambda x: (3 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,same_class,1,1,2,0,1,0,"['24', '30', '36']","['lambda x: (3 * x) * 2', 'lambda x: (6 * x) * 1']",
1785,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (2 * x) * 3', 'offset': 1, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,same_class,1,1,2,0,0,0,"['30', '36', '42', '48']","['lambda x: (6 * x) + 0', 'lambda x: (3 * x) + 6', 'lambda x: (2 * x) + 3', 'lambda x: (1 * x) + 4']",
1786,text-davinci-003,"6,12,18,24","{'fn': 'lambda x: (3 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,same_class,1,1,2,0,2,0,"['30', '36', '42', '48']","['lambda x: (6 * x) + 0', 'lambda x: (3 * x) * 2', 'lambda x: (2 * x) * 3', 'lambda x: (1 * x) * 4']",
1787,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (2 * x) * 3', 'offset': 2, 'metadata': ('geometric_progression', 1, 3)}",2,3,10,same_class,1,1,2,0,1,0,"['36', '42', '48', '54']","['lambda x: (3 * x) * 2', 'lambda x: (6 * x) / 2', 'lambda x: (4 * x) + 6']",
1788,text-davinci-003,"12,18,24,30","{'fn': 'lambda x: (3 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 2, 2)}",2,3,10,same_class,1,1,2,1,0,0,"['36', '42', '48', '54', '60']","['lambda x: (3 * x) + 6', 'lambda x: (6 * x) + 6', 'lambda x: (4 * x) + 12', 'lambda x: (5 * x) + 12']",
1789,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 0', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,same_class,1,0,2,2,1,1,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50']","['lambda x: (2 * x) + 0', 'lambda x: (2 * x) * 1', 'lambda x: (2 * x) * 2']",
1790,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) + 2', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,same_class,1,0,2,1,0,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) * 1', 'lambda x: (1 * x) + 1', 'lambda x: (x * 4) % (2+1)']",
1791,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) | 0', 'offset': 1, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,same_class,1,0,2,0,0,0,"['10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: 2 * x', 'lambda x: 4 * (x - 1)', 'lambda x: 6 * (x - 2)', 'lambda x: 8 * (x - 3)', 'lambda x: 2 ** (x + 1)', 'lambda x: 4 ** (x + 1)', 'lambda x: 6 ** (x + 1)', 'lambda x: 8 ** (x + 1)']",
1792,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (1 * x) * 2', 'offset': 1, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,same_class,1,1,2,0,0,0,"['10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: (1 * x) + 1', 'lambda x: (1 * x) + 2', 'lambda x: (1 * x) + 4']",
1793,text-davinci-003,"2,4,6,8","{'fn': 'lambda x: (2 * x) * 1', 'offset': 1, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,same_class,1,1,2,1,0,0,"['10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) ** 1', 'lambda x: (1 * x) * 2', 'lambda x: (x * 4) % (4+1)', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) | 0']",
1794,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 0', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,same_class,0,0,2,1,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (4 * x) / 2', 'lambda x: (5 * x) - 2']",
1795,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) + 2', 'offset': 1, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,same_class,1,0,2,1,0,0,"['12', '14', '16', '18', '20']","['lambda x: 2 * x + 2', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (3 + 1)][x]', 'lambda x: 4 * x ** 1', 'lambda x: 4 * x | 2']",
1796,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) | 0', 'offset': 2, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,same_class,1,1,2,1,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) * 2', 'lambda x: (1 * x) + 4', 'lambda x: (1 * x) * 4']",
1797,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 2, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,same_class,1,1,2,0,1,0,"['12', '14', '16', '18']","['lambda x: (2 * x) + 2', 'lambda x: (2 * x) ** 1', 'lambda x: (1 * x) + 4']",
1798,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (1 * x) * 2', 'offset': 2, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,same_class,1,0,2,0,0,0,"['12', '14', '16']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 1) + 4']",
1799,text-davinci-003,"4,6,8,10","{'fn': 'lambda x: (2 * x) * 1', 'offset': 2, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['12', '14', '16', '18', '20']","['lambda x: (2 * x) + 2', 'lambda x: (x * 2) + 2', 'lambda x: (x * 4) % (2+1)']",
1800,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 0', 'offset': 3, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,same_class,0,0,2,1,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (4 * x) | 2', 'lambda x: (2 * x) ** 2', 'lambda x: (2 * x) | 3']",
1801,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) + 2', 'offset': 2, 'metadata': ('arithmetic_progression', 1, 2)}",2,3,10,same_class,1,0,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 6', 'lambda x: (2 * x) + 8', 'lambda x: (2 * x) + 10']",
1802,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) | 0', 'offset': 3, 'metadata': ('bit_or_progression', 1, 0)}",2,3,10,same_class,1,1,2,1,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) * 1', 'lambda x: (1 * x) * 2', 'lambda x: (3 * x) * 1', 'lambda x: (4 * x) * 1', 'lambda x: (5 * x) * 1', 'lambda x: (6 * x) * 1']",
1803,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 3, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (x * 4) % (2+1)', 'lambda x: (x * 2) % (3+1)']",
1804,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (1 * x) * 2', 'offset': 3, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,same_class,1,0,2,0,1,0,"['14', '16', '18', '20']","['lambda x: (2 * x) + 4', 'lambda x: (2 * x) + 2', 'lambda x: (2 * x) + 0']",
1805,text-davinci-003,"6,8,10,12","{'fn': 'lambda x: (2 * x) * 1', 'offset': 3, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,same_class,1,1,2,1,0,0,"['14', '16', '18', '20', '22', '24', '26', '28', '30']","['lambda x: [i for i in range(100) if i % (2 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (6 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (7 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (8 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (9 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (10 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (11 + 1) or i % (2 + 1)][x]', 'lambda x: [i for i in range(100) if i % (12 + 1) or i % (2 + 1)][x]']",
1806,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) + 0', 'offset': 0, 'metadata': ('arithmetic_progression', 1, 0)}",2,3,10,same_class,1,1,2,0,2,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) % (4+1)', 'lambda x: (2 * x) | 0', 'lambda x: (2 * x) + 0', 'lambda x: (x * 2) % (3+1)', 'lambda x: (x * 2) | 0', 'lambda x: (x * 2) + 0']",
1807,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) ** 1', 'offset': 0, 'metadata': ('exponential_progression', 1, 1)}",2,3,10,same_class,1,1,2,0,1,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x) * 1', 'lambda x: (2 * x) + 0', 'lambda x: (1 * x) | 2', 'lambda x: (2 * x) | 0']",
1808,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (1 * x) * 2', 'offset': 0, 'metadata': ('geometric_progression', 0, 2)}",2,3,10,same_class,1,1,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20', 'etc.']","['lambda x: (2 * x)', 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (0 + 1)][x]', 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (0 + 1)][x]', 'lambda x: (1 * x) + 0']",
1809,text-davinci-003,"0,2,4,6","{'fn': 'lambda x: (2 * x) * 1', 'offset': 0, 'metadata': ('geometric_progression', 1, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['8', '10', '12', '14', '16', '18', '20']","['lambda x: (2 * x) + 0', 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (1 + 1)][x]', 'lambda x: (1 * x) * 2']",
1810,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 0, 'metadata': ('power_progression', 1, 2)}",2,3,10,same_class,0,1,2,0,2,0,"['128', '256', '512']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (1 * x)', 'lambda x: (4 * x) ** 1', 'lambda x: (2 * x) ** 2']",
1811,text-davinci-003,"1,4,16,64","{'fn': 'lambda x: 4 ** (1 * x)', 'offset': 0, 'metadata': ('power_progression', 3, 1)}",2,3,10,same_class,0,1,2,0,1,0,"['128', '256', '512', '1024']","['lambda x: 2 ** (2 * x)', 'lambda x: 4 ** (x - 1)', 'lambda x: (2 ** x) * 4', 'lambda x: (4 ** x) * 1']",
1812,text-davinci-003,"16,64,256,1024","{'fn': 'lambda x: 2 ** (2 * x)', 'offset': 2, 'metadata': ('power_progression', 1, 2)}",2,3,10,same_class,0,1,2,0,0,0,"['2048', '4096', '8192', '16384']","['lambda x: (2 * x) ** 4', 'lambda x: (4 * x) ** 3', 'lambda x: (4 * x) * 4', 'lambda x: (16 * x) / 4']",
1813,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (3 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 2, 3)}",2,3,10,same_class,0,0,0,1,1,0,"['17', '21', '25', '29', '33', '37', '41', '45', '49', '53', '57', '61', '65', '69', '73', '77', '81', '85', '89', '93', '97']","['lambda x: (4 * x) | 3', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 1', 'lambda x: (4 * x) * 1']",
1814,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) | 3', 'offset': 0, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,same_class,0,0,1,1,0,0,"['19', '23', '27', '31']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 2']",
1815,text-davinci-003,"3,7,11,15","{'fn': 'lambda x: (4 * x) + 3', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,same_class,1,0,0,1,1,0,"['17', '21', '25']","['lambda x: (4 * x) + 3', 'lambda x: (x * 4) + 3', 'lambda x: (x * 5) - 2', 'lambda x: (x * 6) - 5']",
1816,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) | 1', 'offset': 0, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,same_class,1,1,2,0,1,0,"['17', '21', '25', '29']","['lambda x: (2 * x) + 1', 'lambda x: (4 * x) - 3', 'lambda x: (4 * x) + 1']",
1817,text-davinci-003,"1,5,9,13","{'fn': 'lambda x: (4 * x) + 1', 'offset': 0, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,same_class,1,0,2,1,1,1,"['17', '21', '25', '29']","['lambda x: (4 * x) + 1', 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]', 'lambda x: (2 * x) + 1', 'lambda x: (2 * x) | 4']",
1818,text-davinci-003,"5,9,13,17","{'fn': 'lambda x: (4 * x) | 1', 'offset': 1, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,same_class,1,1,0,0,1,0,"['19', '23', '27', '31']","['lambda x: (1 * x) + 4', 'lambda x: (2 * x) + 3', 'lambda x: (4 * x) + 1', 'lambda x: (4 * x) - 1']",
1819,text-davinci-003,"9,13,17,21","{'fn': 'lambda x: (4 * x) + 1', 'offset': 2, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,same_class,0,0,2,2,0,0,"['25', '29', '33', '37']","['lambda x: (4 * x) + 5', 'lambda x: (x * 4) + 9', 'lambda x: (x * 4) + 5', 'lambda x: (x * 4) - 4']",
1820,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) | 1', 'offset': 3, 'metadata': ('bit_or_progression', 3, 1)}",2,3,10,same_class,1,1,0,1,1,0,"['27', '31', '35', '39', '43', '47', '51', '55', '59', '63', '67', '71', '75', '79', '83', '87', '91', '95', '99']","['lambda x: (4 * x) + 1', 'lambda x: (x * 4) + 1', 'lambda x: (x * 4) + 9']",
1821,text-davinci-003,"13,17,21,25","{'fn': 'lambda x: (4 * x) + 1', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 1)}",2,3,10,same_class,1,1,2,0,0,0,"['27', '29', '31']","['lambda x: (2 * x) + 11', 'lambda x: (4 * x) + 5', 'lambda x: (4 * x) + 9']",
1822,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 3) % (1+1)', 'offset': 0, 'metadata': ('modular_progression', 2, 1)}",2,3,10,same_class,0,1,2,2,0,0,"['0', '1']","['lambda x: 0 if x % 2 == 0 else 1', 'lambda x: 1 if x % 2 == 0 else 0', 'lambda x: 0 if x % 4 < 2 else 1', 'lambda x: 1 if x % 4 < 2 else 0']",
1823,text-davinci-003,"0,1,0,1","{'fn': 'lambda x: (x * 1) % (1+1)', 'offset': 2, 'metadata': ('modular_progression', 0, 1)}",2,3,10,same_class,0,1,2,2,0,0,"['0', '1']","['lambda x: (x * 2) % (1+1)', 'lambda x: (x * 2) % 2', 'lambda x: (x * 2) % 3']",
1824,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) | 3', 'offset': 1, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,same_class,1,1,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) - 2', 'lambda x: (2 * x) + 5', 'lambda x: (2 * x) + 6']",
1825,text-davinci-003,"7,11,15,19","{'fn': 'lambda x: (4 * x) + 3', 'offset': 1, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,same_class,1,1,2,0,1,0,"['23', '27', '31', '35']","['lambda x: (4 * x) + 3', 'lambda x: (2 * x) + 5', 'lambda x: (1 * x) ** 2 + 2']",
1826,text-davinci-003,"11,15,19,23","{'fn': 'lambda x: (4 * x) | 3', 'offset': 2, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,same_class,1,1,2,0,0,0,"['27', '31', '35', '39']","['lambda x: (4 * x) + 7', 'lambda x: (x * 4) + 7', 'lambda x: (x * 4) + 11']",
1827,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) | 3', 'offset': 3, 'metadata': ('bit_or_progression', 3, 3)}",2,3,10,same_class,1,1,2,0,0,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 11', 'lambda x: (4 * x) + 15', 'lambda x: (4 * x) + 19', 'lambda x: (4 * x) + 23']",
1828,text-davinci-003,"15,19,23,27","{'fn': 'lambda x: (4 * x) + 3', 'offset': 3, 'metadata': ('arithmetic_progression', 3, 3)}",2,3,10,same_class,1,1,2,0,2,0,"['31', '35', '39', '43']","['lambda x: (4 * x) + 3', 'lambda x: (4 * x) | 3', 'lambda x: (4 * x) ^ 3', 'lambda x: (4 * x) & 3']",
