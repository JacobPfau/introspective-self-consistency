original_function,sequence,generated_completion_rule,generated_completion,generated_completion_matches,model_self_consistency_evaluation,model_completion,model_completion_matches
lambda x: x[::-1],@### => ###@,lambda x: x[-3:] + x[:-3][::-1],@###,False,N,@###,False
lambda x: x[1:] + x[:1],@### => ###@,lambda x: x[1:],###@,False,N,##@#,False
lambda x: x[-3:] + x[:-3],@### => ###@,lambda x: x[1:] + x[0],##@#,True,N,###@,False
"lambda x: x[:0] + x[0:].replace('@', """", 1) + '@'",@### => ###@,lambda x: x[-3:] + x[:-3],###@,False,Y,@###,False
lambda x: x[3:] + x[:3],@### => #@##,lambda x: x[0] + x[3] + x[2] + x[1],@###,False,Y,##@#,False
"lambda x: x[:0] + '#' + x[0:].replace('#', """", 1)",@### => #@##,lambda x: x[0] + x[3] + x[1:3][::-1],@### => #@##,False,Y,##@#,False
lambda x: x[-1:] + x[:-1],@### => #@##,lambda x: x[-1] + x[1:4] + x[0] + x[4:],@###,False,Y,##@#,False
lambda x: x[::-1],#@@@ => @@@#,lambda x: x[-1] + x[1:-1] + x[0],#@@@,True,N,#@@@,True
lambda x: x[1:] + x[:1],#@@@ => @@@#,lambda x: x[1:] + x[0],@@#@,True,N,#@@@,False
lambda x: x[-3:] + x[:-3],#@@@ => @@@#,lambda x: x[-1] + x[1:-1] + x[0],#@@@,True,N,#@@@,True
"lambda x: x[:0] + x[0:].replace('#', """", 1) + '#'",#@@@ => @@@#,"lambda x: x[1:].replace('@', """", 1) + '@' + x[0]",#@@@,False,N,@@@#,False
lambda x: x[3:] + x[:3],#@@@ => @#@@,lambda x: x[0] + x[-3:] + x[1:-3],#@@@,False,Y,@@#@,False
"lambda x: x[:0] + '@' + x[0:].replace('@', """", 1)",#@@@ => @#@@,"lambda x: x[1] + x[0] + x[2:].replace('@', """", 1) + '@'",@#@@,False,Y,@@#@,False
lambda x: x[-1:] + x[:-1],#@@@ => @#@@,lambda x: x[-1] + x[1:] + x[0],#@@@,False,N,@@#@,False
lambda x: x[::-1],#@## => ##@#,lambda x: x[-1:] + x[1:3] + x[:1],#@##,False,Y,#@##,False
lambda x: x[3:] + x[:3],#@## => ##@#,lambda x: x[-2:] + x[:-2],#@##,False,N,##@#,False
"lambda x: x[:1] + '#' + x[1:].replace('#', """", 1)",#@## => ##@#,lambda x: x[2] + x[0:2] + x[3] + x[4:],##@#,False,Y,##@#,False
lambda x: x[1:] + x[:1],#@## => @###,"lambda x: x[0] + x[2:].replace('#', """")","This transformation cannot be completed as it requires adding characters to the string, which is not allowed in string transformation puzzles.",False,N,@##,False
"lambda x: x[:0] + x[0:].replace('#', """", 1) + '#'",#@## => @###,"lambda x: '@' + x[1:].replace('#', '@', 1)",#@##,False,Y,@@@#,False
"lambda x: x[:0] + '@' + x[0:].replace('@', """", 1)",#@## => @###,"lambda x: x[0].replace('#', '@') + x[1:].replace('#', """")",#@##,False,N,###@,False
lambda x: x[-3:] + x[:-3],#@## => @###,lambda x: '@' + x[2:],#@##,False,N,###@,False
lambda x: x[2:] + x[:2],#@## => ###@,lambda x: x[1:] + '#',#@##,False,N,##@#,True
"lambda x: x[:0] + x[0:].replace('@', """", 1) + '@'",#@## => ###@,lambda x: x[1:] + x[0],###@,False,N,##@#,True
"lambda x: x[:1] + x[1:].replace('@', """", 1) + '@'",#@## => ###@,lambda x: x[3] + x[1:3] + x[0] + x[4:],#@##,False,N,@##@,False
lambda x: x[-2:] + x[:-2],#@## => ###@,lambda x: x[2] + x[3:] + x[0:2] + '@',@###,False,Y,##@#,False
lambda x: x[::-1],@#@@ => @@#@,lambda x: x[1] + x[2] + x[0] + x[3],@#@@,True,Y,#@#@@,False
lambda x: x[-1:] + x[:-1],@#@@ => @@#@,lambda x: x[1] + x[2] + x[0] + x[3],@#@@,True,Y,#@#@@,False
lambda x: x[1:] + x[:1],@#@@ => #@@@,"lambda x: x[1:] if x[0] == '@' else x.replace('@', """", 1)",#@@@,False,Y,#@@@,False
"lambda x: x[:0] + x[0:].replace('@', """", 1) + '@'",@#@@ => #@@@,lambda x: '#' + x[:-1],@#@@,False,N,#@@@,False
"lambda x: x[:0] + '#' + x[0:].replace('#', """", 1)",@#@@ => #@@@,lambda x: '#' + x[1:],@#@@,False,N,#@@@,True
lambda x: x[-3:] + x[:-3],@#@@ => #@@@,lambda x: '#' + x[1:],#@@@,True,N,#@@@,True
lambda x: x[2:] + x[:2],@#@@ => @@@#,"lambda x: x.replace('#', '', 1) + '#' + x.count('#') * '@'",@#@@,False,N,#@@@,False
"lambda x: x[:0] + x[0:].replace('#', """", 1) + '#'",@#@@ => @@@#,"lambda x: x[1:].replace('@', """") + '@' + x[:1]",@#@@,False,N,#@@@,False
"lambda x: x[:1] + x[1:].replace('#', """", 1) + '#'",@#@@ => @@@#,"lambda x: x[0] + x[2:].replace('@', '') + x[1] + '@'",@#@@,True,Y,#@@@,False
lambda x: x[-2:] + x[:-2],@#@@ => @@@#,lambda x: x[0] + x[3] + x[1:3],@@@#,False,Y,#@@@,False
lambda x: x[::-1],##@# => #@##,"lambda x: x[2] + x[0:2].replace('#', """", 1) + x[3:].replace('#', """", 1)",##@#,False,Y,##@#,False
lambda x: x[1:] + x[:1],##@# => #@##,lambda x: x[2] + x[0:2] + x[3],##@# => #@#@,False,N,##@#,True
lambda x: x[-3:] + x[:-3],##@# => #@##,lambda x: x[1] + x[0] + '@' + x[2] + x[3],##@#,False,Y,##@#,False
"lambda x: x[:0] + x[0:].replace('#', """", 1) + '#'",##@# => #@##,lambda x: x[1] + x[3] + x[2] + x[0],##@#,False,Y,##@#,False
"lambda x: x[:1] + x[1:].replace('#', """", 1) + '#'",##@# => #@##,lambda x: x[2] + x[:2] + '@' + x[3:],##@#,False,Y,##@#,False
"lambda x: x[:1] + '@' + x[1:].replace('@', """", 1)",##@# => #@##,lambda x: x[-1] + x[:-1],##@# => #@# => #@##,False,N,##@#,True
lambda x: x[2:] + x[:2],##@# => @###,"lambda x: x[2:].replace('#', """", 1) + '#' + x[:2].replace('#', """")",##@# => #@## => @###,False,N,###@,False
"lambda x: x[:0] + '@' + x[0:].replace('@', """", 1)",##@# => @###,"lambda x: x[2] + x[0:2].replace('#', '') + x[3:].replace('#', '@')",@###,False,Y,##@#,False
lambda x: x[-2:] + x[:-2],##@# => @###,lambda x: x[2] + x[0:2] + x[3],##@#,False,N,###@,False
lambda x: x[3:] + x[:3],##@# => ###@,"lambda x: x.count('@') * '@' + x.replace('@', '', 1)",##@#,False,N,###@,False
"lambda x: x[:0] + x[0:].replace('@', """", 1) + '@'",##@# => ###@,"lambda x: '#' + x[:3].replace('@', """", 1) + x[3:]",##@#,False,Y,###@,False
"lambda x: x[:1] + x[1:].replace('@', """", 1) + '@'",##@# => ###@,lambda x: x[2:] + x[:2] + '@',##@#,False,Y,@###,False
"lambda x: x[:2] + x[2:].replace('@', """", 1) + '@'",##@# => ###@,lambda x: x[:3] + '@' + x[4:],###@,True,Y,##@#,False
"lambda x: x[:2] + '#' + x[2:].replace('#', """", 1)",##@# => ###@,lambda x: x[-1] + x[:-1],###@,False,N,##@#,False
lambda x: x[::-1],@@#@ => @#@@,lambda x: x[1:] + x[:1],@@#@,False,N,@@#@,False
lambda x: x[1:] + x[:1],@@#@ => @#@@,lambda x: x[1:] + x[:1],@#@@,False,N,@@#@,False
lambda x: x[-3:] + x[:-3],@@#@ => @#@@,lambda x: x[1:] + x[:1] + x[2:] + x[1:2],@@#@,False,Y,@@#@,False
"lambda x: x[:0] + x[0:].replace('@', """", 1) + '@'",@@#@ => @#@@,lambda x: x[1:] + x[0] + x[2] + x[1],@@#@,False,Y,@@#@,False
"lambda x: x[:1] + '#' + x[1:].replace('#', """", 1)",@@#@ => @#@@,"lambda x: x[1:] + x[:1] if x[0] == '@' else x.translate(str.maketrans('#' + '@', '@' + '#'))",@#@@,False,Y,@@#@,False
lambda x: x[2:] + x[:2],@@#@ => #@@@,"lambda x: x[2] + x[:2].replace('@', '#') + x[3:].replace('#', '@')",@@@#,False,Y,@@#@,False
"lambda x: x[:0] + '#' + x[0:].replace('#', """", 1)",@@#@ => #@@@,lambda x: '#' + x[2:4] + x[0:2] + '#',@@#@,False,N,@@#@,False
lambda x: x[-2:] + x[:-2],@@#@ => #@@@,lambda x: x[2] + x[:2] + x[3:],@@#@,False,N,@@#@,False
lambda x: x[3:] + x[:3],@@#@ => @@@#,"lambda x: x.replace('#', '', 1) + '#'",#@@@,False,N,@@@#,True
"lambda x: x[:0] + x[0:].replace('#', """", 1) + '#'",@@#@ => @@@#,"lambda x: x.replace('#', '', 1)",@@#@,False,N,@@@#,False
"lambda x: x[:1] + x[1:].replace('#', """", 1) + '#'",@@#@ => @@@#,lambda x: x[1:] + x[0],@@#@ =>,False,N,#@@@,False
"lambda x: x[:2] + x[2:].replace('#', """", 1) + '#'",@@#@ => @@@#,"lambda x: x.replace('@#', '@', 1).replace('#', '@')",@@@#,False,Y,@@@#,False
"lambda x: x[:2] + '@' + x[2:].replace('@', """", 1)",@@#@ => @@@#,"lambda x: x[:2] + x[2:].replace('#', """", 1) + '#'",@@#@,False,Y,@@@#,True
lambda x: x[-1:] + x[:-1],@@#@ => @@@#,lambda x: x[1:] + x[0] + x[2:] + '#',@@@#,False,Y,#@@@,False
