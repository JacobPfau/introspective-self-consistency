original_function,sequence,generated_completion_rule,generated_completion,generated_rule_matches,generated_completion_matches
"{'fn': 'lambda x: (5 * x) ** 1', 'offset': 0}","[0, 5, 10, 15, 20]",lambda x: (x * 5) * 1,25,True,True
"{'fn': 'lambda x: 3 ** (3 * x)', 'offset': 0}","[1, 27, 729, 19683, 531441]",lambda x: 3 ** (x + 1),14348907,False,True
"{'fn': 'lambda x: (5 * x) * 3', 'offset': 0}","[0, 15, 30, 45]",lambda x: 15 * x if x > 0 else 0,60,True,True
"{'fn': 'lambda x: (5 * x) | 4', 'offset': 0}","[4, 5, 14, 15, 20, 29, 30, 39, 44]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else (5 * x - 1) if x % 2 else (5 * x - 6) + fn(fn,x-1))",49,False,False
"{'fn': 'lambda x: 2 ** (1 * x)', 'offset': 0}","[1, 2, 4, 8, 16, 32, 64, 128]",lambda x: 2 ** x if x < 8 else None,256,True,True
"{'fn': 'lambda x: (3 * x) * 4', 'offset': 0}","[0, 12, 24, 36, 48, 60]",lambda x: (12 * x) + 0 if x <= 5 else None,72,True,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 2 * x * fn(fn,x-1) + 4)', 'offset': 0}","[1, 6, 28, 172, 1380]",lambda x: (x * (x + 1) * (2 * x + 1) // 6) + (x * (x + 1) // 2) + 1,13732,False,False
"{'fn': 'lambda x: (5 * x) ** 0', 'offset': 0}","[1, 1, 1, 1, 1]",lambda x: 1,1,True,True
"{'fn': 'lambda x: (5 * x) | 2', 'offset': 0}","[2, 7, 10, 15, 22, 27, 30, 35]",lambda x: (5 * (x // 2) + 2) if x % 2 == 0 else (5 * ((x - 1) // 2) + 7),42,False,True
"{'fn': 'lambda x: 1 ** (2 * x)', 'offset': 0}","[1, 1, 1, 1, 1]",lambda x: 2 ** (0 * x) if x < 5 else 0,1,True,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 3 * x * fn(fn,x-1) + 4)', 'offset': 0}","[1, 7, 46, 418, 5020, 75304]",lambda x: (x + 1) * (x + 6) * (x ** 2 + 7 * x + 10) // 4,1358356,False,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (2 + 1)][x]', 'offset': 0}","[1, 2, 3, 4, 5, 7, 8, 9]",lambda x: [i for i in range(100) if i not in [6]][x],10,False,True
"{'fn': 'lambda x: 2 ** (0 * x)', 'offset': 0}","[1, 1, 1, 1, 1]",lambda x: 1 ** (1 * x),1,True,True
"{'fn': 'lambda x: (3 * x) + 4', 'offset': 0}","[4, 7, 10, 13, 16]",lambda x: 3 * x + 1 if x % 2 else 1 * x + 1,19,False,True
"{'fn': 'lambda x: (3 * x) ** 2', 'offset': 0}","[0, 9, 36, 81, 144]",lambda x: (x ** 2) * 4 if x > 0 else 0,225,False,True
"{'fn': 'lambda x: (x * 1) % (0+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0, 0, 0]",lambda x: (x * 0) % (0+1),0,False,True
"{'fn': 'lambda x: 1 ** (4 * x)', 'offset': 0}","[1, 1, 1, 1, 1, 1]",lambda x: 1 if x >= 0 else 0,1,True,True
"{'fn': 'lambda x: (5 * x) | 0', 'offset': 0}","[0, 5, 10, 15, 20]",lambda x: 5 * x,25,True,True
"{'fn': 'lambda x: (4 * x) + 4', 'offset': 0}","[4, 8, 12, 16, 20, 24, 28, 32, 36]",lambda x: (x + 1) * 4,40,False,True
"{'fn': 'lambda x: (5 * x) + 0', 'offset': 0}","[0, 5, 10, 15, 20, 25, 30, 35, 40]",lambda x: (5 * x) + 0 if x >= 0 else 0,45,False,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 1 * x * fn(fn,x-1) + 3)', 'offset': 0}","[1, 4, 11]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 2 * x + fn(fn,x-1) + 1)",22,False,False
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 2 * x * fn(fn,x-1) + 0)', 'offset': 0}","[1, 2, 8, 48, 384, 3840, 46080]","lambda x: 2**(x*(x-1)) * [1,2][x%2]",645120,False,True
"{'fn': 'lambda x: 5 ** (1 * x)', 'offset': 0}","[1, 5, 25]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * fn(fn,x-1))",125,True,True
"{'fn': 'lambda x: (5 * x) ** 3', 'offset': 0}","[0, 125, 1000, 3375, 8000, 15625, 27000]",lambda x: (x ** 3) * 5 if x >= 1 else 0,42875,False,True
"{'fn': 'lambda x: (2 * x) ** 4', 'offset': 0}","[0, 16, 256, 1296, 4096, 10000, 20736]",lambda x: (x ** 4) if x < 4 else (x ** 3) if x < 6 else (x ** 2) if x < 7 else 0,46656,False,False
"{'fn': 'lambda x: 4 ** (3 * x)', 'offset': 0}","[1, 64, 4096, 262144]",lambda x: 4 ** (2 * x - 2) if x > 0 else 1,16777216,False,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 4 * x * fn(fn,x-1) + 1)', 'offset': 0}","[1, 5, 41, 493, 7889, 157781]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 2 * fn(fn,x-1) ** 2 - 1)",3906265,False,False
"{'fn': 'lambda x: (x * 5) % (2+1)', 'offset': 0}","[0, 2, 1, 0]","lambda x: [0, 2, 1, 0][x % 4]",-1,True,False
"{'fn': 'lambda x: (5 * x) * 2', 'offset': 0}","[0, 10, 20, 30, 40, 50, 60]",lambda x: 10 * x,70,True,True
"{'fn': 'lambda x: 4 ** (4 * x)', 'offset': 0}","[1, 256, 65536, 16777216, 4294967296, 1099511627776, 281474976710656, 72057594037927936, 18446744073709551616]",lambda x: 2 ** (8 * x) if x < 9 else None,4722366482869645213696,False,True
"{'fn': 'lambda x: (4 * x) | 4', 'offset': 0}","[4, 4, 12, 12, 20, 20, 28]",lambda x: ((x // 2) + 1) * 8 if x % 2 == 0 else ((x // 2) + 1) * 8 - 4,"28 (the sequence seems to be repeating the same two numbers, 4 and 12, and adding 8 to each pair to get the next pair, so the next number would be 28)",False,False
"{'fn': 'lambda x: (1 * x) ** 3', 'offset': 0}","[0, 1, 8, 27, 64]",lambda x: x ** 3,125,True,True
"{'fn': 'lambda x: (x * 2) % (0+1)', 'offset': 0}","[0, 0, 0]",lambda x: (2 * x) * 0,0,True,True
"{'fn': 'lambda x: 5 ** (0 * x)', 'offset': 0}","[1, 1, 1, 1, 1, 1]",lambda x: 1,1,True,True
"{'fn': 'lambda x: (2 * x) * 0', 'offset': 0}","[0, 0, 0, 0]",lambda x: 0,0,True,True
"{'fn': 'lambda x: (x * 5) % (0+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0]",lambda x: (x * 7) % (7+1),0,False,True
"{'fn': 'lambda x: (x * 2) % (3+1)', 'offset': 0}","[0, 2, 0]",lambda x: (x % 3 == 1) * 2,-2,True,False
"{'fn': 'lambda x: 5 ** (3 * x)', 'offset': 0}","[1, 125, 15625, 1953125]",lambda x: 5 ** (3 * x) if x > 0 else 1,244140625,True,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 1 * x * fn(fn,x-1) + 0)', 'offset': 0}","[1, 1, 2, 6, 24, 120, 720]","lambda x: 1 if x == 0 else x * (lambda f: f(x - 1))(lambda y: [1, 1][y] if y < 2 else y)",5040,False,True
"{'fn': 'lambda x: (1 * x) ** 4', 'offset': 0}","[0, 1, 16, 81, 256, 625]",lambda x: x ** 4 if x % 2 == 0 else x ** 3,1296,False,True
"{'fn': 'lambda x: (3 * x) | 4', 'offset': 0}","[4, 7, 6, 13]",lambda x: (3 * x) + (x % 2) ** 2 - 1,10,False,False
"{'fn': 'lambda x: (1 * x) ** 0', 'offset': 0}","[1, 1, 1, 1]",lambda x: (x * 0) + 1,1,True,True
"{'fn': 'lambda x: (5 * x) | 3', 'offset': 0}","[3, 7, 11, 15, 23]",lambda x: (4 * x) + 3 if x < 4 else (8 * x) - 9,27,True,True
"{'fn': 'lambda x: (2 * x) ** 3', 'offset': 0}","[0, 8, 64, 216, 512, 1000]",lambda x: x ** 3 if x < 6 else None,1728,False,True
"{'fn': 'lambda x: 3 ** (2 * x)', 'offset': 0}","[1, 9, 81, 729, 6561]",lambda x: 3 ** (2 ** x),59049,False,True
"{'fn': 'lambda x: (3 * x) * 0', 'offset': 0}","[0, 0, 0]",lambda x: 0 ** (0 * x),0,False,True
"{'fn': 'lambda x: (x * 3) % (3+1)', 'offset': 0}","[0, 3, 2, 1, 0, 3, 2]","lambda x: [0,3,2,1][(x-1)%4] if x>0 else 0",1,False,True
"{'fn': 'lambda x: (x * 3) % (0+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0, 0]",lambda x: (x * 0) % (0+1),0,True,True
"{'fn': 'lambda x: (4 * x) * 3', 'offset': 0}","[0, 12, 24, 36, 48, 60, 72]",lambda x: 12 * x,84,True,True
"{'fn': 'lambda x: (5 * x) + 3', 'offset': 0}","[3, 8, 13, 18, 23, 28, 33, 38, 43]",lambda x: 5 * x + 3 if x % 2 == 1 else 5 * (x - 1) + 8,48,False,True
"{'fn': 'lambda x: 1 ** (3 * x)', 'offset': 0}","[1, 1, 1, 1, 1, 1, 1, 1, 1]",lambda x: (x // 9) % 2 + 1,1,False,True
"{'fn': 'lambda x: (1 * x) | 2', 'offset': 0}","[2, 3, 2, 3]","lambda x: [2, 3][x % 2]",2,True,False
"{'fn': 'lambda x: (x * 4) % (4+1)', 'offset': 0}","[0, 4, 3, 2, 1, 0, 4, 3, 2]","(lambda a:lambda v:a(a,v))(lambda fn,x:4-x%5 if x%5>0 else 0)",1,False,True
"{'fn': 'lambda x: (1 * x) | 1', 'offset': 0}","[1, 1, 3, 3, 5, 5, 7]",lambda x: (x // 2 + 1) * 2 - (x % 2),7,False,True
"{'fn': 'lambda x: (2 * x) | 4', 'offset': 0}","[4, 6, 4, 6, 12, 14, 12, 14]",lambda x: 4 + ((x // 2) * 8) + ((x % 2) * 2),28,False,False
"{'fn': 'lambda x: 2 ** (4 * x)', 'offset': 0}","[1, 16, 256]",lambda x: 16 ** (x - 1) if x > 0 else 1,4096,False,True
"{'fn': 'lambda x: (3 * x) ** 0', 'offset': 0}","[1, 1, 1, 1, 1, 1, 1, 1]",lambda x: 1,1,True,True
"{'fn': 'lambda x: (5 * x) * 4', 'offset': 0}","[0, 20, 40, 60, 80, 100, 120, 140]",lambda x: (20 * x) + (0 * (x == 0)),160,True,True
"{'fn': 'lambda x: (2 * x) * 4', 'offset': 0}","[0, 8, 16, 24, 32, 40, 48, 56, 64]",lambda x: (8 * x) % 72,72,False,True
"{'fn': 'lambda x: 4 ** (0 * x)', 'offset': 0}","[1, 1, 1, 1, 1, 1]",lambda x: (x * 0) + 1,1,True,True
"{'fn': 'lambda x: (x * 4) % (0+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0, 0, 0]",lambda x: 0,0,False,True
"{'fn': 'lambda x: (5 * x) ** 2', 'offset': 0}","[0, 25, 100, 225, 400, 625, 900]",lambda x: (5 * x) ** 2 if x % 2 == 0 else 0,1225,False,True
"{'fn': 'lambda x: (3 * x) + 2', 'offset': 0}","[2, 5, 8, 11, 14, 17, 20, 23, 26]",lambda x: 3 * x + 2,29,False,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 2 * x * fn(fn,x-1) + 2)', 'offset': 0}","[1, 4, 18]",lambda x: (x ** 2) + 1 if x > 0 else 1,100,False,False
"{'fn': 'lambda x: (x * 1) % (4+1)', 'offset': 0}","[0, 1, 2, 3, 4, 0, 1, 2, 3]",lambda x: x % 5 if x < 5 else (x - 5) % 4,4,False,True
"{'fn': 'lambda x: 2 ** (3 * x)', 'offset': 0}","[1, 8, 64, 512, 4096]",lambda x: 8 ** (x - 1) if x > 0 else 1,32768,False,True
"{'fn': 'lambda x: (5 * x) + 4', 'offset': 0}","[4, 9, 14, 19, 24, 29, 34]",lambda x: (5 * x) - 11 + (x % 2),39,False,True
"{'fn': 'lambda x: 3 ** (1 * x)', 'offset': 0}","[1, 3, 9, 27]",lambda x: 3 ** x,81,True,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 4 * x * fn(fn,x-1) + 2)', 'offset': 0}","[1, 6, 50, 602, 9634, 192682, 4624370]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 1 if x%2==0 else 2 * x * fn(fn,x-1) + 3)",132992550,False,False
"{'fn': 'lambda x: (x * 5) % (1+1)', 'offset': 0}","[0, 1, 0, 1, 0, 1]",lambda x: x % 2,1,True,False
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 4 * x * fn(fn,x-1) + 0)', 'offset': 0}","[1, 4, 32, 384, 6144, 122880]",lambda x: 2**(x+1) * (x+1),2949120,False,True
"{'fn': 'lambda x: (1 * x) | 4', 'offset': 0}","[4, 5, 6, 7]",lambda x: (1 * x) + 4,8,True,False
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (0 + 1)][x]', 'offset': 0}","[1, 2, 3]",lambda x: x + 1,4,True,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 2)', 'offset': 0}","[1, 7, 72]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) - 4 * (-1) ** x)",871,False,False
"{'fn': 'lambda x: (3 * x) | 1', 'offset': 0}","[1, 3, 7]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 2 * fn(fn,x-1) + x)",15,False,False
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 1)', 'offset': 0}","[1, 6, 61, 916, 18321, 458026, 13740781, 480927336, 19237093441]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 6 * fn(fn,x-1) - 5 * (-1) ** x)",871782911,False,False
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 3 * x * fn(fn,x-1) + 3)', 'offset': 0}","[1, 6, 39, 354, 4251, 63768, 1147827, 24104370, 578504883]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 1 if x%2==0 else 2 * fn(fn,x-1) + 3)",15511601526,False,False
"{'fn': 'lambda x: (x * 4) % (1+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0]",lambda x: 0,0,True,True
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (4 + 1)][x]', 'offset': 0}","[1, 2, 3, 4, 5, 6, 7, 8]",lambda x: x + 1,9,True,True
"{'fn': 'lambda x: (2 * x) | 2', 'offset': 0}","[2, 2, 6]",lambda x: (x ** 2 + 2) // (x + 1),14,False,False
"{'fn': 'lambda x: (3 * x) ** 3', 'offset': 0}","[0, 27, 216, 729, 1728, 3375, 5832, 9261]",lambda x: (x ** 3) if x < 4 else (x + 1) ** 3,13824,False,True
"{'fn': 'lambda x: (5 * x) | 1', 'offset': 0}","[1, 5, 11, 15, 21, 25]",lambda x: (x // 2) * 6 + (x % 2) * 4 + 1,31,False,True
"{'fn': 'lambda x: [i for i in range(100) if i % (2 + 1) or i % (4 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,True
"{'fn': 'lambda x: (3 * x) + 1', 'offset': 0}","[1, 4, 7, 10, 13, 16, 19, 22]",lambda x: (3 * x) + 1,25,True,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 0)', 'offset': 0}","[1, 5, 50, 750, 15000, 375000, 11250000]",lambda x: 5**(x-1) * (x%2+1) if x>2 else x+1,393750000,False,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 3 * x * fn(fn,x-1) + 0)', 'offset': 0}","[1, 3, 18, 162]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 3 * x * fn(fn,x-1) + 1)",1944,False,True
"{'fn': 'lambda x: 1 ** (1 * x)', 'offset': 0}","[1, 1, 1, 1]",lambda x: 1 ** (0 * x),1,True,True
"{'fn': 'lambda x: [i for i in range(100) if i % (4 + 1) or i % (4 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: (1 * x) + 1,5,True,False
"{'fn': 'lambda x: (4 * x) ** 3', 'offset': 0}","[0, 64, 512, 1728, 4096, 8000]",lambda x: (x + 1) ** 3 if x < 6 else 0,13824,False,True
"{'fn': 'lambda x: 1 ** (0 * x)', 'offset': 0}","[1, 1, 1]",lambda x: (x * 0) | 1,1,True,True
"{'fn': 'lambda x: (3 * x) * 3', 'offset': 0}","[0, 9, 18]",lambda x: 9 * x,27,True,True
"{'fn': 'lambda x: [i for i in range(100) if i % (3 + 1) or i % (4 + 1)][x]', 'offset': 0}","[1, 2, 3, 4, 5]",lambda x: x + 1,6,True,True
"{'fn': 'lambda x: (4 * x) * 4', 'offset': 0}","[0, 16, 32, 48, 64, 80, 96, 112, 128]",lambda x: (16 * x) + 0 if x <= 8 else None,144,False,True
"{'fn': 'lambda x: (5 * x) + 2', 'offset': 0}","[2, 7, 12, 17, 22, 27, 32, 37, 42]",lambda x: 5 * x + 2 if x % 2 == 0 else 5 * (x - 1) + 7,47,False,True
"{'fn': 'lambda x: 4 ** (2 * x)', 'offset': 0}","[1, 16, 256, 4096, 65536, 1048576]",lambda x: 16 ** x if x > 0 else 1,16777216,True,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 1 * x * fn(fn,x-1) + 1)', 'offset': 0}","[1, 2, 5, 16, 65]",lambda x: 4 ** x - 3 ** x,326,False,True
"{'fn': 'lambda x: (x * 4) % (3+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0]",lambda x: 0,0,True,True
"{'fn': 'lambda x: (2 * x) ** 2', 'offset': 0}","[0, 4, 16, 36, 64, 100]",lambda x: x ** 2 if x > 0 else 0,144,False,True
"{'fn': 'lambda x: (4 * x) ** 4', 'offset': 0}","[0, 256, 4096, 20736, 65536, 160000, 331776]","(lambda a:lambda v:a(a,v))(lambda fn,x:0 if x==0 else (x**4) + fn(fn,x-1))",614656,False,True
"{'fn': 'lambda x: (4 * x) ** 2', 'offset': 0}","[0, 16, 64, 144, 256]",lambda x: (2 * x) ** 2 if x > 0 else 0,400,False,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 3)', 'offset': 0}","[1, 8, 83, 1248, 24963]",lambda x: int((2 * x - 1) ** 2 - 1) if x % 2 == 1 else int((2 * x - 1) ** 2 / 2),624008,False,False
"{'fn': 'lambda x: (x * 2) % (2+1)', 'offset': 0}","[0, 2, 1, 0, 2, 1, 0, 2, 1]","lambda x: [0, 2, 1][x % 3]",0,False,True
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (1 + 1)][x]', 'offset': 0}","[1, 2, 3, 4, 5, 7, 8, 9]",lambda x: [i for i in range(100) if i % (6 + 1) or i % (0 + 1)][x] + (x >= 5),10,False,True
"{'fn': 'lambda x: (4 * x) * 0', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0, 0, 0]",lambda x: (10 * x) * 0,0,False,True
"{'fn': 'lambda x: (5 * x) * 0', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0]",lambda x: (x * 0) % (0+1),0,True,True
"{'fn': 'lambda x: (1 * x) ** 2', 'offset': 0}","[0, 1, 4, 9, 16, 25]",lambda x: x ** 2,36,True,True
"{'fn': 'lambda x: (4 * x) * 2', 'offset': 0}","[0, 8, 16, 24, 32, 40, 48, 56, 64]",lambda x: 8 * x if x > 0 else 0,72,False,True
"{'fn': 'lambda x: (x * 3) % (2+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0, 0, 0]",lambda x: (10 * x) * 0,0,False,True
"{'fn': 'lambda x: (2 * x) ** 0', 'offset': 0}","[1, 1, 1, 1, 1, 1, 1, 1]",lambda x: 1 if x < 8 else 0,1,True,True
"{'fn': 'lambda x: (x * 3) % (4+1)', 'offset': 0}","[0, 3, 1, 4, 2]",lambda x: (x // 2) + (x % 2) * 3,5,True,False
"{'fn': 'lambda x: 3 ** (0 * x)', 'offset': 0}","[1, 1, 1, 1, 1]",lambda x: 1 ** (0 * x),1,True,True
"{'fn': 'lambda x: 5 ** (2 * x)', 'offset': 0}","[1, 25, 625, 15625, 390625, 9765625, 244140625, 6103515625, 152587890625]",lambda x: 5 ** (x+1),3814697265625,False,True
"{'fn': '(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) + 4)', 'offset': 0}","[1, 9, 94, 1414, 28284, 707104, 21213124]","(lambda a:lambda v:a(a,v))(lambda fn,x:1 if x==0 else 5 * x * fn(fn,x-1) - 4 * x * fn(fn,x-1) ** 2 + 1)",743642764,False,False
"{'fn': 'lambda x: 3 ** (4 * x)', 'offset': 0}","[1, 81, 6561, 531441, 43046721, 3486784401]",lambda x: 3 ** (2 ** x),282429536481,False,True
"{'fn': 'lambda x: (1 * x) + 4', 'offset': 0}","[4, 5, 6, 7]",lambda x: (1 * x) + 4,8,True,True
"{'fn': 'lambda x: (x * 5) % (3+1)', 'offset': 0}","[0, 1, 2, 3, 0, 1, 2, 3, 0]",lambda x: x % 4 if x < 9 else 0,1,False,True
"{'fn': 'lambda x: [i for i in range(100) if i % (5 + 1) or i % (3 + 1)][x]', 'offset': 0}","[1, 2, 3, 4]",lambda x: x + 1,5,True,True
"{'fn': 'lambda x: (1 * x) * 0', 'offset': 0}","[0, 0, 0, 0, 0, 0, 0]",lambda x: (x * 0) % (1+1),0,True,True
"{'fn': 'lambda x: (x * 5) % (4+1)', 'offset': 0}","[0, 0, 0]",lambda x: 0 ** (0 * x),0,False,True
"{'fn': 'lambda x: (2 * x) + 4', 'offset': 0}","[4, 6, 8, 10, 12, 14]",lambda x: (1 * x) * 2 + 2,16,True,True
"{'fn': 'lambda x: (4 * x) ** 0', 'offset': 0}","[1, 1, 1, 1, 1, 1, 1, 1, 1]",lambda x: (1 * x) * 0 + 1,1,False,True
"{'fn': 'lambda x: (x * 2) % (4+1)', 'offset': 0}","[0, 2, 4, 1, 3]",lambda x: (2 * x) % 5 if x < 3 else (2 * x - 7) % 5,5,False,False
"{'fn': 'lambda x: (5 * x) ** 4', 'offset': 0}","[0, 625, 10000, 50625, 160000]",lambda x: (x ** 4) if x % 2 == 0 else (5 ** 4),390625,False,True
"{'fn': 'lambda x: (x * 2) % (1+1)', 'offset': 0}","[0, 0, 0, 0, 0, 0]",lambda x: (7 * x) * 0,0,True,True
"{'fn': 'lambda x: (1 * x) * 4', 'offset': 0}","[0, 4, 8, 12, 16, 20, 24, 28, 32]",lambda x: 4 * x,36,False,True
"{'fn': 'lambda x: (5 * x) * 1', 'offset': 0}","[0, 5, 10, 15]",lambda x: 5 * x,20,True,True
"{'fn': 'lambda x: [i for i in range(100) if i % (1 + 1) or i % (4 + 1)][x]', 'offset': 0}","[1, 2, 3, 4, 5, 6]",lambda x: 1 * x + 1,7,True,True
"{'fn': 'lambda x: 5 ** (4 * x)', 'offset': 0}","[1, 625, 390625]",lambda x: 5 ** (2 ** x) if x >= 0 else None,244140625,False,True
"{'fn': 'lambda x: (5 * x) + 1', 'offset': 0}","[1, 6, 11, 16]",lambda x: 5 * x + (-4) ** x,21,False,True
"{'fn': 'lambda x: (3 * x) ** 4', 'offset': 0}","[0, 81, 1296, 6561, 20736, 50625]",lambda x: (9 ** x) * (x % 2 == 1),104976,False,True
